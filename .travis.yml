# Based on https://github.com/ldionne/hana/blob/master/.travis.yml
dist: focal
cache: ccache
language: cpp

#branches:
#  only:
#  - linux
#  - xd_dev
#  - "/^v\\d+\\./"

os:
- linux

matrix:
  include:
    - arch: arm64
      env: C_COMPILER=gcc-8 CXX_COMPILER=g++-8 TARGET_CPU=x64 BUILD_CONFIGURATION=Release
      addons: &gcc8
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-8

#    - arch: arm64
#      env: C_COMPILER=gcc-8 CXX_COMPILER=g++-8 TARGET_CPU=x64 BUILD_CONFIGURATION=Debug
#      addons: *gcc8

    - arch: amd64
      env: C_COMPILER=gcc-8 CXX_COMPILER=g++-8 TARGET_CPU=x64 BUILD_CONFIGURATION=Release
      addons: *gcc8

    - arch: amd64
      env: C_COMPILER=gcc-8 CXX_COMPILER=g++-8 TARGET_CPU=x64 BUILD_CONFIGURATION=Debug
      addons: *gcc8

#    - env: C_COMPILER=clang-5.0 CXX_COMPILER=clang++-5.0 TARGET_CPU=x64 BUILD_CONFIGURATION=Release
#      addons: &clang50
#        apt:
#          sources:
#            - llvm-toolchain-trusty-5.0
#          packages:
#            - clang-5.0

#    - env: C_COMPILER=clang-5.0 CXX_COMPILER=clang++-5.0 TARGET_CPU=x84 BUILD_CONFIGURATION=Release
#      addons: *clang50

#    - env: C_COMPILER=clang-6.0 CXX_COMPILER=clang++-6.0 TARGET_CPU=x64 BUILD_CONFIGURATION=Release
#      addons: &clang60
#        apt:
#          sources:
#            - llvm-toolchain-trusty-6.0
#          packages:
#            - clang-6.0

#    - env: C_COMPILER=clang-6.0 CXX_COMPILER=clang++-6.0 TARGET_CPU=x84 BUILD_CONFIGURATION=Release
#      addons: *clang60

install:
  - export CC=${C_COMPILER}
  - export CXX=${CXX_COMPILER}
  - ${CXX} --version

before_script:
  - export core_count=$(nproc || echo 4) && echo core_count = $core_count
  - git submodule deinit Externals/cryptopp
  - mkdir bin && cd bin

  - if [ $TARGET_CPU == x64 ]; then
       sudo apt-get install -y libegl1-mesa-dev libgles2-mesa-dev libopenal-dev libtbb-dev libcrypto++-dev liblockfile-dev libfreeimage3 libfreeimage-dev libfreeimageplus-dev liblua5.1-0-dev libssl-dev libogg-dev libtheora-bin libtheora-dev libvorbis-dev liblzo2-dev libjpeg-dev libncurses5-dev libpcre3-dev libsdl2-2.0-0 libsdl2-dev libgl1 libgl1-mesa-dev libgl1-mesa-dev libgl-dev;
       
       if [ $TRAVIS_CPU_ARCH == arm64 ]; then
          sudo apt-get install -y snapd
          sudo snap install cmake - --beta --classic
          export PATH=/snap/cmake/current/bin:$PATH;

          wget --no-check-certificate http://ftp.br.debian.org/debian/pool/main/g/glew/libglew2.1_2.1.0-4_arm64.deb;
          wget --no-check-certificate http://ftp.br.debian.org/debian/pool/main/g/glew/libglew-dev_2.1.0-4_arm64.deb;
          sudo dpkg -i *.deb;
       else
          sudo apt-get install -y cmake libglew2.1 libglew-dev;
       fi
       
       sudo apt-get -f -y install;
       CFLAGS="-w" CXXFLAGS="-w" cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION;
    fi

script:
- if [ $TRAVIS_OS_NAME == linux ]; then make -j $core_count package && file openxray_1.6.02_*.deb; fi

deploy:
  provider: releases
  api_key:
    secure: kGVniXDR926BfVcA97y25BzALbijvgboBsozZzY9yc8RPz15Q4YG474h7vl14/J1
  file: ./*.deb
  draft: true

notifications:
  email: false

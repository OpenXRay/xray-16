<Externals>
<cr access="none" depth="0" kind="class" name="ILevelCompilerLogger" id="290ee18e417377a5b142654619b9ca27_a47b740e4d89ac99d5dcfc07beff0813" file="2" linestart="4" lineend="20">
<m name="clMsgV" id="290ee18e417377a5b142654619b9ca27_59a51927a18591db7a5e3e01972a85ac" file="2" linestart="12" lineend="12" pure="true" virtual="true" imported="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="format" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="args" proto="va_list" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<Tdef>
<Tdef>
<pt>
<bt name="char"/>
</pt>
</Tdef>
</Tdef>
</Tdef>
</p>
</m>
<m name="StatusV" id="290ee18e417377a5b142654619b9ca27_04f87c8b71a26dfcf8c24b9cce3a1d8f" file="2" linestart="15" lineend="15" pure="true" virtual="true" imported="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="format" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="args" proto="va_list" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<Tdef>
<Tdef>
<pt>
<bt name="char"/>
</pt>
</Tdef>
</Tdef>
</Tdef>
</p>
</m>
<m name="Progress" id="290ee18e417377a5b142654619b9ca27_344bead3f812fd4f2becd9332fec5010" file="2" linestart="16" lineend="16" pure="true" virtual="true" imported="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="progress" proto="float" isLiteral="true" isPrimitive="true" access2="none">
<bt name="float"/>
</p>
</m>
</cr>
<cr access="none" depth="1" kind="class" name="LevelCompilerLoggerWindow" id="9ce3928c462f13f76bf49421f90c94cc_b67be562f78263a838bba79ed67f1e7d" file="3" linestart="5" lineend="53">
<base access="public">
<rt>
<cr id="290ee18e417377a5b142654619b9ca27_a47b740e4d89ac99d5dcfc07beff0813"/>
</rt>
</base>
<m name="instance" id="9ce3928c462f13f76bf49421f90c94cc_8567b6c3a9a2b638ad7cdfb467928ff3" file="3" linestart="47" lineend="47" imported="true" access="public" storage="static">
<fpt cc="cdecl" proto="LevelCompilerLoggerWindow &amp;">
<lrf>
<rt>
<cr id="9ce3928c462f13f76bf49421f90c94cc_b67be562f78263a838bba79ed67f1e7d"/>
</rt>
</lrf>
</fpt>
</m>
</cr>
<f name="__builtin_va_start" id="f4f6b5f42ba6c65f04bfe35687090d5f_aa855ec172cf23e5dc0fd9c95cf669fb" file="4" linestart="71" lineend="71" extC="true" implicit="true" variadic="true" access="none" storage="extern">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="__builtin_va_list &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<Tdef>
<pt>
<bt name="char"/>
</pt>
</Tdef>
</lrf>
</p>
</f>
<f name="__builtin_va_end" id="f4f6b5f42ba6c65f04bfe35687090d5f_03c088a8efed0ad45f3f1bd7a68d4657" file="4" linestart="79" lineend="79" extC="true" implicit="true" access="none" storage="extern">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="__builtin_va_list &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<Tdef>
<pt>
<bt name="char"/>
</pt>
</Tdef>
</lrf>
</p>
</f>
<f name="cdecl_cast" id="e2b297c0c8f732f792237096132fd2f5_e1c19e4e5c9e10c3e67a972122175ce6" file="5" linestart="16" lineend="19" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="decltype(cdecl_cast(c, &amp; TLambda::operator()))">
<decltype/>
</fpt>
<p name="c" proto="const TLambda &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="cdecl_cast" id="e2b297c0c8f732f792237096132fd2f5_0e970c3863f97a48c9f182a663a7f133" file="5" linestart="15" lineend="19">
<template_parameters>
<ttp name="TLambda" id="e2b297c0c8f732f792237096132fd2f5_48c0ae3e0b5130e9462a1a7fe3477591" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f name="cdecl_cast" id="e2b297c0c8f732f792237096132fd2f5_e1c19e4e5c9e10c3e67a972122175ce6" file="5" linestart="16" lineend="19" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="decltype(cdecl_cast(c, &amp; TLambda::operator()))">
<decltype/>
</fpt>
<p name="c" proto="const TLambda &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
</Externals>

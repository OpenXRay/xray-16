<Externals>
<tm namespace="std" access="none" kind="class" name="allocator" id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85" file="3" linestart="63" lineend="64">
<template_parameters>
<ttp name="" id="a270e00b6e0c45c9590b40a0d0c34028_7616e420bc7988a0fdef4434c8dab66a" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" kind="class" name="allocator" id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85" file="3" linestart="64" lineend="64"/>
</tm>
<cr namespace="std.__cxx11" access="none" kind="class" name="basic_string" id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c" file="4" linestart="71" lineend="71"/>
<cts Spec="&lt;char&gt;" namespace="std" access="none" depth="0" pod="true" kind="struct" name="char_traits" id="4189cf4795d943b623ff3abe8b70c24f_76e43d9fa50c2ce16dafa9452550a098" file="5" linestart="274" lineend="382" previous="8c4e62790b6098b6fde5c5da33f73a64_76e43d9fa50c2ce16dafa9452550a098"/>
<cr namespace="std" access="none" depth="0" kind="class" name="exception" id="2b5393bbe3f19671327b52be30b686c8_b84e67c1c1bf483f7187d5232b53ef08" file="6" linestart="60" lineend="70"/>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="Exception" id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6" file="7" linestart="150" lineend="191">
<base access="public">
<ety>
<rt>
<cr id="2b5393bbe3f19671327b52be30b686c8_b84e67c1c1bf483f7187d5232b53ef08"/>
</rt>
</ety>
</base>
<e parent="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6" access="public" name="ErrorType" id="5c1c5c04b0da674710abb2f6fef6fcfd_4f4f301d7b6519f884419042f229b898" file="7" linestart="155" lineend="170">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="InvalidDataFormat" id="5c1c5c04b0da674710abb2f6fef6fcfd_2993a0c8d70765cb07b9d0629e329df6" file="7" linestart="201" lineend="205">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</base>
<c name="InvalidDataFormat" id="5c1c5c04b0da674710abb2f6fef6fcfd_294f888bbaab74ca3ccc91c5f143f16c" file="7" linestart="204" lineend="204" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="s" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<c name="InvalidDataFormat" id="5c1c5c04b0da674710abb2f6fef6fcfd_c3dd83963dcb0948a56c7d2397bf1f6d" file="7" linestart="201" lineend="201" copyconst="true" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const CryptoPP::InvalidDataFormat &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_2993a0c8d70765cb07b9d0629e329df6"/>
</rt>
</QualType>
</lrf>
</p>
</c>
<c name="InvalidDataFormat" id="5c1c5c04b0da674710abb2f6fef6fcfd_3dda519ecbcbbba33ad8c97392a17a42" file="7" linestart="201" lineend="201" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::InvalidDataFormat &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_2993a0c8d70765cb07b9d0629e329df6"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="Clonable" id="5c1c5c04b0da674710abb2f6fef6fcfd_378f319fc4f2b63076bfbc3a7f5c4552" file="7" linestart="495" lineend="506"/>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="Algorithm" id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a" file="7" linestart="510" lineend="532">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_378f319fc4f2b63076bfbc3a7f5c4552"/>
</rt>
</base>
<m name="AlgorithmName" id="5c1c5c04b0da674710abb2f6fef6fcfd_54feac89e36047ede7b271ebe7e74a18" file="7" linestart="531" lineend="531" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="std::string">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="SimpleKeyingInterface" id="5c1c5c04b0da674710abb2f6fef6fcfd_1eed4339a7ec216093bc14c615bc12b0" file="7" linestart="537" lineend="740">
<e parent="5c1c5c04b0da674710abb2f6fef6fcfd_1eed4339a7ec216093bc14c615bc12b0" access="public" name="IV_Requirement" id="5c1c5c04b0da674710abb2f6fef6fcfd_5a3ee629841e81f645a4ae1dc1917cd6" file="7" linestart="611" lineend="622">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="HashTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_e4311e2ce757994731b0233ee4ec1e5d" file="7" linestart="1003" lineend="1162">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
<m name="DigestSize" id="5c1c5c04b0da674710abb2f6fef6fcfd_ecc8f3b5527eb6e0dc9e9cf3f3e9d28f" file="7" linestart="1043" lineend="1043" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="BlockSize" id="5c1c5c04b0da674710abb2f6fef6fcfd_ba85cfb0138e39817ec373097763c763" file="7" linestart="1054" lineend="1054" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="ThrowIfInvalidTruncatedSize" id="5c1c5c04b0da674710abb2f6fef6fcfd_07d0fb1ba1c8a3ccce2faf8cbf150537" file="7" linestart="1161" lineend="1161" access="protected">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="size" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<c name="HashTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_4c0d3991ca3eb8dd6ce910f08b2efdb5" file="7" linestart="1003" lineend="1003" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="MessageAuthenticationCode" id="5c1c5c04b0da674710abb2f6fef6fcfd_b9ca281bd248cc8ac3896c8342a55b6d" file="7" linestart="1182" lineend="1186">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1eed4339a7ec216093bc14c615bc12b0"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_e4311e2ce757994731b0233ee4ec1e5d"/>
</rt>
</base>
<c name="MessageAuthenticationCode" id="5c1c5c04b0da674710abb2f6fef6fcfd_e07c8b0affca2dcb0e718b0e58bbb3c7" file="7" linestart="1182" lineend="1182" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" pod="true" kind="struct" name="CompileAssert" id="1854966e082704a783697c5ac0b862ce_f4c1694754160c209e0e66e57d64e57d" file="8" linestart="147" lineend="150"/>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="FixedSizeSecBlock" id="d8d9268f1e37d2a96d5639565abceb80_e5b9e08437b1aa2b8bf563e2d2c1abd0" file="9" linestart="850" lineend="855">
<base access="public">
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="FixedSizeAlignedSecBlock" id="d8d9268f1e37d2a96d5639565abceb80_65a83dc992527642ad9690fcb9a172be" file="9" linestart="863" lineend="865">
<base access="public">
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_e5b9e08437b1aa2b8bf563e2d2c1abd0"/>
<template_arguments>
<ttp/>
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_5045ba1756b4b27cd6e95fe14e1f7005"/>
<template_arguments>
<ttp/>
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_2994a34b8e92aa3dfa08e8f9b4c63121"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="ClonableImpl" id="24c688d13d29c77e002480b75c46e1ba_843cbe5db8482b07f774e0c63ba6baf4" file="10" linestart="26" lineend="30">
<base access="public">
<ttp/>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="AlgorithmImpl" id="24c688d13d29c77e002480b75c46e1ba_995360f65c4f832bf849db0dde1380bb" file="10" linestart="38" lineend="51">
<base access="public">
<ttp/>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="HashInputTooLong" id="9cef79da01862170122dae4a26d54be2_5df76dd7d365e7f96d50e9ec6aaad45c" file="1" linestart="23" lineend="28">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_2993a0c8d70765cb07b9d0629e329df6"/>
</rt>
</base>
<c name="HashInputTooLong" id="9cef79da01862170122dae4a26d54be2_9ab3e4231ddf4ca88e6d7eedcd05d186" file="1" linestart="23" lineend="23" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::HashInputTooLong &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="9cef79da01862170122dae4a26d54be2_5df76dd7d365e7f96d50e9ec6aaad45c"/>
</rt>
</rrf>
</p>
</c>
</cr>
<f namespace="std" name="operator+" id="c52fd730cc6ce594deb20894bdaf5460_e5a834d927dbeb289be8e54f7b7a7a22" file="11" linestart="1156" lineend="1169" previous="3fdd9de4839192b19bcb40e3786e6725_e5a834d927dbeb289be8e54f7b7a7a22" operator="true" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__rhs" proto="const basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
</f>
<ft name="operator+" id="c52fd730cc6ce594deb20894bdaf5460_7ba2f4a7b438046b66e55d748a951b5c" file="11" linestart="1155" lineend="1169" previous="3fdd9de4839192b19bcb40e3786e6725_7ba2f4a7b438046b66e55d748a951b5c">
<template_parameters>
<ttp name="_CharT" id="c52fd730cc6ce594deb20894bdaf5460_1bd37909c17765ad5cc57898a7070348" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="c52fd730cc6ce594deb20894bdaf5460_a2eb06c899eb8ca2dfd9d72fbb8eb00a" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="c52fd730cc6ce594deb20894bdaf5460_500608002246196e596a2809845a4d5d" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<f namespace="std" name="operator+" id="c52fd730cc6ce594deb20894bdaf5460_e5a834d927dbeb289be8e54f7b7a7a22" file="11" linestart="1156" lineend="1169" previous="3fdd9de4839192b19bcb40e3786e6725_e5a834d927dbeb289be8e54f7b7a7a22" operator="true" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__rhs" proto="const basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
</f>
</ft>
<f name="memcpy" id="0ebe9cde6661249e1dd240987ca511cc_60bc7b595257868b3d58e003eb334889" file="12" linestart="72" lineend="72" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f name="memset" id="0ebe9cde6661249e1dd240987ca511cc_01f056bb0311297cf054435e7cf7ee95" file="12" linestart="74" lineend="74" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="ModPowerOf2" id="1854966e082704a783697c5ac0b862ce_a6777134ed27ce0ccbc9912d7ceaf1b3" file="8" linestart="913" lineend="918" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T2">
<ttp/>
</fpt>
<p name="a" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="ModPowerOf2" id="1854966e082704a783697c5ac0b862ce_d078f75a35e21ef3387f96f5e12b0f52" file="8" linestart="912" lineend="918">
<template_parameters>
<ttp name="T1" id="1854966e082704a783697c5ac0b862ce_1dc9ca13da414dd54b5006e9e7b118c8" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="T2" id="1854966e082704a783697c5ac0b862ce_4cbeebb9fcda14677eff633aeb0106da" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="CryptoPP" name="ModPowerOf2" id="1854966e082704a783697c5ac0b862ce_a6777134ed27ce0ccbc9912d7ceaf1b3" file="8" linestart="913" lineend="918" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T2">
<ttp/>
</fpt>
<p name="a" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="GetAlignmentOf" id="1854966e082704a783697c5ac0b862ce_76789e0e36ed7a7ffdc70db2d7b65917" file="8" linestart="989" lineend="1013" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</f>
<ft name="GetAlignmentOf" id="1854966e082704a783697c5ac0b862ce_1f38618e2a211890b2a51fba74a638c9" file="8" linestart="988" lineend="1013">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_ce12453b99d05a647dac653271ced446" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="GetAlignmentOf" id="1854966e082704a783697c5ac0b862ce_76789e0e36ed7a7ffdc70db2d7b65917" file="8" linestart="989" lineend="1013" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</f>
</ft>
<f namespace="CryptoPP" name="IsAligned" id="1854966e082704a783697c5ac0b862ce_b82752bef6046801f8ecb97a57dcac94" file="8" linestart="1032" lineend="1035" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="ptr" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
</f>
<ft name="IsAligned" id="1854966e082704a783697c5ac0b862ce_ba0be5a8d32de956a12d8a45e3a69a9a" file="8" linestart="1031" lineend="1035">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_791e94f258e7b8de3da281b6abacc472" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="IsAligned" id="1854966e082704a783697c5ac0b862ce_b82752bef6046801f8ecb97a57dcac94" file="8" linestart="1032" lineend="1035" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="ptr" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="NativeByteOrderIs" id="1854966e082704a783697c5ac0b862ce_ef4127f78c2cdc13afb4fd957da7250f" file="8" linestart="1062" lineend="1065" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="order" proto="CryptoPP::ByteOrder" isLiteral="true" access2="none">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</p>
</f>
<f namespace="CryptoPP" name="ConditionalByteReverse" id="1854966e082704a783697c5ac0b862ce_e59cff5c97983a3105d27db323683dd5" file="8" linestart="1892" lineend="1895" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T">
<ttp/>
</fpt>
<p name="order" proto="CryptoPP::ByteOrder" isLiteral="true" access2="none">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</p>
<p name="value" proto="T" access2="none">
<ttp/>
</p>
</f>
<ft name="ConditionalByteReverse" id="1854966e082704a783697c5ac0b862ce_e8a022ba910884162506a860ebbdae59" file="8" linestart="1891" lineend="1895">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_6f74ed0bc62008a94d5f49648ad38b9f" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="ConditionalByteReverse" id="1854966e082704a783697c5ac0b862ce_e59cff5c97983a3105d27db323683dd5" file="8" linestart="1892" lineend="1895" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T">
<ttp/>
</fpt>
<p name="order" proto="CryptoPP::ByteOrder" isLiteral="true" access2="none">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</p>
<p name="value" proto="T" access2="none">
<ttp/>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="ByteReverse" id="1854966e082704a783697c5ac0b862ce_43cb4ca3df0109a6db119fad689305d9" file="8" linestart="1933" lineend="1939" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="out" proto="T *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
<p name="in" proto="const T *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="byteCount" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<ft name="ByteReverse" id="1854966e082704a783697c5ac0b862ce_3dd10f742f1cce8f43f7a0145f140655" file="8" linestart="1932" lineend="1939">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_183ee406bcadcc0b757396cace8c88d0" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="ByteReverse" id="1854966e082704a783697c5ac0b862ce_43cb4ca3df0109a6db119fad689305d9" file="8" linestart="1933" lineend="1939" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="out" proto="T *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
<p name="in" proto="const T *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="byteCount" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="ConditionalByteReverse" id="1854966e082704a783697c5ac0b862ce_26e188429d588febc85240961a431c88" file="8" linestart="1955" lineend="1961" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="order" proto="CryptoPP::ByteOrder" isLiteral="true" access2="none">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</p>
<p name="out" proto="T *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
<p name="in" proto="const T *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="byteCount" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<ft name="ConditionalByteReverse" id="1854966e082704a783697c5ac0b862ce_e8a022ba910884162506a860ebbdae59" file="8" linestart="1954" lineend="1961">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_6031c411733c32e03268fca8641d6f6f" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="ConditionalByteReverse" id="1854966e082704a783697c5ac0b862ce_26e188429d588febc85240961a431c88" file="8" linestart="1955" lineend="1961" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="order" proto="CryptoPP::ByteOrder" isLiteral="true" access2="none">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</p>
<p name="out" proto="T *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
<p name="in" proto="const T *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="byteCount" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="SafeRightShift" id="1854966e082704a783697c5ac0b862ce_53b99b4e663b21387f136f6f74e4976f" file="8" linestart="2422" lineend="2425" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T">
<ttp/>
</fpt>
<p name="value" proto="T" access2="none">
<ttp/>
</p>
</f>
<ft name="SafeRightShift" id="1854966e082704a783697c5ac0b862ce_1b9e3486aa0f3728b88772561cedad03" file="8" linestart="2421" lineend="2425">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_7389dd6805560b2ce331ecfb62fa9a7f" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="CryptoPP" name="SafeRightShift" id="1854966e082704a783697c5ac0b862ce_53b99b4e663b21387f136f6f74e4976f" file="8" linestart="2422" lineend="2425" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T">
<ttp/>
</fpt>
<p name="value" proto="T" access2="none">
<ttp/>
</p>
</f>
</ft>
</Externals>

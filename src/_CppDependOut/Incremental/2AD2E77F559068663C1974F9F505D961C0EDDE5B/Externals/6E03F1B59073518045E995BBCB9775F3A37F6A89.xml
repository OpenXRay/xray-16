<Externals>
<tm namespace="std" access="none" kind="class" name="allocator" id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85" file="4" linestart="63" lineend="64">
<template_parameters>
<ttp name="" id="a270e00b6e0c45c9590b40a0d0c34028_7616e420bc7988a0fdef4434c8dab66a" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" kind="class" name="allocator" id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85" file="4" linestart="64" lineend="64"/>
</tm>
<cts Spec="&lt;char&gt;" namespace="std" access="none" depth="0" pod="true" kind="struct" name="char_traits" id="4189cf4795d943b623ff3abe8b70c24f_76e43d9fa50c2ce16dafa9452550a098" file="5" linestart="274" lineend="382" previous="8c4e62790b6098b6fde5c5da33f73a64_76e43d9fa50c2ce16dafa9452550a098"/>
<tm namespace="std.__cxx11" access="none" depth="0" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_0f870db7a9e3f80681e1e50f59c3f3e1" file="6" linestart="76" lineend="3027" previous="8c4e62790b6098b6fde5c5da33f73a64_0f870db7a9e3f80681e1e50f59c3f3e1">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_41aab7ea0b2a4f5399789cbb735bff07" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="3fdd9de4839192b19bcb40e3786e6725_3a060dd87f1183c8aa805887fa645f27" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="3fdd9de4839192b19bcb40e3786e6725_9c7a236a234ceda5d84f65309cc08d1d" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<cr namespace="std.__cxx11" access="none" depth="0" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c" file="6" linestart="77" lineend="3027" previous="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c">
<cr access="public" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_603e5586ba4340527f4b759c0ded4f93" file="6" linestart="77" lineend="77"/>
<e parent="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c" access="private" name="" id="3fdd9de4839192b19bcb40e3786e6725_106ac808f271d67a4150e50dd05602d0" file="6" linestart="158" lineend="158">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<c name="basic_string&lt;_CharT, _Traits, _Alloc&gt;" id="3fdd9de4839192b19bcb40e3786e6725_08603b4699adc2ddc50f967a727ea49f" file="6" linestart="514" lineend="516" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__s" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__a" proto="const _Alloc &amp;" isRef="true" init="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<initlist id="3fdd9de4839192b19bcb40e3786e6725_f5cef7c408d7b48a39b25df9e50585f4"/>
</c>
<c name="basic_string&lt;_CharT, _Traits, _Alloc&gt;" id="3fdd9de4839192b19bcb40e3786e6725_2c83c181d4b7958082af4668ac526446" file="6" linestart="541" lineend="561" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__str" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<InjectedClassName>
<cr id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
</InjectedClassName>
</rrf>
</p>
<initlist id="3fdd9de4839192b19bcb40e3786e6725_f5cef7c408d7b48a39b25df9e50585f4"/>
</c>
</cr>
</tm>
<e namespace="CryptoPP" access="none" name="CipherDir" id="5c1c5c04b0da674710abb2f6fef6fcfd_6075433aae4dfef163747f186ec0cf80" file="7" linestart="114" lineend="118">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="ENCRYPTION" id="5c1c5c04b0da674710abb2f6fef6fcfd_fd90fd52fe53db1cf1c53741243696bb" file="7" linestart="116" lineend="116">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_6075433aae4dfef163747f186ec0cf80"/>
</et>
</ec>
<ec name="DECRYPTION" id="5c1c5c04b0da674710abb2f6fef6fcfd_e7ab3358f82dc30c4742818a2e0fe4de" file="7" linestart="118" lineend="118">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_6075433aae4dfef163747f186ec0cf80"/>
</et>
</ec>
</e>
<cr namespace="CryptoPP" access="none" depth="0" pod="true" kind="struct" name="EnumToType" id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1" file="7" linestart="126" lineend="129"/>
<e namespace="CryptoPP" access="none" name="ByteOrder" id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5" file="7" linestart="134" lineend="138">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="BIG_ENDIAN_ORDER" id="5c1c5c04b0da674710abb2f6fef6fcfd_0be5e7e5ceabc050bc6b86a4ee9a58fd" file="7" linestart="138" lineend="138">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</ec>
</e>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="NotImplemented" id="5c1c5c04b0da674710abb2f6fef6fcfd_a263e778c361a402dd5a16c33d01b551" file="7" linestart="215" lineend="219">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</base>
<c name="NotImplemented" id="5c1c5c04b0da674710abb2f6fef6fcfd_05102d5f5602ba8bf7005ae718e7ace6" file="7" linestart="215" lineend="215" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::NotImplemented &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a263e778c361a402dd5a16c33d01b551"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="NameValuePairs" id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2" file="7" linestart="285" lineend="446">
<m name="GetIntValueWithDefault" id="5c1c5c04b0da674710abb2f6fef6fcfd_c5385b6a9f2e63306696a8045bc7539e" file="7" linestart="388" lineend="389" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="defaultValue" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="Clonable" id="5c1c5c04b0da674710abb2f6fef6fcfd_378f319fc4f2b63076bfbc3a7f5c4552" file="7" linestart="495" lineend="506"/>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="Algorithm" id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a" file="7" linestart="510" lineend="532">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_378f319fc4f2b63076bfbc3a7f5c4552"/>
</rt>
</base>
<m name="AlgorithmName" id="5c1c5c04b0da674710abb2f6fef6fcfd_54feac89e36047ede7b271ebe7e74a18" file="7" linestart="531" lineend="531" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="std::string">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="SimpleKeyingInterface" id="5c1c5c04b0da674710abb2f6fef6fcfd_1eed4339a7ec216093bc14c615bc12b0" file="7" linestart="537" lineend="740">
<e parent="5c1c5c04b0da674710abb2f6fef6fcfd_1eed4339a7ec216093bc14c615bc12b0" access="public" name="IV_Requirement" id="5c1c5c04b0da674710abb2f6fef6fcfd_5a3ee629841e81f645a4ae1dc1917cd6" file="7" linestart="611" lineend="622">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="NOT_RESYNCHRONIZABLE" id="5c1c5c04b0da674710abb2f6fef6fcfd_4a286a6fd0c3e3bf22e5588baf49fc9c" file="7" linestart="621" lineend="621">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_5a3ee629841e81f645a4ae1dc1917cd6"/>
</et>
</ec>
</e>
<m name="AssertValidKeyLength" id="5c1c5c04b0da674710abb2f6fef6fcfd_2accb6d118a9b90f45b6c241a731c8a5" file="7" linestart="738" lineend="739" access="protected" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="BlockTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_79e4efb1d5dda747eb8937a0b4d24406" file="7" linestart="747" lineend="831">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
<e parent="5c1c5c04b0da674710abb2f6fef6fcfd_79e4efb1d5dda747eb8937a0b4d24406" access="public" name="FlagsForAdvancedProcessBlocks" id="5c1c5c04b0da674710abb2f6fef6fcfd_718d86a9a4dbdd6eb38272714477f385" file="7" linestart="805" lineend="815">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<m name="GetCipherDirection" id="5c1c5c04b0da674710abb2f6fef6fcfd_9b348182eb66aa8ebbb526bea4059020" file="7" linestart="830" lineend="830" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="CryptoPP::CipherDir">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_6075433aae4dfef163747f186ec0cf80"/>
</et>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="BlockCipher" id="5c1c5c04b0da674710abb2f6fef6fcfd_46cba31d9fbbff0cfc74779b2446a97e" file="7" linestart="1166" lineend="1170">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1eed4339a7ec216093bc14c615bc12b0"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_79e4efb1d5dda747eb8937a0b4d24406"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="SymmetricCipher" id="5c1c5c04b0da674710abb2f6fef6fcfd_1676dc7dc5a26ab8bd31f0b62b5eeb32" file="7" linestart="1174" lineend="1178">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1eed4339a7ec216093bc14c615bc12b0"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a0b12f51a580358015f21bd40217d86d"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="AuthenticatedSymmetricCipher" id="5c1c5c04b0da674710abb2f6fef6fcfd_4efac0130e2f1afca55e72fa270a629a" file="7" linestart="1205" lineend="1261">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_b9ca281bd248cc8ac3896c8342a55b6d"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a0b12f51a580358015f21bd40217d86d"/>
</rt>
</base>
</cr>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="member_ptr" id="66470bddfc6a50894905c3b9a37709a0_e675a7e9c492d66ffd9afcc7cc31a501" file="8" linestart="39" lineend="69">
<template_parameters>
<ttp name="T" id="66470bddfc6a50894905c3b9a37709a0_116a598831524f1b360022f5f98c3caa" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="member_ptr" id="66470bddfc6a50894905c3b9a37709a0_ffa4dc3c0f9ff58f718fbd56d0cf64b1" file="8" linestart="39" lineend="69">
<cr access="public" kind="class" name="member_ptr" id="66470bddfc6a50894905c3b9a37709a0_2176b9ee550b045e05ed25e40a582740" file="8" linestart="39" lineend="39"/>
<m name="operator-&gt;" id="66470bddfc6a50894905c3b9a37709a0_5ae11fd4a6ed4733aca2ea697560628c" file="8" linestart="49" lineend="49" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const T *">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</fpt>
</m>
<m name="operator-&gt;" id="66470bddfc6a50894905c3b9a37709a0_3498a0158a0141e829e66161856b0c0f" file="8" linestart="50" lineend="50" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T *">
<pt>
<ttp/>
</pt>
</fpt>
</m>
<m name="get" id="66470bddfc6a50894905c3b9a37709a0_14f562524acc367cfe47a475413ec64b" file="8" linestart="53" lineend="53" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T *">
<pt>
<ttp/>
</pt>
</fpt>
</m>
<m name="reset" id="66470bddfc6a50894905c3b9a37709a0_4d25bc20e63fe23214e12c737da48feb" file="8" linestart="62" lineend="62" access="public" hasbody="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="p" proto="T *" isPtr="true" init="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="value_ptr" id="66470bddfc6a50894905c3b9a37709a0_2d569c2e180283615ab7a74f9777affb" file="8" linestart="79" lineend="92">
<base access="public">
<tss>
<templatebase id="66470bddfc6a50894905c3b9a37709a0_ffa4dc3c0f9ff58f718fbd56d0cf64b1"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" pod="true" kind="struct" name="CompileAssert" id="1854966e082704a783697c5ac0b862ce_f4c1694754160c209e0e66e57d64e57d" file="9" linestart="147" lineend="150"/>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="TwoBases" id="1854966e082704a783697c5ac0b862ce_a0f02961b7b64188564ceb05b81a4781" file="9" linestart="203" lineend="205">
<base access="public">
<ttp/>
</base>
<base access="public">
<ttp/>
</base>
</cr>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="GetBlock" id="1854966e082704a783697c5ac0b862ce_17d66b7aa602943da1dcf0a8231d76f5" file="9" linestart="2237" lineend="2261">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_ba78b77db20f7ae462701efe11b19df1" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="B" id="1854966e082704a783697c5ac0b862ce_2a41ba8d8fa3686b2702056e1131365c" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="GetBlock" id="1854966e082704a783697c5ac0b862ce_54601093e3ca1736fdc09b986c1051cb" file="9" linestart="2238" lineend="2261">
<cr access="public" kind="class" name="GetBlock" id="1854966e082704a783697c5ac0b862ce_a28228f3fa7aa90438f4b07ce3072dcf" file="9" linestart="2238" lineend="2238"/>
<ft name="operator()" id="1854966e082704a783697c5ac0b862ce_31c4939b8f7047083a1845df28f7f528" file="9" linestart="2250" lineend="2257">
<template_parameters>
<ttp name="U" id="1854966e082704a783697c5ac0b862ce_cce432172855d48b161fe2c0c5129915" depth="1" index="0" proto="type-parameter-1-0"/>
</template_parameters>
<m name="operator()" id="1854966e082704a783697c5ac0b862ce_2c1edb10002f87d788b341ec5469c8c3" file="9" linestart="2251" lineend="2257" operator="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="GetBlock&lt;T, B, A&gt; &amp;">
<lrf>
<tss>
<templatebase id="1854966e082704a783697c5ac0b862ce_54601093e3ca1736fdc09b986c1051cb"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="x" proto="U &amp;" isRef="true" access2="none">
<lrf>
<ttp/>
</lrf>
</p>
</m>
</ft>
</cr>
</tm>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="PutBlock" id="1854966e082704a783697c5ac0b862ce_69861ed45696d01e097b1291c3bb700d" file="9" linestart="2279" lineend="2306">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_e53fc004f3133956b6b5921d273e2fec" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="B" id="1854966e082704a783697c5ac0b862ce_7c21030c238468fd867f7c4b8e46ad38" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="PutBlock" id="1854966e082704a783697c5ac0b862ce_fa016d2b2e80fd97dd91409f76120d7c" file="9" linestart="2280" lineend="2306">
<cr access="public" kind="class" name="PutBlock" id="1854966e082704a783697c5ac0b862ce_fc68b49267246749eaa0ce14a935468f" file="9" linestart="2280" lineend="2280"/>
<c name="PutBlock&lt;T, B, A&gt;" id="1854966e082704a783697c5ac0b862ce_b8ec092b0b4fbc691cdb04585109db37" file="9" linestart="2286" lineend="2287" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="xorBlock" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="block" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<initlist id="1854966e082704a783697c5ac0b862ce_b921de4c62bc1ddca00f0f02f0745966"/>
<initlist id="1854966e082704a783697c5ac0b862ce_ca86f41e08e44231ee69f6879fa9c4d2"/>
</c>
<ft name="operator()" id="1854966e082704a783697c5ac0b862ce_71694c95401746b83551d8513cc5ed50" file="9" linestart="2293" lineend="2301">
<template_parameters>
<ttp name="U" id="1854966e082704a783697c5ac0b862ce_1e030638acfe5360779dfc62d279e973" depth="1" index="0" proto="type-parameter-1-0"/>
</template_parameters>
<m name="operator()" id="1854966e082704a783697c5ac0b862ce_f463107e736318a32656eb1a44cb73a0" file="9" linestart="2294" lineend="2301" operator="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="PutBlock&lt;T, B, A&gt; &amp;">
<lrf>
<tss>
<templatebase id="1854966e082704a783697c5ac0b862ce_fa016d2b2e80fd97dd91409f76120d7c"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="x" proto="U" access2="none">
<ttp/>
</p>
</m>
</ft>
</cr>
</tm>
<tm namespace="CryptoPP" access="none" depth="0" pod="true" kind="struct" name="BlockGetAndPut" id="1854966e082704a783697c5ac0b862ce_0e114101d35be63140da3d90165ac82f" file="9" linestart="2317" lineend="2323">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_01f7b085c0df2d68d088d6889db3527f" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="B" id="1854966e082704a783697c5ac0b862ce_fb57670433a45d66a9a3582bca10cf4b" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" pod="true" kind="struct" name="BlockGetAndPut" id="1854966e082704a783697c5ac0b862ce_158d5b8ad0689b5eac724f4f1fb5d97a" file="9" linestart="2318" lineend="2323">
<cr access="public" kind="struct" name="BlockGetAndPut" id="1854966e082704a783697c5ac0b862ce_b8c3fbe44dbd2d43290455656ad7496e" file="9" linestart="2318" lineend="2318"/>
<m name="Get" id="1854966e082704a783697c5ac0b862ce_7368a840d85f1c2c9db219aa3ba6ab5e" file="9" linestart="2321" lineend="2321" access="public" storage="static" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="GetBlock&lt;T, B, GA&gt;">
<tss>
<templatebase id="1854966e082704a783697c5ac0b862ce_54601093e3ca1736fdc09b986c1051cb"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="block" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="ClonableImpl" id="24c688d13d29c77e002480b75c46e1ba_843cbe5db8482b07f774e0c63ba6baf4" file="10" linestart="26" lineend="30">
<base access="public">
<ttp/>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="AlgorithmImpl" id="24c688d13d29c77e002480b75c46e1ba_995360f65c4f832bf849db0dde1380bb" file="10" linestart="38" lineend="51">
<base access="public">
<ttp/>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="InvalidRounds" id="24c688d13d29c77e002480b75c46e1ba_1acd7894a97a3ecc26c96788717ad7f5" file="10" linestart="63" lineend="67">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_3c3269a71ce6dbcb3026ec479eb652e0"/>
</rt>
</base>
<c name="InvalidRounds" id="24c688d13d29c77e002480b75c46e1ba_b601880330f6e53d6b5db1806d49ee68" file="10" linestart="66" lineend="66" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="algorithm" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="rounds" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</c>
<c name="InvalidRounds" id="24c688d13d29c77e002480b75c46e1ba_6bf5e405976814e3513a9bf0df6a83a4" file="10" linestart="63" lineend="63" implicit="true" access="public" inline="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::InvalidRounds &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="24c688d13d29c77e002480b75c46e1ba_1acd7894a97a3ecc26c96788717ad7f5"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="InvalidBlockSize" id="24c688d13d29c77e002480b75c46e1ba_f7b8cbaa648532496365e631dcdb1a08" file="10" linestart="71" lineend="75">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_3c3269a71ce6dbcb3026ec479eb652e0"/>
</rt>
</base>
<c name="InvalidBlockSize" id="24c688d13d29c77e002480b75c46e1ba_e70187057542a5a7980c8e6a99711f70" file="10" linestart="74" lineend="74" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="algorithm" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</c>
<c name="InvalidBlockSize" id="24c688d13d29c77e002480b75c46e1ba_4630779e93de29a49022f486d66e0faf" file="10" linestart="71" lineend="71" implicit="true" access="public" inline="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::InvalidBlockSize &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="24c688d13d29c77e002480b75c46e1ba_f7b8cbaa648532496365e631dcdb1a08"/>
</rt>
</rrf>
</p>
</c>
</cr>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_529e895b0d6705ae93e9e85d4873c1ec" file="11" linestart="458" lineend="823">
<template_parameters>
<ttp name="T" id="d8d9268f1e37d2a96d5639565abceb80_4352ad0d073fbe1f018db49d3597c830" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="A" id="d8d9268f1e37d2a96d5639565abceb80_c19aed8731dd9754453eed7c467a9a92" depth="0" index="1" proto="type-parameter-0-1">
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_7fb116f7399fb1195b61f8ed890e4dec"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ttp>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb" file="11" linestart="459" lineend="823">
<cr access="public" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_a2ad445b9b4af6e3604b7d5d74bb410e" file="11" linestart="459" lineend="459"/>
<e parent="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb" access="public" name="" id="d8d9268f1e37d2a96d5639565abceb80_a968094d426fc14c686c36c6f00b560d" file="11" linestart="482" lineend="482" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<Tdef>
<DependentName/>
</Tdef>
</integer_type>
</e>
<c name="SecBlock&lt;T, A&gt;" id="d8d9268f1e37d2a96d5639565abceb80_9b5af12fec6187d2488838f86d271803" file="11" linestart="492" lineend="493" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="size" proto="size_type" init="true" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
<initlist id="d8d9268f1e37d2a96d5639565abceb80_0e7664e7969910bcf9ef7e209730b3d8"/>
<initlist id="d8d9268f1e37d2a96d5639565abceb80_9c73ac264424bd95a923cdee2ac12ea6"/>
<initlist id="d8d9268f1e37d2a96d5639565abceb80_52746f04e8da1a679cf12744c48c2f2f"/>
</c>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="FixedSizeSecBlock" id="d8d9268f1e37d2a96d5639565abceb80_e5b9e08437b1aa2b8bf563e2d2c1abd0" file="11" linestart="850" lineend="855">
<base access="public">
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="RawDES" id="d39abd6e5c48f62773123e6500305d4e_fd1d0a6f1c802fef0d1336336f9e1b67" file="1" linestart="16" lineend="26">
<c name="RawDES" id="d39abd6e5c48f62773123e6500305d4e_fbac28d2efc0b539650dff985e19fc5b" file="1" linestart="16" lineend="16" copyconst="true" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const CryptoPP::RawDES &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d39abd6e5c48f62773123e6500305d4e_fd1d0a6f1c802fef0d1336336f9e1b67"/>
</rt>
</QualType>
</lrf>
</p>
</c>
<c name="RawDES" id="d39abd6e5c48f62773123e6500305d4e_3260a1a7f363d2181bec759dc42ff16e" file="1" linestart="16" lineend="16" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<f namespace="std" name="swap" id="45a103471a83c120006922481a947fd4_1f7159279904422f12fa3783b545fdd1" file="12" linestart="177" lineend="196" previous="4b6b4beb4149a41ad3b267f8bef94037_1f7159279904422f12fa3783b545fdd1" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="typename enable_if&lt;__and_&lt;__not_&lt;__is_tuple_like&lt;_Tp&gt; &gt;, is_move_constructible&lt;_Tp&gt;, is_move_assignable&lt;_Tp&gt; &gt;::value&gt;::type">
<DependentName/>
</fpt>
<p name="__a" proto="_Tp &amp;" isRef="true" access2="none">
<lrf>
<ttp/>
</lrf>
</p>
<p name="__b" proto="_Tp &amp;" isRef="true" access2="none">
<lrf>
<ttp/>
</lrf>
</p>
</f>
<ft name="swap" id="45a103471a83c120006922481a947fd4_613fda287ef47ab19f62bb99ec6e4848" file="12" linestart="176" lineend="196" previous="4b6b4beb4149a41ad3b267f8bef94037_613fda287ef47ab19f62bb99ec6e4848">
<template_parameters>
<ttp name="_Tp" id="45a103471a83c120006922481a947fd4_9fc98f88dcf7711c74a7ed9950c545c6" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="std" name="swap" id="45a103471a83c120006922481a947fd4_1f7159279904422f12fa3783b545fdd1" file="12" linestart="177" lineend="196" previous="4b6b4beb4149a41ad3b267f8bef94037_1f7159279904422f12fa3783b545fdd1" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="typename enable_if&lt;__and_&lt;__not_&lt;__is_tuple_like&lt;_Tp&gt; &gt;, is_move_constructible&lt;_Tp&gt;, is_move_assignable&lt;_Tp&gt; &gt;::value&gt;::type">
<DependentName/>
</fpt>
<p name="__a" proto="_Tp &amp;" isRef="true" access2="none">
<lrf>
<ttp/>
</lrf>
</p>
<p name="__b" proto="_Tp &amp;" isRef="true" access2="none">
<lrf>
<ttp/>
</lrf>
</p>
</f>
</ft>
<f name="memcpy" id="0ebe9cde6661249e1dd240987ca511cc_60bc7b595257868b3d58e003eb334889" file="13" linestart="72" lineend="72" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f name="memset" id="0ebe9cde6661249e1dd240987ca511cc_01f056bb0311297cf054435e7cf7ee95" file="13" linestart="74" lineend="74" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="xorbuf" id="1854966e082704a783697c5ac0b862ce_a05a6ddc6cdbb2b2b3ee23e81595c81d" file="9" linestart="822" lineend="822" access="none">
<Attributed/>
<p name="buf" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="mask" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="xorbuf" id="1854966e082704a783697c5ac0b862ce_0863fccfb36da26126bbcfa2499f4dbf" file="9" linestart="831" lineend="831" access="none">
<Attributed/>
<p name="output" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="input" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="mask" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<ft name="rotlFixed" id="1854966e082704a783697c5ac0b862ce_da01723ccace9f9da713eaea110588a3" file="9" linestart="1351" lineend="1361">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_8ca94c96a846820d3e7f727540fce33e" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
</ft>
<ft name="rotrFixed" id="1854966e082704a783697c5ac0b862ce_e64a3cb7eed6d1d40a8d75b718c45730" file="9" linestart="1373" lineend="1383">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_0f7a9db7dfbfeb39ce619dc4cdbfc3d2" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
</ft>
<f namespace="CryptoPP" name="rotlFixed" id="1854966e082704a783697c5ac0b862ce_753a5f53f9cfbb7c4e7478e135fc3489" file="9" linestart="1351" lineend="1361" access="none" hasbody="true">
<fpt cc="cdecl" proto="unsigned int">
<sttp/>
</fpt>
<p name="x" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<sttp/>
</p>
<p name="y" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</f>
<f namespace="CryptoPP" name="rotrFixed" id="1854966e082704a783697c5ac0b862ce_7d045252463bcdde5350b84afa6727a4" file="9" linestart="1373" lineend="1383" access="none" hasbody="true">
<fpt cc="cdecl" proto="unsigned int">
<sttp/>
</fpt>
<p name="x" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<sttp/>
</p>
<p name="y" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</f>
</Externals>

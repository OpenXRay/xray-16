<Externals>
<tm namespace="std" access="none" kind="class" name="allocator" id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85" file="4" linestart="63" lineend="64">
<template_parameters>
<ttp name="" id="a270e00b6e0c45c9590b40a0d0c34028_7616e420bc7988a0fdef4434c8dab66a" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" kind="class" name="allocator" id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85" file="4" linestart="64" lineend="64"/>
</tm>
<cr namespace="std.__cxx11" access="none" kind="class" name="basic_string" id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c" file="5" linestart="71" lineend="71"/>
<tm namespace="std" access="none" depth="0" kind="struct" name="pair" id="2f27f2c877e62ad933850f456c389b8a_588c02fb583a80daabf4c37e3fd82a49" file="6" linestart="197" lineend="434">
<template_parameters>
<ttp name="_T1" id="2f27f2c877e62ad933850f456c389b8a_ea253be1a187ff6733ac25a2769ae556" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_T2" id="2f27f2c877e62ad933850f456c389b8a_6b6438bf256f232740581c66238f462a" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<cr namespace="std" access="none" depth="0" kind="struct" name="pair" id="2f27f2c877e62ad933850f456c389b8a_588c02fb583a80daabf4c37e3fd82a49" file="6" linestart="198" lineend="434">
<cr access="public" kind="struct" name="pair" id="2f27f2c877e62ad933850f456c389b8a_12f60c913bd6b534c07f47040150e1ca" file="6" linestart="198" lineend="198"/>
<ft name="pair&lt;_T1, _T2&gt;" id="2f27f2c877e62ad933850f456c389b8a_4d2f332766decdc497223857ece4907b" file="6" linestart="211" lineend="219">
<template_parameters>
<ttp name="_U1" id="2f27f2c877e62ad933850f456c389b8a_2c68c1501ecedf83f1f40b225218bd32" depth="1" index="0" proto="type-parameter-1-0">
<ttp/>
</ttp>
<ttp name="_U2" id="2f27f2c877e62ad933850f456c389b8a_03c92eec17e90a031535952799a3cbb8" depth="1" index="1" proto="type-parameter-1-1">
<ttp/>
</ttp>
</template_parameters>
<c name="pair&lt;_T1, _T2&gt;" id="2f27f2c877e62ad933850f456c389b8a_df427f696c23748afe4be12073d65e0b" file="6" linestart="218" lineend="219" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<initlist id="2f27f2c877e62ad933850f456c389b8a_52eed6144d5d94579972d7cd79d06416"/>
<initlist id="2f27f2c877e62ad933850f456c389b8a_baa302102c51c9664d2a1b64bdaa08dd"/>
</c>
</ft>
<c name="pair&lt;_T1, _T2&gt;" id="2f27f2c877e62ad933850f456c389b8a_8478c0ef279fd4e0efe57dc146ac8a62" file="6" linestart="293" lineend="293" access="public" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="pair&lt;_T1, _T2&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<InjectedClassName>
<cr id="2f27f2c877e62ad933850f456c389b8a_588c02fb583a80daabf4c37e3fd82a49"/>
</InjectedClassName>
</rrf>
</p>
</c>
<ft name="pair&lt;_T1, _T2&gt;" id="2f27f2c877e62ad933850f456c389b8a_4d2f332766decdc497223857ece4907b" file="6" linestart="324" lineend="331">
<template_parameters>
<ttp name="_U1" id="2f27f2c877e62ad933850f456c389b8a_3030616cbb9b65d67adf5ea69d003c06" depth="1" index="0" proto="type-parameter-1-0"/>
<ttp name="_U2" id="2f27f2c877e62ad933850f456c389b8a_bf611c302e8049e8e653064596348d0d" depth="1" index="1" proto="type-parameter-1-1"/>
</template_parameters>
<c name="pair&lt;_T1, _T2&gt;" id="2f27f2c877e62ad933850f456c389b8a_6582c1ee7c8a02f4e7575ea562d78f8c" file="6" linestart="330" lineend="331" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__x" proto="_U1 &amp;&amp;" isRef="true" access2="none">
<rrf>
<ttp/>
</rrf>
</p>
<p name="__y" proto="_U2 &amp;&amp;" isRef="true" access2="none">
<rrf>
<ttp/>
</rrf>
</p>
<initlist id="2f27f2c877e62ad933850f456c389b8a_52eed6144d5d94579972d7cd79d06416"/>
<initlist id="2f27f2c877e62ad933850f456c389b8a_baa302102c51c9664d2a1b64bdaa08dd"/>
</c>
</ft>
</cr>
</tm>
<cts Spec="&lt;char&gt;" namespace="std" access="none" depth="0" pod="true" kind="struct" name="char_traits" id="4189cf4795d943b623ff3abe8b70c24f_76e43d9fa50c2ce16dafa9452550a098" file="7" linestart="274" lineend="382" previous="8c4e62790b6098b6fde5c5da33f73a64_76e43d9fa50c2ce16dafa9452550a098"/>
<cr namespace="std" access="none" depth="0" kind="class" name="exception" id="2b5393bbe3f19671327b52be30b686c8_b84e67c1c1bf483f7187d5232b53ef08" file="8" linestart="60" lineend="70"/>
<cr namespace="std" access="none" depth="0" kind="class" name="type_info" id="31caac1812de935a4ec72f64fcd72204_f9468682203005b13c39d7d3c0a2cd5a" file="9" linestart="88" lineend="179" previous="ccc1f0055c2c5cf6ec1a7138269890da_f9468682203005b13c39d7d3c0a2cd5a"/>
<tm namespace="std.__cxx11" access="none" depth="0" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_0f870db7a9e3f80681e1e50f59c3f3e1" file="10" linestart="76" lineend="3027" previous="8c4e62790b6098b6fde5c5da33f73a64_0f870db7a9e3f80681e1e50f59c3f3e1">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_41aab7ea0b2a4f5399789cbb735bff07" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="3fdd9de4839192b19bcb40e3786e6725_3a060dd87f1183c8aa805887fa645f27" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="3fdd9de4839192b19bcb40e3786e6725_9c7a236a234ceda5d84f65309cc08d1d" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<cr namespace="std.__cxx11" access="none" depth="0" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c" file="10" linestart="77" lineend="3027" previous="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c">
<cr access="public" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_603e5586ba4340527f4b759c0ded4f93" file="10" linestart="77" lineend="77"/>
<e parent="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c" access="private" name="" id="3fdd9de4839192b19bcb40e3786e6725_106ac808f271d67a4150e50dd05602d0" file="10" linestart="158" lineend="158">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<c name="basic_string&lt;_CharT, _Traits, _Alloc&gt;" id="3fdd9de4839192b19bcb40e3786e6725_08603b4699adc2ddc50f967a727ea49f" file="10" linestart="514" lineend="516" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__s" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__a" proto="const _Alloc &amp;" isRef="true" init="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<initlist id="3fdd9de4839192b19bcb40e3786e6725_f5cef7c408d7b48a39b25df9e50585f4"/>
</c>
<c name="basic_string&lt;_CharT, _Traits, _Alloc&gt;" id="3fdd9de4839192b19bcb40e3786e6725_2c83c181d4b7958082af4668ac526446" file="10" linestart="541" lineend="561" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__str" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<InjectedClassName>
<cr id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
</InjectedClassName>
</rrf>
</p>
<initlist id="3fdd9de4839192b19bcb40e3786e6725_f5cef7c408d7b48a39b25df9e50585f4"/>
</c>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="0" pod="true" kind="struct" name="EnumToType" id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1" file="11" linestart="126" lineend="129"/>
<e namespace="CryptoPP" access="none" name="ByteOrder" id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5" file="11" linestart="134" lineend="138">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="BIG_ENDIAN_ORDER" id="5c1c5c04b0da674710abb2f6fef6fcfd_0be5e7e5ceabc050bc6b86a4ee9a58fd" file="11" linestart="138" lineend="138">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</ec>
</e>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="Exception" id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6" file="11" linestart="150" lineend="191">
<base access="public">
<ety>
<rt>
<cr id="2b5393bbe3f19671327b52be30b686c8_b84e67c1c1bf483f7187d5232b53ef08"/>
</rt>
</ety>
</base>
<e parent="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6" access="public" name="ErrorType" id="5c1c5c04b0da674710abb2f6fef6fcfd_4f4f301d7b6519f884419042f229b898" file="11" linestart="155" lineend="170">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="InvalidArgument" id="5c1c5c04b0da674710abb2f6fef6fcfd_3c3269a71ce6dbcb3026ec479eb652e0" file="11" linestart="194" lineend="198">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</base>
<c name="InvalidArgument" id="5c1c5c04b0da674710abb2f6fef6fcfd_121d23c057ed9b1d2762af6e1c7b1cff" file="11" linestart="197" lineend="197" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="s" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<c name="InvalidArgument" id="5c1c5c04b0da674710abb2f6fef6fcfd_dc8859017c1fcd4f915d3eb566a3b27f" file="11" linestart="194" lineend="194" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::InvalidArgument &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_3c3269a71ce6dbcb3026ec479eb652e0"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="InvalidDataFormat" id="5c1c5c04b0da674710abb2f6fef6fcfd_2993a0c8d70765cb07b9d0629e329df6" file="11" linestart="201" lineend="205">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</base>
<c name="InvalidDataFormat" id="5c1c5c04b0da674710abb2f6fef6fcfd_294f888bbaab74ca3ccc91c5f143f16c" file="11" linestart="204" lineend="204" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="s" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<c name="InvalidDataFormat" id="5c1c5c04b0da674710abb2f6fef6fcfd_c3dd83963dcb0948a56c7d2397bf1f6d" file="11" linestart="201" lineend="201" copyconst="true" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const CryptoPP::InvalidDataFormat &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_2993a0c8d70765cb07b9d0629e329df6"/>
</rt>
</QualType>
</lrf>
</p>
</c>
<c name="InvalidDataFormat" id="5c1c5c04b0da674710abb2f6fef6fcfd_3dda519ecbcbbba33ad8c97392a17a42" file="11" linestart="201" lineend="201" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::InvalidDataFormat &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_2993a0c8d70765cb07b9d0629e329df6"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="NotImplemented" id="5c1c5c04b0da674710abb2f6fef6fcfd_a263e778c361a402dd5a16c33d01b551" file="11" linestart="215" lineend="219">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</base>
<c name="NotImplemented" id="5c1c5c04b0da674710abb2f6fef6fcfd_76febcb3cb3c316612119f8191771fb6" file="11" linestart="218" lineend="218" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="s" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<c name="NotImplemented" id="5c1c5c04b0da674710abb2f6fef6fcfd_05102d5f5602ba8bf7005ae718e7ace6" file="11" linestart="215" lineend="215" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::NotImplemented &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a263e778c361a402dd5a16c33d01b551"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="struct" name="DecodingResult" id="5c1c5c04b0da674710abb2f6fef6fcfd_be0d547880bf7d8efb1d2c92dcf17146" file="11" linestart="248" lineend="272">
<c name="DecodingResult" id="5c1c5c04b0da674710abb2f6fef6fcfd_1465243c6d57a979b44e72a7b5ae7386" file="11" linestart="252" lineend="252" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<initlist id="5c1c5c04b0da674710abb2f6fef6fcfd_fd61d5a263b93aa53639b90a17ee0862"/>
<initlist id="5c1c5c04b0da674710abb2f6fef6fcfd_0b48f595e90557dbfb7456a1b6b349f2"/>
</c>
<c name="DecodingResult" id="5c1c5c04b0da674710abb2f6fef6fcfd_acaaf9dcb1985854ac413673cf3d4926" file="11" linestart="256" lineend="256" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="len" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<initlist id="5c1c5c04b0da674710abb2f6fef6fcfd_fd61d5a263b93aa53639b90a17ee0862"/>
<initlist id="5c1c5c04b0da674710abb2f6fef6fcfd_0b48f595e90557dbfb7456a1b6b349f2"/>
</c>
<c name="DecodingResult" id="5c1c5c04b0da674710abb2f6fef6fcfd_56a036b33676fca6c6c38a89c47482ca" file="11" linestart="248" lineend="248" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::DecodingResult &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_be0d547880bf7d8efb1d2c92dcf17146"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="NameValuePairs" id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2" file="11" linestart="285" lineend="446">
<ft name="GetValue" id="5c1c5c04b0da674710abb2f6fef6fcfd_30bd6248230c80fb1e245d7fea43d36a" file="11" linestart="342" lineend="346">
<template_parameters>
<ttp name="T" id="5c1c5c04b0da674710abb2f6fef6fcfd_56f7f6fc34c2fbaa095541e82fda5f52" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<m name="GetValue" id="5c1c5c04b0da674710abb2f6fef6fcfd_910402c05afd6e258e5ba222e06d0b49" file="11" linestart="343" lineend="346" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="T &amp;" isRef="true" access2="none">
<lrf>
<ttp/>
</lrf>
</p>
</m>
</ft>
<ft name="GetValueWithDefault" id="5c1c5c04b0da674710abb2f6fef6fcfd_15c0f1b219f6195469a6ed75766c1468" file="11" linestart="355" lineend="363">
<template_parameters>
<ttp name="T" id="5c1c5c04b0da674710abb2f6fef6fcfd_49abdad4f5dd9557a5a2a3ad62ee148d" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<m name="GetValueWithDefault" id="5c1c5c04b0da674710abb2f6fef6fcfd_dc34af6feff40209cf97da0efefca5f5" file="11" linestart="356" lineend="363" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="T">
<ttp/>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="defaultValue" proto="T" access2="none">
<ttp/>
</p>
</m>
</ft>
<m name="GetIntValue" id="5c1c5c04b0da674710abb2f6fef6fcfd_69e5d1c1205840532b633ea85855e82a" file="11" linestart="379" lineend="380" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
</p>
</m>
<m name="GetIntValueWithDefault" id="5c1c5c04b0da674710abb2f6fef6fcfd_c5385b6a9f2e63306696a8045bc7539e" file="11" linestart="388" lineend="389" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="defaultValue" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="Clonable" id="5c1c5c04b0da674710abb2f6fef6fcfd_378f319fc4f2b63076bfbc3a7f5c4552" file="11" linestart="495" lineend="506"/>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="Algorithm" id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a" file="11" linestart="510" lineend="532">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_378f319fc4f2b63076bfbc3a7f5c4552"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="HashTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_e4311e2ce757994731b0233ee4ec1e5d" file="11" linestart="1003" lineend="1162">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
<m name="Update" id="5c1c5c04b0da674710abb2f6fef6fcfd_5b4b72397a884f4c6271bf3be5d75d1c" file="11" linestart="1016" lineend="1016" pure="true" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="input" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="DigestSize" id="5c1c5c04b0da674710abb2f6fef6fcfd_ecc8f3b5527eb6e0dc9e9cf3f3e9d28f" file="11" linestart="1043" lineend="1043" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="TruncatedFinal" id="5c1c5c04b0da674710abb2f6fef6fcfd_c42614e7e150ec26a334b6db466a518e" file="11" linestart="1112" lineend="1112" pure="true" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="digest" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="digestSize" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="RandomNumberGenerator" id="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4" file="11" linestart="1267" lineend="1349" previous="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
<m name="IncorporateEntropy" id="5c1c5c04b0da674710abb2f6fef6fcfd_302bc40cb5d767f68a89cbe25a363a70" file="11" linestart="1280" lineend="1284" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="input" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="CanIncorporateEntropy" id="5c1c5c04b0da674710abb2f6fef6fcfd_d9e6dd618ac3ad69533d708259e156b5" file="11" linestart="1288" lineend="1288" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="BufferedTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52" file="11" linestart="1422" lineend="2101" previous="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_c451eb5809cfd0da6e2b6e2a69f51a7b"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="CryptoMaterial" id="5c1c5c04b0da674710abb2f6fef6fcfd_8ab1d29469e0babd760044cff3ca4d20" file="11" linestart="2109" lineend="2218">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="GeneratableCryptoMaterial" id="5c1c5c04b0da674710abb2f6fef6fcfd_0a235fe1002006a6febecbc181f5d904" file="11" linestart="2222" lineend="2245">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_8ab1d29469e0babd760044cff3ca4d20"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="PublicKey" id="5c1c5c04b0da674710abb2f6fef6fcfd_89225445ea81a10be4b512764f7d1776" file="11" linestart="2248" lineend="2250">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_8ab1d29469e0babd760044cff3ca4d20"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="PrivateKey" id="5c1c5c04b0da674710abb2f6fef6fcfd_1ed227f0ffec90afc89021b6afebf685" file="11" linestart="2253" lineend="2255">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_0a235fe1002006a6febecbc181f5d904"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="CryptoParameters" id="5c1c5c04b0da674710abb2f6fef6fcfd_2314900121c396148ba37f25c87ddd64" file="11" linestart="2258" lineend="2260">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_0a235fe1002006a6febecbc181f5d904"/>
</rt>
</base>
<m name="operator=" id="5c1c5c04b0da674710abb2f6fef6fcfd_87f2bca2e552fc1f6ea6c5051f5d11d6" file="11" linestart="2258" lineend="2258" implicit="true" operator="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::CryptoParameters &amp;">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_2314900121c396148ba37f25c87ddd64"/>
</rt>
</lrf>
</fpt>
<p name="" proto="const CryptoPP::CryptoParameters &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_2314900121c396148ba37f25c87ddd64"/>
</rt>
</QualType>
</lrf>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="AsymmetricAlgorithm" id="5c1c5c04b0da674710abb2f6fef6fcfd_dbaf6e5b9dd0f54580baa0a19c828f41" file="11" linestart="2263" lineend="2287">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
<m name="GetMaterial" id="5c1c5c04b0da674710abb2f6fef6fcfd_38934b0e43b350e3963f14f23578ba53" file="11" linestart="2274" lineend="2274" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="const CryptoPP::CryptoMaterial &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_8ab1d29469e0babd760044cff3ca4d20"/>
</rt>
</QualType>
</lrf>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="PublicKeyAlgorithm" id="5c1c5c04b0da674710abb2f6fef6fcfd_1d898ae3ae35c6ef295e3369e0809e20" file="11" linestart="2290" lineend="2313">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_dbaf6e5b9dd0f54580baa0a19c828f41"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="PrivateKeyAlgorithm" id="5c1c5c04b0da674710abb2f6fef6fcfd_1646f1be61d59d9cf7160a7988cf9f42" file="11" linestart="2316" lineend="2334">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_dbaf6e5b9dd0f54580baa0a19c828f41"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="KeyAgreementAlgorithm" id="5c1c5c04b0da674710abb2f6fef6fcfd_dd3514b93b2e0833107ef4681111cd4a" file="11" linestart="2337" lineend="2355">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_dbaf6e5b9dd0f54580baa0a19c828f41"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="PK_CryptoSystem" id="5c1c5c04b0da674710abb2f6fef6fcfd_b418fd7502c330651ee878145c6d129f" file="11" linestart="2360" lineend="2394"/>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="PK_Encryptor" id="5c1c5c04b0da674710abb2f6fef6fcfd_46c146b83c6e43509f37ab52b98d7b1e" file="11" linestart="2398" lineend="2430">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_b418fd7502c330651ee878145c6d129f"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1d898ae3ae35c6ef295e3369e0809e20"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="PK_Decryptor" id="5c1c5c04b0da674710abb2f6fef6fcfd_d8920683c7c579bba37047bc55eb47cb" file="11" linestart="2434" lineend="2481">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_b418fd7502c330651ee878145c6d129f"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1646f1be61d59d9cf7160a7988cf9f42"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="PK_SignatureScheme" id="5c1c5c04b0da674710abb2f6fef6fcfd_916815d0b94303cefdc77b75acbcfb76" file="11" linestart="2487" lineend="2560"/>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="PK_MessageAccumulator" id="5c1c5c04b0da674710abb2f6fef6fcfd_c5ae117dd5cc33d515b56d27607aefff" file="11" linestart="2566" lineend="2579">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_e4311e2ce757994731b0233ee4ec1e5d"/>
</rt>
</base>
<c name="PK_MessageAccumulator" id="5c1c5c04b0da674710abb2f6fef6fcfd_6fd987fc934b404bd557d58c9ca632df" file="11" linestart="2566" lineend="2566" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="PK_Signer" id="5c1c5c04b0da674710abb2f6fef6fcfd_5cc5e2889c0e99a41913e72526fd0837" file="11" linestart="2583" lineend="2639">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_916815d0b94303cefdc77b75acbcfb76"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1646f1be61d59d9cf7160a7988cf9f42"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="PK_Verifier" id="5c1c5c04b0da674710abb2f6fef6fcfd_7bf1db625c5b90ae50343ace70134d7b" file="11" linestart="2648" lineend="2713">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_916815d0b94303cefdc77b75acbcfb76"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1d898ae3ae35c6ef295e3369e0809e20"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="SimpleKeyAgreementDomain" id="5c1c5c04b0da674710abb2f6fef6fcfd_b2dde03e8f790d7c9a61466bfb99fa4f" file="11" linestart="2720" lineend="2772">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_dd3514b93b2e0833107ef4681111cd4a"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="ASN1Object" id="5c1c5c04b0da674710abb2f6fef6fcfd_705b04d24ef0b7b3eb1c6e318eba24fa" file="11" linestart="2988" lineend="3008"/>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="member_ptr" id="66470bddfc6a50894905c3b9a37709a0_e675a7e9c492d66ffd9afcc7cc31a501" file="12" linestart="39" lineend="69">
<template_parameters>
<ttp name="T" id="66470bddfc6a50894905c3b9a37709a0_116a598831524f1b360022f5f98c3caa" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="member_ptr" id="66470bddfc6a50894905c3b9a37709a0_ffa4dc3c0f9ff58f718fbd56d0cf64b1" file="12" linestart="39" lineend="69">
<cr access="public" kind="class" name="member_ptr" id="66470bddfc6a50894905c3b9a37709a0_2176b9ee550b045e05ed25e40a582740" file="12" linestart="39" lineend="39"/>
<m name="operator*" id="66470bddfc6a50894905c3b9a37709a0_9dda02adb8d7687b5b244e7367a85cf7" file="12" linestart="47" lineend="47" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T &amp;">
<lrf>
<ttp/>
</lrf>
</fpt>
</m>
<m name="release" id="66470bddfc6a50894905c3b9a37709a0_6d2498afce6b25cb42bbdcb67d0c82d3" file="12" linestart="55" lineend="60" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T *">
<pt>
<ttp/>
</pt>
</fpt>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="ObjectHolder" id="1854966e082704a783697c5ac0b862ce_835f5bed45a95d84864327d1eaa68d48" file="13" linestart="218" lineend="222"/>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="Singleton" id="1854966e082704a783697c5ac0b862ce_2d2243c81125b735c8fdab6c3fd5062b" file="13" linestart="294" lineend="304"/>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="AlgorithmImpl" id="24c688d13d29c77e002480b75c46e1ba_995360f65c4f832bf849db0dde1380bb" file="14" linestart="38" lineend="51">
<base access="public">
<ttp/>
</base>
</cr>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_529e895b0d6705ae93e9e85d4873c1ec" file="15" linestart="458" lineend="823">
<template_parameters>
<ttp name="T" id="d8d9268f1e37d2a96d5639565abceb80_4352ad0d073fbe1f018db49d3597c830" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="A" id="d8d9268f1e37d2a96d5639565abceb80_c19aed8731dd9754453eed7c467a9a92" depth="0" index="1" proto="type-parameter-0-1">
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_7fb116f7399fb1195b61f8ed890e4dec"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ttp>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb" file="15" linestart="459" lineend="823">
<cr access="public" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_a2ad445b9b4af6e3604b7d5d74bb410e" file="15" linestart="459" lineend="459"/>
<e parent="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb" access="public" name="" id="d8d9268f1e37d2a96d5639565abceb80_a968094d426fc14c686c36c6f00b560d" file="15" linestart="482" lineend="482" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<Tdef>
<DependentName/>
</Tdef>
</integer_type>
</e>
<c name="SecBlock&lt;T, A&gt;" id="d8d9268f1e37d2a96d5639565abceb80_9b5af12fec6187d2488838f86d271803" file="15" linestart="492" lineend="493" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="size" proto="size_type" init="true" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
<initlist id="d8d9268f1e37d2a96d5639565abceb80_0e7664e7969910bcf9ef7e209730b3d8"/>
<initlist id="d8d9268f1e37d2a96d5639565abceb80_9c73ac264424bd95a923cdee2ac12ea6"/>
<initlist id="d8d9268f1e37d2a96d5639565abceb80_52746f04e8da1a679cf12744c48c2f2f"/>
</c>
<cv name="operator T *" id="d8d9268f1e37d2a96d5639565abceb80_acb059dc354737efe5aa1db0c8e381a0" file="15" linestart="535" lineend="536" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T *">
<pt>
<ttp/>
</pt>
</fpt>
</cv>
<m name="size" id="d8d9268f1e37d2a96d5639565abceb80_d09e4bef4229ebd8ef857d318d5ee27c" file="15" linestart="566" lineend="566" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="size_type">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="Assign" id="d8d9268f1e37d2a96d5639565abceb80_031a0db7d0edbde6385f32a83e815349" file="15" linestart="610" lineend="616" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="ptr" proto="const T *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="len" proto="size_type" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
<m name="New" id="d8d9268f1e37d2a96d5639565abceb80_8c7be99526ce55ae2b9b134e354f7a32" file="15" linestart="734" lineend="739" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="newSize" proto="size_type" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="Integer" id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc" file="16" linestart="49" lineend="651" previous="1854966e082704a783697c5ac0b862ce_9fc7c3f8d9933c7c7a1ca858028589bc">
<base access="private">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_93b1fc22ec0febd237a800a851b64776"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_705b04d24ef0b7b3eb1c6e318eba24fa"/>
</rt>
</base>
<e parent="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc" access="public" name="Sign" id="2766997043c89123ae33b84c33df0642_a2e1e1cf890f83706c66897efe25d5b9" file="16" linestart="73" lineend="77">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<e parent="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc" access="public" name="Signedness" id="2766997043c89123ae33b84c33df0642_167177e1a7eb52b5d5aa8bb7bb73ac83" file="16" linestart="83" lineend="87">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<e parent="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc" access="public" name="RandomNumberType" id="2766997043c89123ae33b84c33df0642_70d463ab4d6d1e6cc325b72e360f049f" file="16" linestart="91" lineend="95">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<c name="Integer" id="2766997043c89123ae33b84c33df0642_1f68994320753d821460b618fdf343c4" file="16" linestart="101" lineend="101" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</c>
<c name="Integer" id="2766997043c89123ae33b84c33df0642_144373019940d892ece0e98f42452c18" file="16" linestart="104" lineend="104" copyconst="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="t" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</c>
<c name="Integer" id="2766997043c89123ae33b84c33df0642_4c0b360641f3f73059b6f1b56b6b2a9d" file="16" linestart="107" lineend="107" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="value" proto="long" isLiteral="true" isPrimitive="true" access2="none">
<bt name="long"/>
</p>
</c>
<c name="Integer" id="2766997043c89123ae33b84c33df0642_266a2a0e61ba19d9760b601a916b5fdf" file="16" linestart="145" lineend="145" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="encodedInteger" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="byteCount" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="sign" proto="CryptoPP::Integer::Signedness" isLiteral="true" init="true" access2="none">
<et>
<e id="2766997043c89123ae33b84c33df0642_167177e1a7eb52b5d5aa8bb7bb73ac83"/>
</et>
</p>
<p name="order" proto="CryptoPP::ByteOrder" isLiteral="true" init="true" access2="none">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</p>
</c>
<c name="Integer" id="2766997043c89123ae33b84c33df0642_8f00618942f2ad6594095b3d7bd055dd" file="16" linestart="158" lineend="158" explicit="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="bt" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
</c>
<m name="Zero" id="2766997043c89123ae33b84c33df0642_e0fdd66c8333679ffa0056fea49c1ad7" file="16" linestart="169" lineend="169" access="public" storage="static">
<Attributed/>
</m>
<m name="One" id="2766997043c89123ae33b84c33df0642_f5ff3d10b44319b176304fa2b426883a" file="16" linestart="173" lineend="173" access="public" storage="static">
<Attributed/>
</m>
<m name="Power2" id="2766997043c89123ae33b84c33df0642_d02df2e66e2d9381b708eed5f4b1bab1" file="16" linestart="200" lineend="200" access="public" storage="static">
<Attributed/>
<p name="e" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="MinEncodedSize" id="2766997043c89123ae33b84c33df0642_fce6e747186eb5df85857c1d84afe765" file="16" linestart="208" lineend="208" access="public">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="sign" proto="CryptoPP::Integer::Signedness" isLiteral="true" init="true" access2="none">
<et>
<e id="2766997043c89123ae33b84c33df0642_167177e1a7eb52b5d5aa8bb7bb73ac83"/>
</et>
</p>
</m>
<m name="Encode" id="2766997043c89123ae33b84c33df0642_6e8e4226289879e16914a7587de28826" file="16" linestart="217" lineend="217" access="public">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="output" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="outputLen" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="sign" proto="CryptoPP::Integer::Signedness" isLiteral="true" init="true" access2="none">
<et>
<e id="2766997043c89123ae33b84c33df0642_167177e1a7eb52b5d5aa8bb7bb73ac83"/>
</et>
</p>
</m>
<m name="DEREncode" id="2766997043c89123ae33b84c33df0642_80058cf358b787016e37c49bd1e490d9" file="16" linestart="232" lineend="232" access="public">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="bt" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
</m>
<m name="BERDecode" id="2766997043c89123ae33b84c33df0642_dfdb65b78b8e45e3a53255c8bcb6b949" file="16" linestart="274" lineend="274" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="bt" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
</m>
<m name="BitCount" id="2766997043c89123ae33b84c33df0642_e6f6360f240a8b57d7e9eb585b527c01" file="16" linestart="310" lineend="310" access="public">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="ByteCount" id="2766997043c89123ae33b84c33df0642_033c6ae62a8e2d217a981806bdf2a62b" file="16" linestart="313" lineend="313" access="public">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="IsNegative" id="2766997043c89123ae33b84c33df0642_0a3450ff463da1f4d0fe0766df8ed61b" file="16" linestart="336" lineend="336" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="NotNegative" id="2766997043c89123ae33b84c33df0642_7edd89cdb27018ffc33d46b6261c5255" file="16" linestart="339" lineend="339" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="IsPositive" id="2766997043c89123ae33b84c33df0642_0382e5502700f855fb513b51e632718f" file="16" linestart="342" lineend="342" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="IsOdd" id="2766997043c89123ae33b84c33df0642_c7426b6c4cad1efa832e017d35d62a63" file="16" linestart="351" lineend="351" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="operator=" id="2766997043c89123ae33b84c33df0642_88f195f642b54371307d291f0e7476d4" file="16" linestart="357" lineend="357" operator="true" access="public">
<fpt cc="cdecl" proto="CryptoPP::Integer &amp;">
<lrf>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</lrf>
</fpt>
<p name="t" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="operator%=" id="2766997043c89123ae33b84c33df0642_7e38945d9de50f9f5d900e89e501494f" file="16" linestart="370" lineend="370" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer &amp;">
<lrf>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</lrf>
</fpt>
<p name="t" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="operator&gt;&gt;=" id="2766997043c89123ae33b84c33df0642_0cf7c9b7030ad2cebb509804fa1138ef" file="16" linestart="380" lineend="380" operator="true" access="public">
<fpt cc="cdecl" proto="CryptoPP::Integer &amp;">
<lrf>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</lrf>
</fpt>
<p name="n" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="operator--" id="2766997043c89123ae33b84c33df0642_51a15b997b4048f2e3dbc221c924ae91" file="16" linestart="489" lineend="489" operator="true" access="public">
<fpt cc="cdecl" proto="CryptoPP::Integer &amp;">
<lrf>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</lrf>
</fpt>
</m>
<m name="Gcd" id="2766997043c89123ae33b84c33df0642_cf272581ff89b85edd840056fbde105b" file="16" linestart="597" lineend="597" access="public" storage="static">
<Attributed/>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="n" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="InverseMod" id="2766997043c89123ae33b84c33df0642_0541f3366d17a123fb007be0e4e86df2" file="16" linestart="599" lineend="599" access="public">
<fpt cc="cdecl" const="true" proto="CryptoPP::Integer">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</fpt>
<p name="n" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="ModularArithmetic" id="46973d2c63b82be1470c4f4a1ad0406e_d9dd639227fb394ba24c7ec9e529c830" file="17" linestart="39" lineend="262" previous="2766997043c89123ae33b84c33df0642_d9dd639227fb394ba24c7ec9e529c830">
<base access="public">
<tss>
<templatebase id="b49402185152e00cccd84d85c97c26e9_b2e037b018441cf65eca72066ed5575d"/>
<template_arguments>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</template_arguments>
</tss>
</base>
<c name="ModularArithmetic" id="46973d2c63b82be1470c4f4a1ad0406e_d373d3991a224260382ab040f7020aa9" file="17" linestart="50" lineend="51" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="modulus" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" init="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<initlist id="46973d2c63b82be1470c4f4a1ad0406e_46d4b12728e20e5e9190c6bd666a6719"/>
<initlist id="46973d2c63b82be1470c4f4a1ad0406e_9fd81bee36555d410b64a8160093efcd"/>
</c>
<m name="Divide" id="46973d2c63b82be1470c4f4a1ad0406e_a7aaf2eb731fa099e9f70b63026795b3" file="17" linestart="203" lineend="204" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const CryptoPP::Integer &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="CascadeExponentiate" id="46973d2c63b82be1470c4f4a1ad0406e_4884b3745e041feec82fa527beb53e85" file="17" linestart="212" lineend="212" access="public">
<fpt cc="cdecl" const="true" proto="CryptoPP::Integer">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</fpt>
<p name="x" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="e1" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="y" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="e2" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="SimultaneousExponentiate" id="46973d2c63b82be1470c4f4a1ad0406e_58ca9fa28ad7b2ca9d1ab3fb517605d7" file="17" linestart="224" lineend="224" access="public">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="results" proto="Element *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</Tdef>
</pt>
</p>
<p name="base" proto="const Element &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</Tdef>
</QualType>
</lrf>
</p>
<p name="exponents" proto="const CryptoPP::Integer *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</pt>
</p>
<p name="exponentsCount" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="ConstByteArrayParameter" id="9ac08af66a6df584911ebdf42c775dfe_52c7a5925454e812d7c1553551dcbf91" file="18" linestart="31" lineend="102">
<c name="ConstByteArrayParameter" id="9ac08af66a6df584911ebdf42c775dfe_e72be235f5b344808fa6c16de23d7b91" file="18" linestart="39" lineend="43" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="data" proto="const char *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="deepCopy" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_e98f72ba00ee840a7dde62fcff9df5a9"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_855b60e5d3a78536f53b91b4976ee99b"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_b43c8fca98fb4f46a31fb498423a65c1"/>
</c>
<m name="begin" id="9ac08af66a6df584911ebdf42c775dfe_d564ad8d92e72ac3cb28660a6fcbe70d" file="18" linestart="91" lineend="91" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const byte *">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</fpt>
</m>
<m name="size" id="9ac08af66a6df584911ebdf42c775dfe_74aa3909ff64c8161b93105e3a8a266d" file="18" linestart="95" lineend="95" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="CombinedNameValuePairs" id="9ac08af66a6df584911ebdf42c775dfe_125c021c3338e067344845225d601f91" file="18" linestart="137" lineend="150">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</base>
<c name="CombinedNameValuePairs" id="9ac08af66a6df584911ebdf42c775dfe_bd170944311227729fd6141dbaef2f9d" file="18" linestart="143" lineend="144" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="pairs1" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
<p name="pairs2" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_32c58ed765d548d30cb4fecac93a8cd3"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_38c90cb8590d685d62131e797b1c46a1"/>
</c>
</cr>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="GetValueHelperClass" id="9ac08af66a6df584911ebdf42c775dfe_ae44729cc8b6135e9acb13756f579518" file="18" linestart="153" lineend="223">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_9c5f870e3344786b3abcbee11da02d5d" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="BASE" id="9ac08af66a6df584911ebdf42c775dfe_9fd95b000b38a0b53fa56b2a4d7b9bf5" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="GetValueHelperClass" id="9ac08af66a6df584911ebdf42c775dfe_ecbfc0eb5b6bb1ac7f03d5a57a7c3f68" file="18" linestart="154" lineend="223">
<cr access="public" kind="class" name="GetValueHelperClass" id="9ac08af66a6df584911ebdf42c775dfe_be7b926e41fd8f20dc48c682dd3624bf" file="18" linestart="154" lineend="154"/>
<cv name="operator bool" id="9ac08af66a6df584911ebdf42c775dfe_aff840843188a9eb2c1aafb23ca864d3" file="18" linestart="186" lineend="186" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</cv>
<ft name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_1a6d10d05cb909d88bd00422e1dd208a" file="18" linestart="188" lineend="200">
<template_parameters>
<ttp name="R" id="9ac08af66a6df584911ebdf42c775dfe_a2e6bac362dbbc07cccacce4b894fd93" depth="1" index="0" proto="type-parameter-1-0"/>
</template_parameters>
<m name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_9d5cc9c3167fe7f9148d3f5757f896a9" file="18" linestart="189" lineend="200" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="GetValueHelperClass&lt;T, BASE&gt; &amp;">
<lrf>
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_ecbfc0eb5b6bb1ac7f03d5a57a7c3f68"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="pm" proto="const R &amp;(T::*)() const" access2="none">
<mp/>
</p>
</m>
</ft>
<m name="Assignable" id="9ac08af66a6df584911ebdf42c775dfe_0293da97c8c9129c160f98fd029891cb" file="18" linestart="202" lineend="215" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="GetValueHelperClass&lt;T, BASE&gt; &amp;">
<lrf>
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_ecbfc0eb5b6bb1ac7f03d5a57a7c3f68"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
</m>
</cr>
</tm>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="AssignFromHelperClass" id="9ac08af66a6df584911ebdf42c775dfe_c8d788873295b15e4625aa835ccd73ba" file="18" linestart="239" lineend="285">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_c86415a141596c1f37a3509ed52e4976" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="BASE" id="9ac08af66a6df584911ebdf42c775dfe_ebf7bd91d8e2c7f6b23f3a85ce64aae9" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="AssignFromHelperClass" id="9ac08af66a6df584911ebdf42c775dfe_77633514569b0e055dd674b14d6680cc" file="18" linestart="240" lineend="285">
<cr access="public" kind="class" name="AssignFromHelperClass" id="9ac08af66a6df584911ebdf42c775dfe_6b25e408edab2723d518e6488ab858ee" file="18" linestart="240" lineend="240"/>
<ft name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_da948ec18c076928a88750dc59c7b35c" file="18" linestart="252" lineend="263">
<template_parameters>
<ttp name="R" id="9ac08af66a6df584911ebdf42c775dfe_b76ccb8727138f8884b70a157bb33dc2" depth="1" index="0" proto="type-parameter-1-0"/>
</template_parameters>
<m name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_2388685e64f50cafc936c4572f847a9d" file="18" linestart="253" lineend="263" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="AssignFromHelperClass&lt;T, BASE&gt; &amp;">
<lrf>
<InjectedClassName>
<cr id="9ac08af66a6df584911ebdf42c775dfe_77633514569b0e055dd674b14d6680cc"/>
</InjectedClassName>
</lrf>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="pm" proto="void (T::*)(const R &amp;)" access2="none">
<mp/>
</p>
</m>
</ft>
<ft name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_da948ec18c076928a88750dc59c7b35c" file="18" linestart="265" lineend="279">
<template_parameters>
<ttp name="R" id="9ac08af66a6df584911ebdf42c775dfe_346913155ec56569c30d914949b2b3c2" depth="1" index="0" proto="type-parameter-1-0"/>
<ttp name="S" id="9ac08af66a6df584911ebdf42c775dfe_01eef4a43630265263191d9e6eb5caa8" depth="1" index="1" proto="type-parameter-1-1"/>
</template_parameters>
<m name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_492f4fb89e9e7ca1cd5b7cbfaf98169e" file="18" linestart="266" lineend="279" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="AssignFromHelperClass&lt;T, BASE&gt; &amp;">
<lrf>
<InjectedClassName>
<cr id="9ac08af66a6df584911ebdf42c775dfe_77633514569b0e055dd674b14d6680cc"/>
</InjectedClassName>
</lrf>
</fpt>
<p name="name1" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="name2" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="pm" proto="void (T::*)(const R &amp;, const S &amp;)" access2="none">
<mp/>
</p>
</m>
</ft>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="AlgorithmParameters" id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d" file="18" linestart="433" lineend="498" previous="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</base>
<ft name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_55da26a3b388f042cdb57c2f3f80778a" file="18" linestart="487" lineend="491">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_297ccd806106bdb141b1edb35bfb0111" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<m name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_d812482b1b0c416773a27ba9b1afc2e6" file="18" linestart="488" lineend="491" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::AlgorithmParameters &amp;">
<lrf>
<rt>
<cr id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d"/>
</rt>
</lrf>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</m>
</ft>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="DL_GroupPrecomputation" id="c6f5d52d34bb41773934d219710f2bfe_ce6b57df1cb2090586009400a45c444d" file="19" linestart="17" lineend="30"/>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="DL_FixedBasePrecomputation" id="c6f5d52d34bb41773934d219710f2bfe_4ed48ed1f26642d4e0e84a9325b4dae7" file="19" linestart="32" lineend="48">
<template_parameters>
<ttp name="T" id="c6f5d52d34bb41773934d219710f2bfe_7e1d09610445380c005589948cf760b2" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="DL_FixedBasePrecomputation" id="c6f5d52d34bb41773934d219710f2bfe_4038b4aedf246f266e91e8897232063e" file="19" linestart="33" lineend="48">
<cr access="public" kind="class" name="DL_FixedBasePrecomputation" id="c6f5d52d34bb41773934d219710f2bfe_f2b3fcb202f805b58e5b67c87006bc2b" file="19" linestart="33" lineend="33"/>
<m name="IsInitialized" id="c6f5d52d34bb41773934d219710f2bfe_10c47f1c8465536e03b47d7f14e17446" file="19" linestart="40" lineend="40" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="SetBase" id="c6f5d52d34bb41773934d219710f2bfe_335515dfcc9830f861e1841c185887c9" file="19" linestart="41" lineend="41" pure="true" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="group" proto="const DL_GroupPrecomputation&lt;Element&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="c6f5d52d34bb41773934d219710f2bfe_ce6b57df1cb2090586009400a45c444d"/>
<template_arguments>
<Tdef>
<ttp/>
</Tdef>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
<p name="base" proto="const Element &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<ttp/>
</Tdef>
</QualType>
</lrf>
</p>
</m>
<m name="GetBase" id="c6f5d52d34bb41773934d219710f2bfe_39200ce296aafb763978d7f510cf42b7" file="19" linestart="42" lineend="42" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="const Element &amp;">
<lrf>
<QualType const="true">
<Tdef>
<ttp/>
</Tdef>
</QualType>
</lrf>
</fpt>
<p name="group" proto="const DL_GroupPrecomputation&lt;Element&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="c6f5d52d34bb41773934d219710f2bfe_ce6b57df1cb2090586009400a45c444d"/>
<template_arguments>
<Tdef>
<ttp/>
</Tdef>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
</m>
<m name="Precompute" id="c6f5d52d34bb41773934d219710f2bfe_02a2d6b484c998c86b193ebe3d2ebe45" file="19" linestart="43" lineend="43" pure="true" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="group" proto="const DL_GroupPrecomputation&lt;Element&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="c6f5d52d34bb41773934d219710f2bfe_ce6b57df1cb2090586009400a45c444d"/>
<template_arguments>
<Tdef>
<ttp/>
</Tdef>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
<p name="maxExpBits" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
<p name="storage" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</m>
<m name="Load" id="c6f5d52d34bb41773934d219710f2bfe_36a80f642f6ff2cf02cea521dd830b2e" file="19" linestart="44" lineend="44" pure="true" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="group" proto="const DL_GroupPrecomputation&lt;Element&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="c6f5d52d34bb41773934d219710f2bfe_ce6b57df1cb2090586009400a45c444d"/>
<template_arguments>
<Tdef>
<ttp/>
</Tdef>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
<p name="storedPrecomputation" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
</m>
<m name="Save" id="c6f5d52d34bb41773934d219710f2bfe_8dcab10a140df93b01e8f6dc720e86ea" file="19" linestart="45" lineend="45" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="group" proto="const DL_GroupPrecomputation&lt;Element&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="c6f5d52d34bb41773934d219710f2bfe_ce6b57df1cb2090586009400a45c444d"/>
<template_arguments>
<Tdef>
<ttp/>
</Tdef>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
<p name="storedPrecomputation" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
</m>
<m name="Exponentiate" id="c6f5d52d34bb41773934d219710f2bfe_7c5912ca06840586e1887325b89c6acc" file="19" linestart="46" lineend="46" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="Element">
<Tdef>
<ttp/>
</Tdef>
</fpt>
<p name="group" proto="const DL_GroupPrecomputation&lt;Element&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="c6f5d52d34bb41773934d219710f2bfe_ce6b57df1cb2090586009400a45c444d"/>
<template_arguments>
<Tdef>
<ttp/>
</Tdef>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
<p name="exponent" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="DL_FixedBasePrecomputationImpl" id="c6f5d52d34bb41773934d219710f2bfe_cfd906532028ab0ee155ce0f044c2176" file="19" linestart="51" lineend="79">
<base access="public">
<tss>
<templatebase id="c6f5d52d34bb41773934d219710f2bfe_4038b4aedf246f266e91e8897232063e"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="DL_BadElement" id="50e49d11b11a293369073a7ab74e7ec1_08b8b606558b08dcbdc7fddfc9d68370" file="2" linestart="762" lineend="766">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_2993a0c8d70765cb07b9d0629e329df6"/>
</rt>
</base>
<c name="DL_BadElement" id="50e49d11b11a293369073a7ab74e7ec1_260076bffd8fa2c3c0369bc55409c706" file="2" linestart="762" lineend="762" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::DL_BadElement &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="50e49d11b11a293369073a7ab74e7ec1_08b8b606558b08dcbdc7fddfc9d68370"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="ModExpPrecomputation" id="f1a43cfe278fd91e923a3ee95f69d32a_0785bb687e784e718b02436ec008dec0" file="20" linestart="21" lineend="40">
<base access="public">
<tss>
<templatebase id="c6f5d52d34bb41773934d219710f2bfe_ce6b57df1cb2090586009400a45c444d"/>
<template_arguments>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</template_arguments>
</tss>
</base>
<m name="SetModulus" id="f1a43cfe278fd91e923a3ee95f69d32a_3d24907bd7550ef5631b5072e85e2e48" file="20" linestart="35" lineend="35" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="v" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="GetModulus" id="f1a43cfe278fd91e923a3ee95f69d32a_c901451ba21dc5eb9dc53e7636cc6268" file="20" linestart="36" lineend="36" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const CryptoPP::Integer &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="8" kind="class" name="SHA1" id="c9ac3731f901a69a2b4c6e4b58b9a2ed_049515b312c459a05e1134486af95fd3" file="21" linestart="26" lineend="56">
<base access="public">
<tss>
<templatebase id="9cef79da01862170122dae4a26d54be2_63b949b3deab1b467bda4ec2c0eca8e1"/>
<template_arguments>
<Tdef>
<bt name="unsigned int"/>
</Tdef>
<Tdef>
<tss>
<templatebase id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1"/>
<template_arguments>
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</template_arguments>
</tss>
</Tdef>
<rt>
<cr id="c9ac3731f901a69a2b4c6e4b58b9a2ed_049515b312c459a05e1134486af95fd3"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="8" kind="class" name="SHA256" id="c9ac3731f901a69a2b4c6e4b58b9a2ed_f7574e4c2edf419d59e1b13868b4e517" file="21" linestart="62" lineend="92">
<base access="public">
<tss>
<templatebase id="9cef79da01862170122dae4a26d54be2_63b949b3deab1b467bda4ec2c0eca8e1"/>
<template_arguments>
<Tdef>
<bt name="unsigned int"/>
</Tdef>
<Tdef>
<tss>
<templatebase id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1"/>
<template_arguments>
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</template_arguments>
</tss>
</Tdef>
<rt>
<cr id="c9ac3731f901a69a2b4c6e4b58b9a2ed_f7574e4c2edf419d59e1b13868b4e517"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="8" kind="class" name="SHA224" id="c9ac3731f901a69a2b4c6e4b58b9a2ed_cee828ebfa349cf4c9acbee792782654" file="21" linestart="98" lineend="128">
<base access="public">
<tss>
<templatebase id="9cef79da01862170122dae4a26d54be2_63b949b3deab1b467bda4ec2c0eca8e1"/>
<template_arguments>
<Tdef>
<bt name="unsigned int"/>
</Tdef>
<Tdef>
<tss>
<templatebase id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1"/>
<template_arguments>
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</template_arguments>
</tss>
</Tdef>
<rt>
<cr id="c9ac3731f901a69a2b4c6e4b58b9a2ed_cee828ebfa349cf4c9acbee792782654"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="8" kind="class" name="SHA512" id="c9ac3731f901a69a2b4c6e4b58b9a2ed_ed7236a70c9dcef455230f868359c00f" file="21" linestart="134" lineend="161">
<base access="public">
<tss>
<templatebase id="9cef79da01862170122dae4a26d54be2_63b949b3deab1b467bda4ec2c0eca8e1"/>
<template_arguments>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
<Tdef>
<tss>
<templatebase id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1"/>
<template_arguments>
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</template_arguments>
</tss>
</Tdef>
<rt>
<cr id="c9ac3731f901a69a2b4c6e4b58b9a2ed_ed7236a70c9dcef455230f868359c00f"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="8" kind="class" name="SHA384" id="c9ac3731f901a69a2b4c6e4b58b9a2ed_7fe9c20b6da57470d2d204db929d9709" file="21" linestart="167" lineend="194">
<base access="public">
<tss>
<templatebase id="9cef79da01862170122dae4a26d54be2_63b949b3deab1b467bda4ec2c0eca8e1"/>
<template_arguments>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
<Tdef>
<tss>
<templatebase id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1"/>
<template_arguments>
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</template_arguments>
</tss>
</Tdef>
<rt>
<cr id="c9ac3731f901a69a2b4c6e4b58b9a2ed_7fe9c20b6da57470d2d204db929d9709"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="OID" id="0de49a83a3329d90b562cb37888fa06b_d318bef32654b2695d3cb4f7502e1b16" file="22" linestart="166" lineend="209" previous="50e49d11b11a293369073a7ab74e7ec1_d318bef32654b2695d3cb4f7502e1b16">
<c name="OID" id="0de49a83a3329d90b562cb37888fa06b_121b38c3ba32cb16645713a100fd9171" file="22" linestart="166" lineend="166" copyconst="true" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const CryptoPP::OID &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0de49a83a3329d90b562cb37888fa06b_d318bef32654b2695d3cb4f7502e1b16"/>
</rt>
</QualType>
</lrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="6" kind="class" name="BERGeneralDecoder" id="0de49a83a3329d90b562cb37888fa06b_a3b428bc4a10c8796af1a380d5c39a04" file="22" linestart="246" lineend="276">
<base access="public">
<rt>
<cr id="24c688d13d29c77e002480b75c46e1ba_be447757010a9de9b43218074be0671f"/>
</rt>
</base>
<m name="EndReached" id="0de49a83a3329d90b562cb37888fa06b_16ca522ef89d676ce72f8a4ed3fcd45e" file="22" linestart="256" lineend="256" access="public">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="MessageEnd" id="0de49a83a3329d90b562cb37888fa06b_10ef430042b69cf6f65fc082c1129028" file="22" linestart="264" lineend="264" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="5" kind="class" name="DERGeneralEncoder" id="0de49a83a3329d90b562cb37888fa06b_39d73f5a30ac201bb4167d45d2f2da14" file="22" linestart="284" lineend="300">
<base access="public">
<rt>
<cr id="1cb3e74181f1236675f15eae3d0d1024_b56d12be781e95bc2268c8317367244b"/>
</rt>
</base>
<m name="MessageEnd" id="0de49a83a3329d90b562cb37888fa06b_94cccd3f3922717ed82199aaa1c65dae" file="22" linestart="293" lineend="293" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="7" kind="class" name="BERSequenceDecoder" id="0de49a83a3329d90b562cb37888fa06b_ccc5bc014b9f74cab78d358f845c81b5" file="22" linestart="303" lineend="310">
<base access="public">
<rt>
<cr id="0de49a83a3329d90b562cb37888fa06b_a3b428bc4a10c8796af1a380d5c39a04"/>
</rt>
</base>
<c name="BERSequenceDecoder" id="0de49a83a3329d90b562cb37888fa06b_a59bf848bbeb5153ffdbdf137767ef2e" file="22" linestart="306" lineend="307" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="inQueue" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
<p name="asnTag" proto="byte" isLiteral="true" isPrimitive="true" init="true" access2="none">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="6" kind="class" name="DERSequenceEncoder" id="0de49a83a3329d90b562cb37888fa06b_823ce684ec57f78dad489bb6169ee900" file="22" linestart="313" lineend="320">
<base access="public">
<rt>
<cr id="0de49a83a3329d90b562cb37888fa06b_39d73f5a30ac201bb4167d45d2f2da14"/>
</rt>
</base>
<c name="DERSequenceEncoder" id="0de49a83a3329d90b562cb37888fa06b_2a8b6b5aaa81164a1955f9698428ef81" file="22" linestart="316" lineend="317" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="outQueue" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
<p name="asnTag" proto="byte" isLiteral="true" isPrimitive="true" init="true" access2="none">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="ASN1CryptoMaterial" id="0de49a83a3329d90b562cb37888fa06b_efd9ba237bddc434e6c1b8194e3d2fee" file="22" linestart="374" lineend="389">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_705b04d24ef0b7b3eb1c6e318eba24fa"/>
</rt>
</base>
<base access="public">
<ttp/>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="X509PublicKey" id="0de49a83a3329d90b562cb37888fa06b_3942694e86bb07891b9dddf5fbf86db2" file="22" linestart="392" lineend="412" previous="50e49d11b11a293369073a7ab74e7ec1_3942694e86bb07891b9dddf5fbf86db2">
<base access="public">
<tss>
<templatebase id="0de49a83a3329d90b562cb37888fa06b_efd9ba237bddc434e6c1b8194e3d2fee"/>
<template_arguments>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_89225445ea81a10be4b512764f7d1776"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="5" kind="class" name="PKCS8PrivateKey" id="0de49a83a3329d90b562cb37888fa06b_566a1640031bf4152641091e3efce803" file="22" linestart="415" lineend="444" previous="50e49d11b11a293369073a7ab74e7ec1_566a1640031bf4152641091e3efce803">
<base access="public">
<tss>
<templatebase id="0de49a83a3329d90b562cb37888fa06b_efd9ba237bddc434e6c1b8194e3d2fee"/>
<template_arguments>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1ed227f0ffec90afc89021b6afebf685"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="HMAC" id="5fd4ed15a5945a59acb03890737fe246_7258472195cbcb40ad886cd2e58db505" file="23" linestart="50" lineend="71">
<base access="public">
<tss>
<templatebase id="9bd98d6c6151b905d6b217a4a5c8dbf3_a2c8498db0f5f4f730fbb5a64275aa47"/>
<template_arguments>
<rt>
<cr id="5fd4ed15a5945a59acb03890737fe246_b9b06053f25c5e62a5ee6e2120475e59"/>
</rt>
<tss>
<templatebase id="5fd4ed15a5945a59acb03890737fe246_7258472195cbcb40ad886cd2e58db505"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</base>
<e parent="5fd4ed15a5945a59acb03890737fe246_7258472195cbcb40ad886cd2e58db505" access="public" name="" id="5fd4ed15a5945a59acb03890737fe246_4345b557042e3cd40d08ee8e498275fe" file="23" linestart="53" lineend="53" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<e parent="5fd4ed15a5945a59acb03890737fe246_7258472195cbcb40ad886cd2e58db505" access="public" name="" id="5fd4ed15a5945a59acb03890737fe246_03ed9b81d3dc12679500ba3c7d17be1d" file="23" linestart="54" lineend="54" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="PrimeAndGenerator" id="1d955925cf3d93fb167da6a82d49afc0_f5dc2aed0499f09940661c61699c044e" file="24" linestart="148" lineend="198">
<c name="PrimeAndGenerator" id="1d955925cf3d93fb167da6a82d49afc0_634f00ad8fb206c529a7fea1688ff1c7" file="24" linestart="152" lineend="152" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</c>
<m name="Generate" id="1d955925cf3d93fb167da6a82d49afc0_f3bb563642a436cd270fff7531f40009" file="24" linestart="182" lineend="182" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="delta" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="rng" proto="CryptoPP::RandomNumberGenerator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4"/>
</rt>
</lrf>
</p>
<p name="pbits" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
<p name="qbits" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</m>
<m name="Prime" id="1d955925cf3d93fb167da6a82d49afc0_a2db8d55909aeef7cab3108c719d68e7" file="24" linestart="186" lineend="186" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const CryptoPP::Integer &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</fpt>
</m>
<m name="SubPrime" id="1d955925cf3d93fb167da6a82d49afc0_855ad5d3025aaf0dc2651e0e71230ae9" file="24" linestart="190" lineend="190" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const CryptoPP::Integer &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</fpt>
</m>
<m name="Generator" id="1d955925cf3d93fb167da6a82d49afc0_2bee0b9d3a8b133a721725c328a3e67e" file="24" linestart="194" lineend="194" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const CryptoPP::Integer &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</fpt>
</m>
</cr>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_d27f854cbafbe151ecdc95b689689000" file="10" linestart="6006" lineend="6009" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__rhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
</f>
<ft name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_7ba2f4a7b438046b66e55d748a951b5c" file="10" linestart="6005" lineend="6009">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_5cdb310683dce69203f7442418081ecb" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="3fdd9de4839192b19bcb40e3786e6725_4ff9d1a0bbf705a224ec14bb231dcce4" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="3fdd9de4839192b19bcb40e3786e6725_06b65c285445b259aeaefbfdb0cb3547" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_d27f854cbafbe151ecdc95b689689000" file="10" linestart="6006" lineend="6009" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__rhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
</f>
</ft>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_2d6e91b1c861fd0e70f98f2211462ccc" file="10" linestart="6018" lineend="6021" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
<p name="__rhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</f>
<ft name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_7ba2f4a7b438046b66e55d748a951b5c" file="10" linestart="6017" lineend="6021">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_f8d5e3336f12f2d71214a4db7afe1a25" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="3fdd9de4839192b19bcb40e3786e6725_2fc86e2c18d2c2d9cc0204165827a731" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="3fdd9de4839192b19bcb40e3786e6725_eb690cbb588029f1e347519e17ae5778" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_2d6e91b1c861fd0e70f98f2211462ccc" file="10" linestart="6018" lineend="6021" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
<p name="__rhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</f>
</ft>
<f name="memcpy" id="0ebe9cde6661249e1dd240987ca511cc_60bc7b595257868b3d58e003eb334889" file="25" linestart="72" lineend="72" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f name="memset" id="0ebe9cde6661249e1dd240987ca511cc_01f056bb0311297cf054435e7cf7ee95" file="25" linestart="74" lineend="74" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f name="strcmp" id="0ebe9cde6661249e1dd240987ca511cc_853718cc5e8fd6e220554c732157a4c2" file="25" linestart="77" lineend="77" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<v namespace="CryptoPP" name="g_nullNameValuePairs" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" id="5c1c5c04b0da674710abb2f6fef6fcfd_4c192a29d97607a0d769b5f6d54db1a2" file="11" linestart="487" lineend="487" storage="extern" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</v>
<f namespace="CryptoPP" name="NullRNG" id="5c1c5c04b0da674710abb2f6fef6fcfd_01c80cc4f845f34b5f6e4dda37311c2e" file="11" linestart="1357" lineend="1357" access="none">
<Attributed/>
</f>
<f namespace="CryptoPP" name="memcpy_s" id="1854966e082704a783697c5ac0b862ce_a6684231dc9f525b9f8273e5d4be435d" file="13" linestart="386" lineend="408" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="dest" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="sizeInBytes" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="src" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="STDMIN" id="1854966e082704a783697c5ac0b862ce_91d0bf2b0c269169026e8f1743173a1d" file="13" linestart="499" lineend="502" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="STDMIN" id="1854966e082704a783697c5ac0b862ce_3f612687c50b3215d178c1bdc31b24e2" file="13" linestart="499" lineend="502">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_42da48eabdb76068035479e04eb23cde" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="STDMIN" id="1854966e082704a783697c5ac0b862ce_91d0bf2b0c269169026e8f1743173a1d" file="13" linestart="499" lineend="502" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="STDMAX" id="1854966e082704a783697c5ac0b862ce_b65a9dd593db5eaad5e0ab4c314fa7f5" file="13" linestart="510" lineend="513" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="STDMAX" id="1854966e082704a783697c5ac0b862ce_7a9edef87851f2cc860b249dbb86cf41" file="13" linestart="510" lineend="513">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_1358533257093a4bfcf87fb16da196b5" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="STDMAX" id="1854966e082704a783697c5ac0b862ce_b65a9dd593db5eaad5e0ab4c314fa7f5" file="13" linestart="510" lineend="513" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="BitsToBytes" id="1854966e082704a783697c5ac0b862ce_48868c74d1789b2f98a46a5f7b9df3b9" file="13" linestart="781" lineend="784" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="bitCount" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="xorbuf" id="1854966e082704a783697c5ac0b862ce_0863fccfb36da26126bbcfa2499f4dbf" file="13" linestart="831" lineend="831" access="none">
<Attributed/>
<p name="output" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="input" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="mask" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="SaturatingSubtract" id="1854966e082704a783697c5ac0b862ce_092d2cf4329fa98a692785ba2dedd4d9" file="13" linestart="881" lineend="885" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T1">
<ttp/>
</fpt>
<p name="a" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="SaturatingSubtract" id="1854966e082704a783697c5ac0b862ce_0d531b5e4d31c3efeedc377746a98500" file="13" linestart="880" lineend="885">
<template_parameters>
<ttp name="T1" id="1854966e082704a783697c5ac0b862ce_4bfdd410eadcfd227608ba5085b25572" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="T2" id="1854966e082704a783697c5ac0b862ce_2a0b80d42c5701c1111760bf780a78a5" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="CryptoPP" name="SaturatingSubtract" id="1854966e082704a783697c5ac0b862ce_092d2cf4329fa98a692785ba2dedd4d9" file="13" linestart="881" lineend="885" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T1">
<ttp/>
</fpt>
<p name="a" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="PutWord" id="1854966e082704a783697c5ac0b862ce_06b4550224621028ba9a169fa5e66f3f" file="13" linestart="2208" lineend="2219" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="assumeAligned" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
<p name="order" proto="CryptoPP::ByteOrder" isLiteral="true" access2="none">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</p>
<p name="block" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="value" proto="T" access2="none">
<ttp/>
</p>
<p name="xorBlock" proto="const byte *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
</f>
<ft name="PutWord" id="1854966e082704a783697c5ac0b862ce_b4779acb003cbf5e3810b0b55c389ad2" file="13" linestart="2207" lineend="2219">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_8dace6da5ea263497ce341577cff9fa5" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="PutWord" id="1854966e082704a783697c5ac0b862ce_06b4550224621028ba9a169fa5e66f3f" file="13" linestart="2208" lineend="2219" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="assumeAligned" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
<p name="order" proto="CryptoPP::ByteOrder" isLiteral="true" access2="none">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</p>
<p name="block" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="value" proto="T" access2="none">
<ttp/>
</p>
<p name="xorBlock" proto="const byte *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="a_times_b_mod_c" id="2766997043c89123ae33b84c33df0642_5acdeea1d9df130fbd3e5cc2fa16f965" file="16" linestart="628" lineend="628" access="public">
<Attributed/>
<p name="x" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="y" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="m" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator==" id="2766997043c89123ae33b84c33df0642_775e2503cc741b0a7b4ab5740ed4d17d" file="16" linestart="654" lineend="654" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator&gt;" id="2766997043c89123ae33b84c33df0642_8fe27350ccfe6f3ac1da9a84d67a5423" file="16" linestart="658" lineend="658" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator&gt;=" id="2766997043c89123ae33b84c33df0642_4e6b43bbecf10a8514012356f520c19b" file="16" linestart="660" lineend="660" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator&lt;" id="2766997043c89123ae33b84c33df0642_e5b468487301f59c23d245335bb8df9f" file="16" linestart="662" lineend="662" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator+" id="2766997043c89123ae33b84c33df0642_2e853f0bc70311a3b31b183c693b8ac9" file="16" linestart="666" lineend="666" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator-" id="2766997043c89123ae33b84c33df0642_71d40605d0048193a940670f355078db" file="16" linestart="668" lineend="668" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator*" id="2766997043c89123ae33b84c33df0642_f7052c5eda455261936eb9485abf2844" file="16" linestart="671" lineend="671" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator/" id="2766997043c89123ae33b84c33df0642_7f5d08c576d697ccd2a996986d7b08dc" file="16" linestart="673" lineend="673" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator%" id="2766997043c89123ae33b84c33df0642_1a6acabbd520cfd35958fb1fce47cba4" file="16" linestart="676" lineend="676" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator/" id="2766997043c89123ae33b84c33df0642_9df755b2655749786af5b013c1191ed4" file="16" linestart="678" lineend="678" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="CryptoPP::word" isLiteral="true" isPrimitive="true" access2="none">
<ety>
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
</ety>
</p>
</f>
<f namespace="CryptoPP" name="GetValueHelper" id="9ac08af66a6df584911ebdf42c775dfe_ca9e49c379db1fee63cde99ac4b67139" file="18" linestart="226" lineend="229" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="GetValueHelperClass&lt;T, BASE&gt;">
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_ecbfc0eb5b6bb1ac7f03d5a57a7c3f68"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="pObject" proto="const T *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="valueType" proto="const std::type_info &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="31caac1812de935a4ec72f64fcd72204_f9468682203005b13c39d7d3c0a2cd5a"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="pValue" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="searchFirst" proto="const CryptoPP::NameValuePairs *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</pt>
</p>
</f>
<ft name="GetValueHelper" id="9ac08af66a6df584911ebdf42c775dfe_aff8839075976e8dbd6d242ad003c068" file="18" linestart="225" lineend="229">
<template_parameters>
<ttp name="BASE" id="9ac08af66a6df584911ebdf42c775dfe_598127de1570db4ffce5f9526a7bc86b" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_8c2b55fa6dc88e0fad66fe61e4d8fdd8" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="CryptoPP" name="GetValueHelper" id="9ac08af66a6df584911ebdf42c775dfe_ca9e49c379db1fee63cde99ac4b67139" file="18" linestart="226" lineend="229" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="GetValueHelperClass&lt;T, BASE&gt;">
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_ecbfc0eb5b6bb1ac7f03d5a57a7c3f68"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="pObject" proto="const T *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="valueType" proto="const std::type_info &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="31caac1812de935a4ec72f64fcd72204_f9468682203005b13c39d7d3c0a2cd5a"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="pValue" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="searchFirst" proto="const CryptoPP::NameValuePairs *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</pt>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="GetValueHelper" id="9ac08af66a6df584911ebdf42c775dfe_6d670f8777d5e75fa2402eb1289590c3" file="18" linestart="232" lineend="235" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="GetValueHelperClass&lt;T, T&gt;">
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_ecbfc0eb5b6bb1ac7f03d5a57a7c3f68"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="pObject" proto="const T *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="valueType" proto="const std::type_info &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="31caac1812de935a4ec72f64fcd72204_f9468682203005b13c39d7d3c0a2cd5a"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="pValue" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="searchFirst" proto="const CryptoPP::NameValuePairs *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</pt>
</p>
</f>
<ft name="GetValueHelper" id="9ac08af66a6df584911ebdf42c775dfe_aff8839075976e8dbd6d242ad003c068" file="18" linestart="231" lineend="235">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_4b02ad6c960d1770edeba776de64fb8e" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="GetValueHelper" id="9ac08af66a6df584911ebdf42c775dfe_6d670f8777d5e75fa2402eb1289590c3" file="18" linestart="232" lineend="235" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="GetValueHelperClass&lt;T, T&gt;">
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_ecbfc0eb5b6bb1ac7f03d5a57a7c3f68"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="pObject" proto="const T *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="valueType" proto="const std::type_info &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="31caac1812de935a4ec72f64fcd72204_f9468682203005b13c39d7d3c0a2cd5a"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="pValue" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="searchFirst" proto="const CryptoPP::NameValuePairs *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</pt>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="AssignFromHelper" id="9ac08af66a6df584911ebdf42c775dfe_e2ee65602e78219a8ca793fdf37d2d8a" file="18" linestart="288" lineend="291" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="AssignFromHelperClass&lt;T, BASE&gt;">
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_77633514569b0e055dd674b14d6680cc"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="pObject" proto="T *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
<p name="source" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
</f>
<ft name="AssignFromHelper" id="9ac08af66a6df584911ebdf42c775dfe_80d9303036b77ac4398cf987bad5ed28" file="18" linestart="287" lineend="291">
<template_parameters>
<ttp name="BASE" id="9ac08af66a6df584911ebdf42c775dfe_01875b37d1c6cdfe9bf9354e647edcb8" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_41a03e31736a604a360374e43b35915e" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="CryptoPP" name="AssignFromHelper" id="9ac08af66a6df584911ebdf42c775dfe_e2ee65602e78219a8ca793fdf37d2d8a" file="18" linestart="288" lineend="291" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="AssignFromHelperClass&lt;T, BASE&gt;">
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_77633514569b0e055dd674b14d6680cc"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="pObject" proto="T *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
<p name="source" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="AssignFromHelper" id="9ac08af66a6df584911ebdf42c775dfe_826c3db41e635f579fab1005d7ec1d86" file="18" linestart="294" lineend="297" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="AssignFromHelperClass&lt;T, T&gt;">
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_77633514569b0e055dd674b14d6680cc"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="pObject" proto="T *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
<p name="source" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
</f>
<ft name="AssignFromHelper" id="9ac08af66a6df584911ebdf42c775dfe_80d9303036b77ac4398cf987bad5ed28" file="18" linestart="293" lineend="297">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_46888bb320fe2689660763b5ccca2f85" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="AssignFromHelper" id="9ac08af66a6df584911ebdf42c775dfe_826c3db41e635f579fab1005d7ec1d86" file="18" linestart="294" lineend="297" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="AssignFromHelperClass&lt;T, T&gt;">
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_77633514569b0e055dd674b14d6680cc"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="pObject" proto="T *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
<p name="source" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="MakeParameters" id="9ac08af66a6df584911ebdf42c775dfe_d58bab297202d6375273e3908ed347da" file="18" linestart="516" lineend="519" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::AlgorithmParameters">
<rt>
<cr id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d"/>
</rt>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="throwIfNotUsed" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</f>
<ft name="MakeParameters" id="9ac08af66a6df584911ebdf42c775dfe_418aa8fa994b4d2fc8d47c8c2d24fd30" file="18" linestart="515" lineend="519">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_4c840efcc8b43a1a249fe67fcffd4445" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="MakeParameters" id="9ac08af66a6df584911ebdf42c775dfe_d58bab297202d6375273e3908ed347da" file="18" linestart="516" lineend="519" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::AlgorithmParameters">
<rt>
<cr id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d"/>
</rt>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="throwIfNotUsed" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="FIPS_140_2_ComplianceEnabled" id="1a95caa5d672e8c676171f8da9426718_3020a3fdcfbbf8dfa40e871e766515f5" file="26" linestart="35" lineend="35" access="none">
<Attributed/>
</f>
<f namespace="CryptoPP.Name" name="SubgroupOrderSize" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_ec898587e6137387a9af6d6b2220d4c9" file="27" linestart="31" lineend="31" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="Modulus" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_6ad90be278b606bd64b63ee0dda04d7a" file="27" linestart="33" lineend="33" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="PrivateExponent" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_0f06a936742347a7e5787e9973171c88" file="27" linestart="35" lineend="35" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="PublicElement" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_b588d4087d0569dafdbe8bbb47dd9965" file="27" linestart="36" lineend="36" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="SubgroupOrder" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_0ad596504db38fdecd05c307913e4f6a" file="27" linestart="37" lineend="37" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="SubgroupGenerator" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_aae792745416d9df924582d0d9cf5ff0" file="27" linestart="39" lineend="39" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="EncodingParameters" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_f4774758d6bfceb876c00f80f5e24c0e" file="27" linestart="66" lineend="66" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="KeyDerivationParameters" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_86bbd6a499f50332ff120f8a20b043ef" file="27" linestart="67" lineend="67" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP" name="VerifyPrime" id="1d955925cf3d93fb167da6a82d49afc0_a8f781cc60f3b96c9f40e8032cf6d6a2" file="24" linestart="76" lineend="76" access="none">
<Attributed/>
<p name="rng" proto="CryptoPP::RandomNumberGenerator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4"/>
</rt>
</lrf>
</p>
<p name="p" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="level" proto="unsigned int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="unsigned int"/>
</p>
</f>
<f namespace="CryptoPP" name="Jacobi" id="1d955925cf3d93fb167da6a82d49afc0_e2ef4b73b79e64a5e2aa01ac4e54f53e" file="24" linestart="119" lineend="119" access="none">
<Attributed/>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="DiscreteLogWorkFactor" id="1d955925cf3d93fb167da6a82d49afc0_86770143a36eba8cb05c7be83719f4b7" file="24" linestart="141" lineend="141" access="none">
<Attributed/>
<p name="bitlength" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</f>
<f namespace="CryptoPP.ASN1" name="id_dsa" id="4e1004912d9ba43fa8ed4e959d2f4673_11ce36254e193b92e5f1cfd22828c1d5" file="28" linestart="21" lineend="21" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::OID">
<rt>
<cr id="0de49a83a3329d90b562cb37888fa06b_d318bef32654b2695d3cb4f7502e1b16"/>
</rt>
</fpt>
</f>
</Externals>

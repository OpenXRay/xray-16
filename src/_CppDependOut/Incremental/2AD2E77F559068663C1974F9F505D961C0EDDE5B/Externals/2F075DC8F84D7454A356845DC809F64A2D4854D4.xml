<Externals>
<tm namespace="std" access="none" kind="class" name="allocator" id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85" file="8" linestart="63" lineend="64">
<template_parameters>
<ttp name="" id="a270e00b6e0c45c9590b40a0d0c34028_7616e420bc7988a0fdef4434c8dab66a" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" kind="class" name="allocator" id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85" file="8" linestart="64" lineend="64"/>
</tm>
<cr namespace="std.__cxx11" access="none" kind="class" name="basic_string" id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c" file="9" linestart="71" lineend="71"/>
<cts Spec="&lt;char&gt;" namespace="std" access="none" depth="0" pod="true" kind="struct" name="char_traits" id="4189cf4795d943b623ff3abe8b70c24f_76e43d9fa50c2ce16dafa9452550a098" file="10" linestart="274" lineend="382" previous="8c4e62790b6098b6fde5c5da33f73a64_76e43d9fa50c2ce16dafa9452550a098"/>
<cr namespace="std" access="none" depth="0" kind="class" name="type_info" id="31caac1812de935a4ec72f64fcd72204_f9468682203005b13c39d7d3c0a2cd5a" file="11" linestart="88" lineend="179" previous="ccc1f0055c2c5cf6ec1a7138269890da_f9468682203005b13c39d7d3c0a2cd5a"/>
<tm namespace="std.__cxx11" access="none" depth="0" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_0f870db7a9e3f80681e1e50f59c3f3e1" file="12" linestart="76" lineend="3027" previous="8c4e62790b6098b6fde5c5da33f73a64_0f870db7a9e3f80681e1e50f59c3f3e1">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_41aab7ea0b2a4f5399789cbb735bff07" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="3fdd9de4839192b19bcb40e3786e6725_3a060dd87f1183c8aa805887fa645f27" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="3fdd9de4839192b19bcb40e3786e6725_9c7a236a234ceda5d84f65309cc08d1d" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<cr namespace="std.__cxx11" access="none" depth="0" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c" file="12" linestart="77" lineend="3027" previous="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c">
<cr access="public" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_603e5586ba4340527f4b759c0ded4f93" file="12" linestart="77" lineend="77"/>
<e parent="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c" access="private" name="" id="3fdd9de4839192b19bcb40e3786e6725_106ac808f271d67a4150e50dd05602d0" file="12" linestart="158" lineend="158">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<c name="basic_string&lt;_CharT, _Traits, _Alloc&gt;" id="3fdd9de4839192b19bcb40e3786e6725_08603b4699adc2ddc50f967a727ea49f" file="12" linestart="514" lineend="516" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__s" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__a" proto="const _Alloc &amp;" isRef="true" init="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<initlist id="3fdd9de4839192b19bcb40e3786e6725_f5cef7c408d7b48a39b25df9e50585f4"/>
</c>
<c name="basic_string&lt;_CharT, _Traits, _Alloc&gt;" id="3fdd9de4839192b19bcb40e3786e6725_2c83c181d4b7958082af4668ac526446" file="12" linestart="541" lineend="561" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__str" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<InjectedClassName>
<cr id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
</InjectedClassName>
</rrf>
</p>
<initlist id="3fdd9de4839192b19bcb40e3786e6725_f5cef7c408d7b48a39b25df9e50585f4"/>
</c>
</cr>
</tm>
<tm namespace="std" access="none" depth="1" kind="class" name="vector" id="d34f6781ba12b59f5ee38657f7bbf6ce_3d0ab7465d6b9448b8c01dc907d3e25b" file="13" linestart="338" lineend="1729">
<template_parameters>
<ttp name="_Tp" id="d34f6781ba12b59f5ee38657f7bbf6ce_9f5abe40ffabe29a4b2162ab25f8073e" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Alloc" id="d34f6781ba12b59f5ee38657f7bbf6ce_a64350a4dca23860ec579d1ba0da5aed" depth="0" index="1" proto="type-parameter-0-1">
<ety>
<tss>
<templatebase id="80b43cfba781d50be7d3a6c671746419_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ety>
</ttp>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="class" name="vector" id="d34f6781ba12b59f5ee38657f7bbf6ce_3d0ab7465d6b9448b8c01dc907d3e25b" file="13" linestart="339" lineend="1729">
<base access="protected">
<tss>
<templatebase id="d34f6781ba12b59f5ee38657f7bbf6ce_5caaa986413fd442b51924fa25d462da"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="vector" id="d34f6781ba12b59f5ee38657f7bbf6ce_c48c2bde2c144b6d614d5912fe2271ba" file="13" linestart="339" lineend="339"/>
<m name="operator=" id="d34f6781ba12b59f5ee38657f7bbf6ce_a9c4e7e4f6ae699e39c4dd719e9db1d7" file="13" linestart="581" lineend="582" operator="true" access="public" hasbody="true">
<fpt cc="cdecl" proto="vector&lt;_Tp, _Alloc&gt; &amp;">
<lrf>
<InjectedClassName>
<cr id="d34f6781ba12b59f5ee38657f7bbf6ce_3d0ab7465d6b9448b8c01dc907d3e25b"/>
</InjectedClassName>
</lrf>
</fpt>
<p name="__x" proto="const vector&lt;_Tp, _Alloc&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<InjectedClassName>
<cr id="d34f6781ba12b59f5ee38657f7bbf6ce_3d0ab7465d6b9448b8c01dc907d3e25b"/>
</InjectedClassName>
</QualType>
</lrf>
</p>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="0" pod="true" kind="struct" name="EnumToType" id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1" file="14" linestart="126" lineend="129"/>
<e namespace="CryptoPP" access="none" name="ByteOrder" id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5" file="14" linestart="134" lineend="138">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="BIG_ENDIAN_ORDER" id="5c1c5c04b0da674710abb2f6fef6fcfd_0be5e7e5ceabc050bc6b86a4ee9a58fd" file="14" linestart="138" lineend="138">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</ec>
</e>
<cr namespace="CryptoPP" access="none" depth="0" kind="struct" name="DecodingResult" id="5c1c5c04b0da674710abb2f6fef6fcfd_be0d547880bf7d8efb1d2c92dcf17146" file="14" linestart="248" lineend="272">
<c name="DecodingResult" id="5c1c5c04b0da674710abb2f6fef6fcfd_1465243c6d57a979b44e72a7b5ae7386" file="14" linestart="252" lineend="252" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<initlist id="5c1c5c04b0da674710abb2f6fef6fcfd_fd61d5a263b93aa53639b90a17ee0862"/>
<initlist id="5c1c5c04b0da674710abb2f6fef6fcfd_0b48f595e90557dbfb7456a1b6b349f2"/>
</c>
<c name="DecodingResult" id="5c1c5c04b0da674710abb2f6fef6fcfd_acaaf9dcb1985854ac413673cf3d4926" file="14" linestart="256" lineend="256" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="len" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<initlist id="5c1c5c04b0da674710abb2f6fef6fcfd_fd61d5a263b93aa53639b90a17ee0862"/>
<initlist id="5c1c5c04b0da674710abb2f6fef6fcfd_0b48f595e90557dbfb7456a1b6b349f2"/>
</c>
<c name="DecodingResult" id="5c1c5c04b0da674710abb2f6fef6fcfd_56a036b33676fca6c6c38a89c47482ca" file="14" linestart="248" lineend="248" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::DecodingResult &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_be0d547880bf7d8efb1d2c92dcf17146"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="NameValuePairs" id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2" file="14" linestart="285" lineend="446">
<ft name="GetValue" id="5c1c5c04b0da674710abb2f6fef6fcfd_30bd6248230c80fb1e245d7fea43d36a" file="14" linestart="342" lineend="346">
<template_parameters>
<ttp name="T" id="5c1c5c04b0da674710abb2f6fef6fcfd_56f7f6fc34c2fbaa095541e82fda5f52" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<m name="GetValue" id="5c1c5c04b0da674710abb2f6fef6fcfd_910402c05afd6e258e5ba222e06d0b49" file="14" linestart="343" lineend="346" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="T &amp;" isRef="true" access2="none">
<lrf>
<ttp/>
</lrf>
</p>
</m>
</ft>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="RandomNumberGenerator" id="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4" file="14" linestart="1267" lineend="1349" previous="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="BufferedTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52" file="14" linestart="1422" lineend="2101" previous="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_c451eb5809cfd0da6e2b6e2a69f51a7b"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="CryptoMaterial" id="5c1c5c04b0da674710abb2f6fef6fcfd_8ab1d29469e0babd760044cff3ca4d20" file="14" linestart="2109" lineend="2218">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="GeneratableCryptoMaterial" id="5c1c5c04b0da674710abb2f6fef6fcfd_0a235fe1002006a6febecbc181f5d904" file="14" linestart="2222" lineend="2245">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_8ab1d29469e0babd760044cff3ca4d20"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="PublicKey" id="5c1c5c04b0da674710abb2f6fef6fcfd_89225445ea81a10be4b512764f7d1776" file="14" linestart="2248" lineend="2250">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_8ab1d29469e0babd760044cff3ca4d20"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="PrivateKey" id="5c1c5c04b0da674710abb2f6fef6fcfd_1ed227f0ffec90afc89021b6afebf685" file="14" linestart="2253" lineend="2255">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_0a235fe1002006a6febecbc181f5d904"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="CryptoParameters" id="5c1c5c04b0da674710abb2f6fef6fcfd_2314900121c396148ba37f25c87ddd64" file="14" linestart="2258" lineend="2260">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_0a235fe1002006a6febecbc181f5d904"/>
</rt>
</base>
<m name="operator=" id="5c1c5c04b0da674710abb2f6fef6fcfd_87f2bca2e552fc1f6ea6c5051f5d11d6" file="14" linestart="2258" lineend="2258" implicit="true" operator="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::CryptoParameters &amp;">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_2314900121c396148ba37f25c87ddd64"/>
</rt>
</lrf>
</fpt>
<p name="" proto="const CryptoPP::CryptoParameters &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_2314900121c396148ba37f25c87ddd64"/>
</rt>
</QualType>
</lrf>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="ASN1Object" id="5c1c5c04b0da674710abb2f6fef6fcfd_705b04d24ef0b7b3eb1c6e318eba24fa" file="14" linestart="2988" lineend="3008"/>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="member_ptr" id="66470bddfc6a50894905c3b9a37709a0_e675a7e9c492d66ffd9afcc7cc31a501" file="15" linestart="39" lineend="69">
<template_parameters>
<ttp name="T" id="66470bddfc6a50894905c3b9a37709a0_116a598831524f1b360022f5f98c3caa" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="member_ptr" id="66470bddfc6a50894905c3b9a37709a0_ffa4dc3c0f9ff58f718fbd56d0cf64b1" file="15" linestart="39" lineend="69">
<cr access="public" kind="class" name="member_ptr" id="66470bddfc6a50894905c3b9a37709a0_2176b9ee550b045e05ed25e40a582740" file="15" linestart="39" lineend="39"/>
<m name="operator-&gt;" id="66470bddfc6a50894905c3b9a37709a0_5ae11fd4a6ed4733aca2ea697560628c" file="15" linestart="49" lineend="49" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const T *">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</fpt>
</m>
<m name="reset" id="66470bddfc6a50894905c3b9a37709a0_4d25bc20e63fe23214e12c737da48feb" file="15" linestart="62" lineend="62" access="public" hasbody="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="p" proto="T *" isPtr="true" init="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
</m>
</cr>
</tm>
<tm namespace="CryptoPP" access="none" depth="1" kind="class" name="value_ptr" id="66470bddfc6a50894905c3b9a37709a0_ad99375779f417a2dc175b8c8eb3b125" file="15" linestart="79" lineend="92">
<template_parameters>
<ttp name="T" id="66470bddfc6a50894905c3b9a37709a0_360aa231559406cf018a6dc7aadb8f33" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="value_ptr" id="66470bddfc6a50894905c3b9a37709a0_2d569c2e180283615ab7a74f9777affb" file="15" linestart="79" lineend="92">
<base access="public">
<tss>
<templatebase id="66470bddfc6a50894905c3b9a37709a0_ffa4dc3c0f9ff58f718fbd56d0cf64b1"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="value_ptr" id="66470bddfc6a50894905c3b9a37709a0_96e8fabfc210d02a58bcc064abd00c40" file="15" linestart="79" lineend="79"/>
<m name="operator=" id="66470bddfc6a50894905c3b9a37709a0_0e4ddc3df958c85f3f070a3738f5d0b2" file="15" linestart="87" lineend="87" operator="true" access="public" hasbody="true">
<fpt cc="cdecl" proto="value_ptr&lt;T&gt; &amp;">
<lrf>
<tss>
<templatebase id="66470bddfc6a50894905c3b9a37709a0_2d569c2e180283615ab7a74f9777affb"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="rhs" proto="const value_ptr&lt;T&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="66470bddfc6a50894905c3b9a37709a0_2d569c2e180283615ab7a74f9777affb"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="AllocatorWithCleanup" id="d8d9268f1e37d2a96d5639565abceb80_7fb116f7399fb1195b61f8ed890e4dec" file="16" linestart="173" lineend="263">
<base access="public">
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_8fc6cf8542b2b2769cf4e4778cf5d797"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</base>
<tm parent="d8d9268f1e37d2a96d5639565abceb80_7fb116f7399fb1195b61f8ed890e4dec" access="none" depth="0" pod="true" kind="struct" name="rebind" id="d8d9268f1e37d2a96d5639565abceb80_9bf12acbba06946885137395cae2dced" file="16" linestart="258" lineend="258">
<template_parameters>
<ttp name="U" id="d8d9268f1e37d2a96d5639565abceb80_e05fbe7e0c659af004ef8a5b4f79d8b1" depth="1" index="0" proto="type-parameter-1-0"/>
</template_parameters>
</tm>
</cr>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_529e895b0d6705ae93e9e85d4873c1ec" file="16" linestart="458" lineend="823">
<template_parameters>
<ttp name="T" id="d8d9268f1e37d2a96d5639565abceb80_4352ad0d073fbe1f018db49d3597c830" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="A" id="d8d9268f1e37d2a96d5639565abceb80_c19aed8731dd9754453eed7c467a9a92" depth="0" index="1" proto="type-parameter-0-1">
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_7fb116f7399fb1195b61f8ed890e4dec"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ttp>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb" file="16" linestart="459" lineend="823">
<cr access="public" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_a2ad445b9b4af6e3604b7d5d74bb410e" file="16" linestart="459" lineend="459"/>
<e parent="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb" access="public" name="" id="d8d9268f1e37d2a96d5639565abceb80_a968094d426fc14c686c36c6f00b560d" file="16" linestart="482" lineend="482" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<Tdef>
<DependentName/>
</Tdef>
</integer_type>
</e>
<c name="SecBlock&lt;T, A&gt;" id="d8d9268f1e37d2a96d5639565abceb80_9b5af12fec6187d2488838f86d271803" file="16" linestart="492" lineend="493" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="size" proto="size_type" init="true" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
<initlist id="d8d9268f1e37d2a96d5639565abceb80_0e7664e7969910bcf9ef7e209730b3d8"/>
<initlist id="d8d9268f1e37d2a96d5639565abceb80_9c73ac264424bd95a923cdee2ac12ea6"/>
<initlist id="d8d9268f1e37d2a96d5639565abceb80_52746f04e8da1a679cf12744c48c2f2f"/>
</c>
<m name="size" id="d8d9268f1e37d2a96d5639565abceb80_d09e4bef4229ebd8ef857d318d5ee27c" file="16" linestart="566" lineend="566" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="size_type">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="resize" id="d8d9268f1e37d2a96d5639565abceb80_b7ac673e29427a81b8e6a6889785bbbb" file="16" linestart="800" lineend="805" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="newSize" proto="size_type" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="Integer" id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc" file="17" linestart="49" lineend="651" previous="1854966e082704a783697c5ac0b862ce_9fc7c3f8d9933c7c7a1ca858028589bc">
<base access="private">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_93b1fc22ec0febd237a800a851b64776"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_705b04d24ef0b7b3eb1c6e318eba24fa"/>
</rt>
</base>
<e parent="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc" access="public" name="Sign" id="2766997043c89123ae33b84c33df0642_a2e1e1cf890f83706c66897efe25d5b9" file="17" linestart="73" lineend="77">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<e parent="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc" access="public" name="Signedness" id="2766997043c89123ae33b84c33df0642_167177e1a7eb52b5d5aa8bb7bb73ac83" file="17" linestart="83" lineend="87">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<e parent="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc" access="public" name="RandomNumberType" id="2766997043c89123ae33b84c33df0642_70d463ab4d6d1e6cc325b72e360f049f" file="17" linestart="91" lineend="95">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<c name="Integer" id="2766997043c89123ae33b84c33df0642_1f68994320753d821460b618fdf343c4" file="17" linestart="101" lineend="101" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</c>
<c name="Integer" id="2766997043c89123ae33b84c33df0642_144373019940d892ece0e98f42452c18" file="17" linestart="104" lineend="104" copyconst="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="t" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</c>
<c name="Integer" id="2766997043c89123ae33b84c33df0642_4c0b360641f3f73059b6f1b56b6b2a9d" file="17" linestart="107" lineend="107" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="value" proto="long" isLiteral="true" isPrimitive="true" access2="none">
<bt name="long"/>
</p>
</c>
<c name="Integer" id="2766997043c89123ae33b84c33df0642_266a2a0e61ba19d9760b601a916b5fdf" file="17" linestart="145" lineend="145" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="encodedInteger" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="byteCount" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="sign" proto="CryptoPP::Integer::Signedness" isLiteral="true" init="true" access2="none">
<et>
<e id="2766997043c89123ae33b84c33df0642_167177e1a7eb52b5d5aa8bb7bb73ac83"/>
</et>
</p>
<p name="order" proto="CryptoPP::ByteOrder" isLiteral="true" init="true" access2="none">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</p>
</c>
<c name="Integer" id="2766997043c89123ae33b84c33df0642_8f00618942f2ad6594095b3d7bd055dd" file="17" linestart="158" lineend="158" explicit="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="bt" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
</c>
<m name="Zero" id="2766997043c89123ae33b84c33df0642_e0fdd66c8333679ffa0056fea49c1ad7" file="17" linestart="169" lineend="169" access="public" storage="static">
<Attributed/>
</m>
<m name="One" id="2766997043c89123ae33b84c33df0642_f5ff3d10b44319b176304fa2b426883a" file="17" linestart="173" lineend="173" access="public" storage="static">
<Attributed/>
</m>
<c name="Integer" id="2766997043c89123ae33b84c33df0642_f0fe02f37ba7e73b4df0420497a1f9ab" file="17" linestart="195" lineend="195" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="rng" proto="CryptoPP::RandomNumberGenerator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4"/>
</rt>
</lrf>
</p>
<p name="min" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="max" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="rnType" proto="CryptoPP::Integer::RandomNumberType" isLiteral="true" init="true" access2="none">
<et>
<e id="2766997043c89123ae33b84c33df0642_70d463ab4d6d1e6cc325b72e360f049f"/>
</et>
</p>
<p name="equiv" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" init="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="mod" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" init="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</c>
<m name="Power2" id="2766997043c89123ae33b84c33df0642_d02df2e66e2d9381b708eed5f4b1bab1" file="17" linestart="200" lineend="200" access="public" storage="static">
<Attributed/>
<p name="e" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="MinEncodedSize" id="2766997043c89123ae33b84c33df0642_fce6e747186eb5df85857c1d84afe765" file="17" linestart="208" lineend="208" access="public">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="sign" proto="CryptoPP::Integer::Signedness" isLiteral="true" init="true" access2="none">
<et>
<e id="2766997043c89123ae33b84c33df0642_167177e1a7eb52b5d5aa8bb7bb73ac83"/>
</et>
</p>
</m>
<m name="Encode" id="2766997043c89123ae33b84c33df0642_6e8e4226289879e16914a7587de28826" file="17" linestart="217" lineend="217" access="public">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="output" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="outputLen" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="sign" proto="CryptoPP::Integer::Signedness" isLiteral="true" init="true" access2="none">
<et>
<e id="2766997043c89123ae33b84c33df0642_167177e1a7eb52b5d5aa8bb7bb73ac83"/>
</et>
</p>
</m>
<m name="Encode" id="2766997043c89123ae33b84c33df0642_f57b99b6728e0779a8c9b6c3d0f443b2" file="17" linestart="226" lineend="226" access="public">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="bt" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
<p name="outputLen" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="sign" proto="CryptoPP::Integer::Signedness" isLiteral="true" init="true" access2="none">
<et>
<e id="2766997043c89123ae33b84c33df0642_167177e1a7eb52b5d5aa8bb7bb73ac83"/>
</et>
</p>
</m>
<m name="DEREncode" id="2766997043c89123ae33b84c33df0642_80058cf358b787016e37c49bd1e490d9" file="17" linestart="232" lineend="232" access="public">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="bt" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
</m>
<m name="OpenPGPEncode" id="2766997043c89123ae33b84c33df0642_028094639190aeda39e1db3998f6b174" file="17" linestart="252" lineend="252" access="public">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="bt" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
</m>
<m name="Decode" id="2766997043c89123ae33b84c33df0642_2559cd524c4d4bfe8c23d738ab4e06f5" file="17" linestart="265" lineend="265" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="bt" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
<p name="inputLen" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="sign" proto="CryptoPP::Integer::Signedness" isLiteral="true" init="true" access2="none">
<et>
<e id="2766997043c89123ae33b84c33df0642_167177e1a7eb52b5d5aa8bb7bb73ac83"/>
</et>
</p>
</m>
<m name="BERDecode" id="2766997043c89123ae33b84c33df0642_dfdb65b78b8e45e3a53255c8bcb6b949" file="17" linestart="274" lineend="274" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="bt" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
</m>
<m name="OpenPGPDecode" id="2766997043c89123ae33b84c33df0642_506fab946445d0d1ccab999083fd9a85" file="17" linestart="294" lineend="294" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="bt" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
</m>
<m name="BitCount" id="2766997043c89123ae33b84c33df0642_e6f6360f240a8b57d7e9eb585b527c01" file="17" linestart="310" lineend="310" access="public">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="ByteCount" id="2766997043c89123ae33b84c33df0642_033c6ae62a8e2d217a981806bdf2a62b" file="17" linestart="313" lineend="313" access="public">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="IsNegative" id="2766997043c89123ae33b84c33df0642_0a3450ff463da1f4d0fe0766df8ed61b" file="17" linestart="336" lineend="336" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="operator=" id="2766997043c89123ae33b84c33df0642_88f195f642b54371307d291f0e7476d4" file="17" linestart="357" lineend="357" operator="true" access="public">
<fpt cc="cdecl" proto="CryptoPP::Integer &amp;">
<lrf>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</lrf>
</fpt>
<p name="t" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="operator%=" id="2766997043c89123ae33b84c33df0642_7e38945d9de50f9f5d900e89e501494f" file="17" linestart="370" lineend="370" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer &amp;">
<lrf>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</lrf>
</fpt>
<p name="t" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="operator&gt;&gt;=" id="2766997043c89123ae33b84c33df0642_0cf7c9b7030ad2cebb509804fa1138ef" file="17" linestart="380" lineend="380" operator="true" access="public">
<fpt cc="cdecl" proto="CryptoPP::Integer &amp;">
<lrf>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</lrf>
</fpt>
<p name="n" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="operator&lt;&lt;" id="2766997043c89123ae33b84c33df0642_d18a423453d1cb2d1fcb49a1d83fc843" file="17" linestart="565" lineend="565" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="CryptoPP::Integer">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</fpt>
<p name="n" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="Squared" id="2766997043c89123ae33b84c33df0642_64375a165551a18cd1afc00c4df804a9" file="17" linestart="576" lineend="576" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="CryptoPP::Integer">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</fpt>
</m>
<m name="IsUnit" id="2766997043c89123ae33b84c33df0642_7440132f8768a26c24296d06f4570b96" file="17" linestart="584" lineend="584" access="public">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="Gcd" id="2766997043c89123ae33b84c33df0642_cf272581ff89b85edd840056fbde105b" file="17" linestart="597" lineend="597" access="public" storage="static">
<Attributed/>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="n" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="InverseMod" id="2766997043c89123ae33b84c33df0642_0541f3366d17a123fb007be0e4e86df2" file="17" linestart="599" lineend="599" access="public">
<fpt cc="cdecl" const="true" proto="CryptoPP::Integer">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</fpt>
<p name="n" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<c name="Integer" id="2766997043c89123ae33b84c33df0642_26a9fa600b4c93f0dcb6cb36b206c09b" file="17" linestart="635" lineend="635" access="private">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="value" proto="word" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</c>
<fl name="reg" id="2766997043c89123ae33b84c33df0642_abdc814c0de08bb7615f9e54745bd34e" file="17" linestart="638" lineend="638" access="private" proto="IntegerSecBlock">
<Tdef>
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb"/>
<template_arguments>
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_7fb116f7399fb1195b61f8ed890e4dec"/>
<template_arguments>
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</fl>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="ModularArithmetic" id="46973d2c63b82be1470c4f4a1ad0406e_d9dd639227fb394ba24c7ec9e529c830" file="2" linestart="39" lineend="262" previous="2766997043c89123ae33b84c33df0642_d9dd639227fb394ba24c7ec9e529c830">
<base access="public">
<tss>
<templatebase id="b49402185152e00cccd84d85c97c26e9_b2e037b018441cf65eca72066ed5575d"/>
<template_arguments>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</template_arguments>
</tss>
</base>
<c name="ModularArithmetic" id="46973d2c63b82be1470c4f4a1ad0406e_f05cc000e79cc589a83ba74e2a4fd2d8" file="2" linestart="55" lineend="56" copyconst="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="ma" proto="const CryptoPP::ModularArithmetic &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="46973d2c63b82be1470c4f4a1ad0406e_d9dd639227fb394ba24c7ec9e529c830"/>
</rt>
</QualType>
</lrf>
</p>
<initlist id="46973d2c63b82be1470c4f4a1ad0406e_46d4b12728e20e5e9190c6bd666a6719"/>
<initlist id="46973d2c63b82be1470c4f4a1ad0406e_9fd81bee36555d410b64a8160093efcd"/>
</c>
<m name="GetModulus" id="46973d2c63b82be1470c4f4a1ad0406e_564066d835a6f9220a84d77db5b07916" file="2" linestart="84" lineend="84" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const CryptoPP::Integer &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</fpt>
</m>
<m name="Add" id="46973d2c63b82be1470c4f4a1ad0406e_3afec52c3b657d11cefc26b36f891c83" file="2" linestart="132" lineend="132" access="public">
<fpt cc="cdecl" const="true" proto="const CryptoPP::Integer &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="Multiply" id="46973d2c63b82be1470c4f4a1ad0406e_e1baef6cbe9b5875fbd6c02bb41faf94" file="2" linestart="175" lineend="176" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const CryptoPP::Integer &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="MultiplicativeInverse" id="46973d2c63b82be1470c4f4a1ad0406e_81edd3a4af99d295e382d26a125d2c0e" file="2" linestart="195" lineend="196" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const CryptoPP::Integer &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<fl name="m_modulus" id="46973d2c63b82be1470c4f4a1ad0406e_46d4b12728e20e5e9190c6bd666a6719" file="2" linestart="260" lineend="260" access="protected" proto="CryptoPP::Integer">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</fl>
<fl name="m_result" id="46973d2c63b82be1470c4f4a1ad0406e_9fd81bee36555d410b64a8160093efcd" file="2" linestart="261" lineend="261" mutable="true" access="protected" proto="CryptoPP::Integer">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</fl>
<fl name="m_result1" id="46973d2c63b82be1470c4f4a1ad0406e_075c20bf1b093100ca0e32dac00e858f" file="2" linestart="261" lineend="261" mutable="true" access="protected" proto="CryptoPP::Integer">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</fl>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="MontgomeryRepresentation" id="46973d2c63b82be1470c4f4a1ad0406e_6ab30588ee26fd0089d8483102fc8fa5" file="2" linestart="276" lineend="317" previous="2766997043c89123ae33b84c33df0642_6ab30588ee26fd0089d8483102fc8fa5">
<base access="public">
<rt>
<cr id="46973d2c63b82be1470c4f4a1ad0406e_d9dd639227fb394ba24c7ec9e529c830"/>
</rt>
</base>
<c name="MontgomeryRepresentation" id="46973d2c63b82be1470c4f4a1ad0406e_517fbd591c20a02e2a383794ffc2373f" file="2" linestart="284" lineend="284" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="modulus" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</c>
<m name="ConvertIn" id="46973d2c63b82be1470c4f4a1ad0406e_dc418fa444de16ec802bc9b79a79ffd6" file="2" linestart="294" lineend="295" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="CryptoPP::Integer">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="ConvertOut" id="46973d2c63b82be1470c4f4a1ad0406e_0533c560ab67b5af946f4137812780ac" file="2" linestart="297" lineend="297" access="public">
<fpt cc="cdecl" const="true" proto="CryptoPP::Integer">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<c name="MontgomeryRepresentation" id="46973d2c63b82be1470c4f4a1ad0406e_13fa65186823a69016503897034488c4" file="2" linestart="276" lineend="276" copyconst="true" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const CryptoPP::MontgomeryRepresentation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="46973d2c63b82be1470c4f4a1ad0406e_6ab30588ee26fd0089d8483102fc8fa5"/>
</rt>
</QualType>
</lrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="ConstByteArrayParameter" id="9ac08af66a6df584911ebdf42c775dfe_52c7a5925454e812d7c1553551dcbf91" file="18" linestart="31" lineend="102">
<c name="ConstByteArrayParameter" id="9ac08af66a6df584911ebdf42c775dfe_e72be235f5b344808fa6c16de23d7b91" file="18" linestart="39" lineend="43" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="data" proto="const char *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="deepCopy" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_e98f72ba00ee840a7dde62fcff9df5a9"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_855b60e5d3a78536f53b91b4976ee99b"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_b43c8fca98fb4f46a31fb498423a65c1"/>
</c>
<m name="begin" id="9ac08af66a6df584911ebdf42c775dfe_d564ad8d92e72ac3cb28660a6fcbe70d" file="18" linestart="91" lineend="91" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const byte *">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</fpt>
</m>
<m name="size" id="9ac08af66a6df584911ebdf42c775dfe_74aa3909ff64c8161b93105e3a8a266d" file="18" linestart="95" lineend="95" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
</m>
</cr>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="GetValueHelperClass" id="9ac08af66a6df584911ebdf42c775dfe_ae44729cc8b6135e9acb13756f579518" file="18" linestart="153" lineend="223">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_9c5f870e3344786b3abcbee11da02d5d" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="BASE" id="9ac08af66a6df584911ebdf42c775dfe_9fd95b000b38a0b53fa56b2a4d7b9bf5" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="GetValueHelperClass" id="9ac08af66a6df584911ebdf42c775dfe_ecbfc0eb5b6bb1ac7f03d5a57a7c3f68" file="18" linestart="154" lineend="223">
<cr access="public" kind="class" name="GetValueHelperClass" id="9ac08af66a6df584911ebdf42c775dfe_be7b926e41fd8f20dc48c682dd3624bf" file="18" linestart="154" lineend="154"/>
<cv name="operator bool" id="9ac08af66a6df584911ebdf42c775dfe_aff840843188a9eb2c1aafb23ca864d3" file="18" linestart="186" lineend="186" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</cv>
<m name="Assignable" id="9ac08af66a6df584911ebdf42c775dfe_0293da97c8c9129c160f98fd029891cb" file="18" linestart="202" lineend="215" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="GetValueHelperClass&lt;T, BASE&gt; &amp;">
<lrf>
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_ecbfc0eb5b6bb1ac7f03d5a57a7c3f68"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="AlgorithmParameters" id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d" file="18" linestart="433" lineend="498" previous="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</base>
<ft name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_55da26a3b388f042cdb57c2f3f80778a" file="18" linestart="487" lineend="491">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_297ccd806106bdb141b1edb35bfb0111" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<m name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_d812482b1b0c416773a27ba9b1afc2e6" file="18" linestart="488" lineend="491" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::AlgorithmParameters &amp;">
<lrf>
<rt>
<cr id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d"/>
</rt>
</lrf>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</m>
</ft>
</cr>
<cr namespace="CryptoPP" access="none" depth="5" kind="class" name="ArraySink" id="13b13659c32da29669ac065b70ac3f18_c09c35e98893198ec3508ca3f54e5867" file="19" linestart="1157" lineend="1190">
<base access="public">
<tss>
<templatebase id="24c688d13d29c77e002480b75c46e1ba_1bdc28c5201990b78738793437991373"/>
<template_arguments>
<rt>
<cr id="24c688d13d29c77e002480b75c46e1ba_913f63548a667d98177311829d3d987c"/>
</rt>
</template_arguments>
</tss>
</base>
<c name="ArraySink" id="13b13659c32da29669ac065b70ac3f18_d7ecf7bf0774436aba0872ea5941a0ee" file="19" linestart="1171" lineend="1172" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="buf" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="size" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<initlist id="13b13659c32da29669ac065b70ac3f18_3398373e263750e3af552bb760b87fa5"/>
<initlist id="13b13659c32da29669ac065b70ac3f18_996065eaad12dd15830b6ab797006b87"/>
<initlist id="13b13659c32da29669ac065b70ac3f18_ded1f493705c3e55e18524365f162f08"/>
</c>
<m name="TotalPutLength" id="13b13659c32da29669ac065b70ac3f18_5d32d35eaa5284053cca3645ed29132c" file="19" linestart="1180" lineend="1180" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="lword">
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="6" kind="class" name="StringStore" id="13b13659c32da29669ac065b70ac3f18_91f3e8c9b700d73b2d2e6f06c87b1161" file="19" linestart="1218" lineend="1246">
<base access="public">
<rt>
<cr id="24c688d13d29c77e002480b75c46e1ba_be447757010a9de9b43218074be0671f"/>
</rt>
</base>
<c name="StringStore" id="13b13659c32da29669ac065b70ac3f18_eca0a27b85d46c99e9875bb753ba2cbc" file="19" linestart="1229" lineend="1230" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="string" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="DL_FixedBasePrecomputation" id="c6f5d52d34bb41773934d219710f2bfe_4038b4aedf246f266e91e8897232063e" file="20" linestart="33" lineend="48"/>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="ModExpPrecomputation" id="f1a43cfe278fd91e923a3ee95f69d32a_0785bb687e784e718b02436ec008dec0" file="4" linestart="21" lineend="40">
<base access="public">
<tss>
<templatebase id="c6f5d52d34bb41773934d219710f2bfe_ce6b57df1cb2090586009400a45c444d"/>
<template_arguments>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</template_arguments>
</tss>
</base>
<m name="SetModulus" id="f1a43cfe278fd91e923a3ee95f69d32a_3d24907bd7550ef5631b5072e85e2e48" file="4" linestart="35" lineend="35" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="v" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="GetModulus" id="f1a43cfe278fd91e923a3ee95f69d32a_c901451ba21dc5eb9dc53e7636cc6268" file="4" linestart="36" lineend="36" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const CryptoPP::Integer &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</fpt>
</m>
<fl name="m_mr" id="f1a43cfe278fd91e923a3ee95f69d32a_4d4d7c4f02659009fd843bc691a1d035" file="4" linestart="39" lineend="39" access="private" proto="value_ptr&lt;CryptoPP::MontgomeryRepresentation&gt;">
<tss>
<templatebase id="66470bddfc6a50894905c3b9a37709a0_2d569c2e180283615ab7a74f9777affb"/>
<template_arguments>
<rt>
<cr id="46973d2c63b82be1470c4f4a1ad0406e_6ab30588ee26fd0089d8483102fc8fa5"/>
</rt>
</template_arguments>
</tss>
</fl>
</cr>
<cr namespace="CryptoPP" access="none" depth="8" kind="class" name="SHA1" id="c9ac3731f901a69a2b4c6e4b58b9a2ed_049515b312c459a05e1134486af95fd3" file="21" linestart="26" lineend="56">
<base access="public">
<tss>
<templatebase id="9cef79da01862170122dae4a26d54be2_63b949b3deab1b467bda4ec2c0eca8e1"/>
<template_arguments>
<Tdef>
<bt name="unsigned int"/>
</Tdef>
<Tdef>
<tss>
<templatebase id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1"/>
<template_arguments>
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</template_arguments>
</tss>
</Tdef>
<rt>
<cr id="c9ac3731f901a69a2b4c6e4b58b9a2ed_049515b312c459a05e1134486af95fd3"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="8" kind="class" name="SHA256" id="c9ac3731f901a69a2b4c6e4b58b9a2ed_f7574e4c2edf419d59e1b13868b4e517" file="21" linestart="62" lineend="92">
<base access="public">
<tss>
<templatebase id="9cef79da01862170122dae4a26d54be2_63b949b3deab1b467bda4ec2c0eca8e1"/>
<template_arguments>
<Tdef>
<bt name="unsigned int"/>
</Tdef>
<Tdef>
<tss>
<templatebase id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1"/>
<template_arguments>
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</template_arguments>
</tss>
</Tdef>
<rt>
<cr id="c9ac3731f901a69a2b4c6e4b58b9a2ed_f7574e4c2edf419d59e1b13868b4e517"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="8" kind="class" name="SHA224" id="c9ac3731f901a69a2b4c6e4b58b9a2ed_cee828ebfa349cf4c9acbee792782654" file="21" linestart="98" lineend="128">
<base access="public">
<tss>
<templatebase id="9cef79da01862170122dae4a26d54be2_63b949b3deab1b467bda4ec2c0eca8e1"/>
<template_arguments>
<Tdef>
<bt name="unsigned int"/>
</Tdef>
<Tdef>
<tss>
<templatebase id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1"/>
<template_arguments>
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</template_arguments>
</tss>
</Tdef>
<rt>
<cr id="c9ac3731f901a69a2b4c6e4b58b9a2ed_cee828ebfa349cf4c9acbee792782654"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="8" kind="class" name="SHA512" id="c9ac3731f901a69a2b4c6e4b58b9a2ed_ed7236a70c9dcef455230f868359c00f" file="21" linestart="134" lineend="161">
<base access="public">
<tss>
<templatebase id="9cef79da01862170122dae4a26d54be2_63b949b3deab1b467bda4ec2c0eca8e1"/>
<template_arguments>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
<Tdef>
<tss>
<templatebase id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1"/>
<template_arguments>
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</template_arguments>
</tss>
</Tdef>
<rt>
<cr id="c9ac3731f901a69a2b4c6e4b58b9a2ed_ed7236a70c9dcef455230f868359c00f"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="8" kind="class" name="SHA384" id="c9ac3731f901a69a2b4c6e4b58b9a2ed_7fe9c20b6da57470d2d204db929d9709" file="21" linestart="167" lineend="194">
<base access="public">
<tss>
<templatebase id="9cef79da01862170122dae4a26d54be2_63b949b3deab1b467bda4ec2c0eca8e1"/>
<template_arguments>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
<Tdef>
<tss>
<templatebase id="5c1c5c04b0da674710abb2f6fef6fcfd_fd9b91b73568c846cca54e10260563e1"/>
<template_arguments>
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</template_arguments>
</tss>
</Tdef>
<rt>
<cr id="c9ac3731f901a69a2b4c6e4b58b9a2ed_7fe9c20b6da57470d2d204db929d9709"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="OID" id="0de49a83a3329d90b562cb37888fa06b_d318bef32654b2695d3cb4f7502e1b16" file="22" linestart="166" lineend="209" previous="50e49d11b11a293369073a7ab74e7ec1_d318bef32654b2695d3cb4f7502e1b16"/>
<cr namespace="CryptoPP" access="none" depth="6" kind="class" name="BERGeneralDecoder" id="0de49a83a3329d90b562cb37888fa06b_a3b428bc4a10c8796af1a380d5c39a04" file="22" linestart="246" lineend="276">
<base access="public">
<rt>
<cr id="24c688d13d29c77e002480b75c46e1ba_be447757010a9de9b43218074be0671f"/>
</rt>
</base>
<m name="EndReached" id="0de49a83a3329d90b562cb37888fa06b_16ca522ef89d676ce72f8a4ed3fcd45e" file="22" linestart="256" lineend="256" access="public">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="MessageEnd" id="0de49a83a3329d90b562cb37888fa06b_10ef430042b69cf6f65fc082c1129028" file="22" linestart="264" lineend="264" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="5" kind="class" name="DERGeneralEncoder" id="0de49a83a3329d90b562cb37888fa06b_39d73f5a30ac201bb4167d45d2f2da14" file="22" linestart="284" lineend="300">
<base access="public">
<rt>
<cr id="1cb3e74181f1236675f15eae3d0d1024_b56d12be781e95bc2268c8317367244b"/>
</rt>
</base>
<m name="MessageEnd" id="0de49a83a3329d90b562cb37888fa06b_94cccd3f3922717ed82199aaa1c65dae" file="22" linestart="293" lineend="293" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="7" kind="class" name="BERSequenceDecoder" id="0de49a83a3329d90b562cb37888fa06b_ccc5bc014b9f74cab78d358f845c81b5" file="22" linestart="303" lineend="310">
<base access="public">
<rt>
<cr id="0de49a83a3329d90b562cb37888fa06b_a3b428bc4a10c8796af1a380d5c39a04"/>
</rt>
</base>
<c name="BERSequenceDecoder" id="0de49a83a3329d90b562cb37888fa06b_a59bf848bbeb5153ffdbdf137767ef2e" file="22" linestart="306" lineend="307" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="inQueue" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
<p name="asnTag" proto="byte" isLiteral="true" isPrimitive="true" init="true" access2="none">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="6" kind="class" name="DERSequenceEncoder" id="0de49a83a3329d90b562cb37888fa06b_823ce684ec57f78dad489bb6169ee900" file="22" linestart="313" lineend="320">
<base access="public">
<rt>
<cr id="0de49a83a3329d90b562cb37888fa06b_39d73f5a30ac201bb4167d45d2f2da14"/>
</rt>
</base>
<c name="DERSequenceEncoder" id="0de49a83a3329d90b562cb37888fa06b_2a8b6b5aaa81164a1955f9698428ef81" file="22" linestart="316" lineend="317" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="outQueue" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
<p name="asnTag" proto="byte" isLiteral="true" isPrimitive="true" init="true" access2="none">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="ASN1CryptoMaterial" id="0de49a83a3329d90b562cb37888fa06b_efd9ba237bddc434e6c1b8194e3d2fee" file="22" linestart="374" lineend="389">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_705b04d24ef0b7b3eb1c6e318eba24fa"/>
</rt>
</base>
<base access="public">
<ttp/>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="X509PublicKey" id="0de49a83a3329d90b562cb37888fa06b_3942694e86bb07891b9dddf5fbf86db2" file="22" linestart="392" lineend="412" previous="50e49d11b11a293369073a7ab74e7ec1_3942694e86bb07891b9dddf5fbf86db2">
<base access="public">
<tss>
<templatebase id="0de49a83a3329d90b562cb37888fa06b_efd9ba237bddc434e6c1b8194e3d2fee"/>
<template_arguments>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_89225445ea81a10be4b512764f7d1776"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="5" kind="class" name="PKCS8PrivateKey" id="0de49a83a3329d90b562cb37888fa06b_566a1640031bf4152641091e3efce803" file="22" linestart="415" lineend="444" previous="50e49d11b11a293369073a7ab74e7ec1_566a1640031bf4152641091e3efce803">
<base access="public">
<tss>
<templatebase id="0de49a83a3329d90b562cb37888fa06b_efd9ba237bddc434e6c1b8194e3d2fee"/>
<template_arguments>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1ed227f0ffec90afc89021b6afebf685"/>
</rt>
</template_arguments>
</tss>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="HMAC" id="5fd4ed15a5945a59acb03890737fe246_7258472195cbcb40ad886cd2e58db505" file="23" linestart="50" lineend="71">
<base access="public">
<tss>
<templatebase id="9bd98d6c6151b905d6b217a4a5c8dbf3_a2c8498db0f5f4f730fbb5a64275aa47"/>
<template_arguments>
<rt>
<cr id="5fd4ed15a5945a59acb03890737fe246_b9b06053f25c5e62a5ee6e2120475e59"/>
</rt>
<tss>
<templatebase id="5fd4ed15a5945a59acb03890737fe246_7258472195cbcb40ad886cd2e58db505"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</base>
<e parent="5fd4ed15a5945a59acb03890737fe246_7258472195cbcb40ad886cd2e58db505" access="public" name="" id="5fd4ed15a5945a59acb03890737fe246_4345b557042e3cd40d08ee8e498275fe" file="23" linestart="53" lineend="53" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<e parent="5fd4ed15a5945a59acb03890737fe246_7258472195cbcb40ad886cd2e58db505" access="public" name="" id="5fd4ed15a5945a59acb03890737fe246_03ed9b81d3dc12679500ba3c7d17be1d" file="23" linestart="54" lineend="54" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
</cr>
<cr namespace="CryptoPP" access="none" depth="6" kind="class" name="DL_GroupParameters_IntegerBased" id="50d708a02c38a0249dcdef514fe1deb0_cf61aeb846fe6cfccb893d163abf7ad3" file="5" linestart="35" lineend="114">
<base access="public">
<tss>
<templatebase id="0de49a83a3329d90b562cb37888fa06b_efd9ba237bddc434e6c1b8194e3d2fee"/>
<template_arguments>
<tss>
<templatebase id="50e49d11b11a293369073a7ab74e7ec1_e489f0a505568b341cd1122292a30424"/>
<template_arguments>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</template_arguments>
</tss>
</template_arguments>
</tss>
</base>
<m name="Initialize" id="50d708a02c38a0249dcdef514fe1deb0_efe5892427a6e6feeaf7d5ae0911400e" file="5" linestart="66" lineend="67" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="p" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="q" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="g" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="GenerateRandom" id="50d708a02c38a0249dcdef514fe1deb0_2ce98667451a96ce48a56331e46c8d83" file="5" linestart="75" lineend="75" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="rng" proto="CryptoPP::RandomNumberGenerator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4"/>
</rt>
</lrf>
</p>
<p name="alg" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="GetSubgroupOrder" id="50d708a02c38a0249dcdef514fe1deb0_89c64124f6782cabd89b7b0ef2a87199" file="5" linestart="80" lineend="80" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const CryptoPP::Integer &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</fpt>
</m>
<m name="GetModulus" id="50d708a02c38a0249dcdef514fe1deb0_7ce0c6110836e5a2bb91faeea99cfbfc" file="5" linestart="98" lineend="98" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="const CryptoPP::Integer &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</fpt>
</m>
<m name="SetModulusAndSubgroupGenerator" id="50d708a02c38a0249dcdef514fe1deb0_8ee35ca52b9e212e851a21981f670cc9" file="5" linestart="99" lineend="99" pure="true" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="p" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
<p name="g" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="SetSubgroupOrder" id="50d708a02c38a0249dcdef514fe1deb0_d423cdfa0704834dadae2f00b7ded834" file="5" linestart="101" lineend="102" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="q" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="ComputeGroupOrder" id="50d708a02c38a0249dcdef514fe1deb0_a193afa00690321416d5f43d3f2a1ca6" file="5" linestart="105" lineend="106" access="protected" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="CryptoPP::Integer">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</fpt>
<p name="modulus" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="GetFieldType" id="50d708a02c38a0249dcdef514fe1deb0_4a66c9e8719b03ed86d28fe3bf108401" file="5" linestart="109" lineend="109" pure="true" virtual="true" access="protected">
<fpt cc="cdecl" const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<fl name="m_q" id="50d708a02c38a0249dcdef514fe1deb0_2a0d13d8f78d1c8df92cdcb66c67ec2d" file="5" linestart="113" lineend="113" access="private" proto="CryptoPP::Integer">
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</fl>
</cr>
<v namespace="CryptoPP" name="WORD_BITS" proto="const unsigned int" const="true" isLiteral="true" isPrimitive="true" id="176394271958e9813d3fea06a962ae07_1fe5f286675f0f50c6242e80b2e1828f" file="24" linestart="299" lineend="299" init="true" access2="none">
<QualType const="true">
<bt name="unsigned int"/>
</QualType>
</v>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_d27f854cbafbe151ecdc95b689689000" file="12" linestart="6006" lineend="6009" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__rhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
</f>
<ft name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_7ba2f4a7b438046b66e55d748a951b5c" file="12" linestart="6005" lineend="6009">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_5cdb310683dce69203f7442418081ecb" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="3fdd9de4839192b19bcb40e3786e6725_4ff9d1a0bbf705a224ec14bb231dcce4" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="3fdd9de4839192b19bcb40e3786e6725_06b65c285445b259aeaefbfdb0cb3547" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_d27f854cbafbe151ecdc95b689689000" file="12" linestart="6006" lineend="6009" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__rhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
</f>
</ft>
<f name="memcpy" id="0ebe9cde6661249e1dd240987ca511cc_60bc7b595257868b3d58e003eb334889" file="25" linestart="72" lineend="72" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f name="memset" id="0ebe9cde6661249e1dd240987ca511cc_01f056bb0311297cf054435e7cf7ee95" file="25" linestart="74" lineend="74" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f name="strcmp" id="0ebe9cde6661249e1dd240987ca511cc_853718cc5e8fd6e220554c732157a4c2" file="25" linestart="77" lineend="77" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="CryptoPP" name="memcpy_s" id="1854966e082704a783697c5ac0b862ce_a6684231dc9f525b9f8273e5d4be435d" file="26" linestart="386" lineend="408" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="dest" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="sizeInBytes" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="src" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="STDMIN" id="1854966e082704a783697c5ac0b862ce_91d0bf2b0c269169026e8f1743173a1d" file="26" linestart="499" lineend="502" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="STDMIN" id="1854966e082704a783697c5ac0b862ce_3f612687c50b3215d178c1bdc31b24e2" file="26" linestart="499" lineend="502">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_42da48eabdb76068035479e04eb23cde" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="STDMIN" id="1854966e082704a783697c5ac0b862ce_91d0bf2b0c269169026e8f1743173a1d" file="26" linestart="499" lineend="502" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="STDMAX" id="1854966e082704a783697c5ac0b862ce_b65a9dd593db5eaad5e0ab4c314fa7f5" file="26" linestart="510" lineend="513" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="STDMAX" id="1854966e082704a783697c5ac0b862ce_7a9edef87851f2cc860b249dbb86cf41" file="26" linestart="510" lineend="513">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_1358533257093a4bfcf87fb16da196b5" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="STDMAX" id="1854966e082704a783697c5ac0b862ce_b65a9dd593db5eaad5e0ab4c314fa7f5" file="26" linestart="510" lineend="513" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="BitsToBytes" id="1854966e082704a783697c5ac0b862ce_48868c74d1789b2f98a46a5f7b9df3b9" file="26" linestart="781" lineend="784" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="bitCount" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="xorbuf" id="1854966e082704a783697c5ac0b862ce_0863fccfb36da26126bbcfa2499f4dbf" file="26" linestart="831" lineend="831" access="none">
<Attributed/>
<p name="output" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="input" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="mask" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="SaturatingSubtract" id="1854966e082704a783697c5ac0b862ce_092d2cf4329fa98a692785ba2dedd4d9" file="26" linestart="881" lineend="885" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T1">
<ttp/>
</fpt>
<p name="a" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="SaturatingSubtract" id="1854966e082704a783697c5ac0b862ce_0d531b5e4d31c3efeedc377746a98500" file="26" linestart="880" lineend="885">
<template_parameters>
<ttp name="T1" id="1854966e082704a783697c5ac0b862ce_4bfdd410eadcfd227608ba5085b25572" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="T2" id="1854966e082704a783697c5ac0b862ce_2a0b80d42c5701c1111760bf780a78a5" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="CryptoPP" name="SaturatingSubtract" id="1854966e082704a783697c5ac0b862ce_092d2cf4329fa98a692785ba2dedd4d9" file="26" linestart="881" lineend="885" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T1">
<ttp/>
</fpt>
<p name="a" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="PutWord" id="1854966e082704a783697c5ac0b862ce_06b4550224621028ba9a169fa5e66f3f" file="26" linestart="2208" lineend="2219" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="assumeAligned" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
<p name="order" proto="CryptoPP::ByteOrder" isLiteral="true" access2="none">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</p>
<p name="block" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="value" proto="T" access2="none">
<ttp/>
</p>
<p name="xorBlock" proto="const byte *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
</f>
<ft name="PutWord" id="1854966e082704a783697c5ac0b862ce_b4779acb003cbf5e3810b0b55c389ad2" file="26" linestart="2207" lineend="2219">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_8dace6da5ea263497ce341577cff9fa5" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="PutWord" id="1854966e082704a783697c5ac0b862ce_06b4550224621028ba9a169fa5e66f3f" file="26" linestart="2208" lineend="2219" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="assumeAligned" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
<p name="order" proto="CryptoPP::ByteOrder" isLiteral="true" access2="none">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_671508fd6228b86bc6da3363fe2d11c5"/>
</et>
</p>
<p name="block" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="value" proto="T" access2="none">
<ttp/>
</p>
<p name="xorBlock" proto="const byte *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="operator==" id="2766997043c89123ae33b84c33df0642_775e2503cc741b0a7b4ab5740ed4d17d" file="17" linestart="654" lineend="654" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator&gt;" id="2766997043c89123ae33b84c33df0642_8fe27350ccfe6f3ac1da9a84d67a5423" file="17" linestart="658" lineend="658" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator&gt;=" id="2766997043c89123ae33b84c33df0642_4e6b43bbecf10a8514012356f520c19b" file="17" linestart="660" lineend="660" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator&lt;" id="2766997043c89123ae33b84c33df0642_e5b468487301f59c23d245335bb8df9f" file="17" linestart="662" lineend="662" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator+" id="2766997043c89123ae33b84c33df0642_2e853f0bc70311a3b31b183c693b8ac9" file="17" linestart="666" lineend="666" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator-" id="2766997043c89123ae33b84c33df0642_71d40605d0048193a940670f355078db" file="17" linestart="668" lineend="668" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator*" id="2766997043c89123ae33b84c33df0642_f7052c5eda455261936eb9485abf2844" file="17" linestart="671" lineend="671" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator%" id="2766997043c89123ae33b84c33df0642_1a6acabbd520cfd35958fb1fce47cba4" file="17" linestart="676" lineend="676" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="CryptoPP" name="operator/" id="2766997043c89123ae33b84c33df0642_9df755b2655749786af5b013c1191ed4" file="17" linestart="678" lineend="678" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::Integer">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</fpt>
<p name="a" proto="const CryptoPP::Integer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="2766997043c89123ae33b84c33df0642_9fc7c3f8d9933c7c7a1ca858028589bc"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="b" proto="CryptoPP::word" isLiteral="true" isPrimitive="true" access2="none">
<ety>
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
</ety>
</p>
</f>
<f namespace="CryptoPP" name="GetValueHelper" id="9ac08af66a6df584911ebdf42c775dfe_ca9e49c379db1fee63cde99ac4b67139" file="18" linestart="226" lineend="229" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="GetValueHelperClass&lt;T, BASE&gt;">
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_ecbfc0eb5b6bb1ac7f03d5a57a7c3f68"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="pObject" proto="const T *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="valueType" proto="const std::type_info &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="31caac1812de935a4ec72f64fcd72204_f9468682203005b13c39d7d3c0a2cd5a"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="pValue" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="searchFirst" proto="const CryptoPP::NameValuePairs *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</pt>
</p>
</f>
<ft name="GetValueHelper" id="9ac08af66a6df584911ebdf42c775dfe_aff8839075976e8dbd6d242ad003c068" file="18" linestart="225" lineend="229">
<template_parameters>
<ttp name="BASE" id="9ac08af66a6df584911ebdf42c775dfe_598127de1570db4ffce5f9526a7bc86b" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_8c2b55fa6dc88e0fad66fe61e4d8fdd8" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="CryptoPP" name="GetValueHelper" id="9ac08af66a6df584911ebdf42c775dfe_ca9e49c379db1fee63cde99ac4b67139" file="18" linestart="226" lineend="229" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="GetValueHelperClass&lt;T, BASE&gt;">
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_ecbfc0eb5b6bb1ac7f03d5a57a7c3f68"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="pObject" proto="const T *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="valueType" proto="const std::type_info &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="31caac1812de935a4ec72f64fcd72204_f9468682203005b13c39d7d3c0a2cd5a"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="pValue" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="searchFirst" proto="const CryptoPP::NameValuePairs *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</pt>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="AssignFromHelper" id="9ac08af66a6df584911ebdf42c775dfe_e2ee65602e78219a8ca793fdf37d2d8a" file="18" linestart="288" lineend="291" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="AssignFromHelperClass&lt;T, BASE&gt;">
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_77633514569b0e055dd674b14d6680cc"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="pObject" proto="T *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
<p name="source" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
</f>
<ft name="AssignFromHelper" id="9ac08af66a6df584911ebdf42c775dfe_80d9303036b77ac4398cf987bad5ed28" file="18" linestart="287" lineend="291">
<template_parameters>
<ttp name="BASE" id="9ac08af66a6df584911ebdf42c775dfe_01875b37d1c6cdfe9bf9354e647edcb8" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_41a03e31736a604a360374e43b35915e" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="CryptoPP" name="AssignFromHelper" id="9ac08af66a6df584911ebdf42c775dfe_e2ee65602e78219a8ca793fdf37d2d8a" file="18" linestart="288" lineend="291" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="AssignFromHelperClass&lt;T, BASE&gt;">
<tss>
<templatebase id="9ac08af66a6df584911ebdf42c775dfe_77633514569b0e055dd674b14d6680cc"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="pObject" proto="T *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
<p name="source" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="MakeParameters" id="9ac08af66a6df584911ebdf42c775dfe_d58bab297202d6375273e3908ed347da" file="18" linestart="516" lineend="519" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::AlgorithmParameters">
<rt>
<cr id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d"/>
</rt>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="throwIfNotUsed" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</f>
<ft name="MakeParameters" id="9ac08af66a6df584911ebdf42c775dfe_418aa8fa994b4d2fc8d47c8c2d24fd30" file="18" linestart="515" lineend="519">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_4c840efcc8b43a1a249fe67fcffd4445" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="MakeParameters" id="9ac08af66a6df584911ebdf42c775dfe_d58bab297202d6375273e3908ed347da" file="18" linestart="516" lineend="519" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::AlgorithmParameters">
<rt>
<cr id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d"/>
</rt>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="throwIfNotUsed" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</f>
</ft>
<f namespace="CryptoPP.Name" name="EncodingParameters" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_f4774758d6bfceb876c00f80f5e24c0e" file="27" linestart="66" lineend="66" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="KeyDerivationParameters" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_86bbd6a499f50332ff120f8a20b043ef" file="27" linestart="67" lineend="67" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
</Externals>

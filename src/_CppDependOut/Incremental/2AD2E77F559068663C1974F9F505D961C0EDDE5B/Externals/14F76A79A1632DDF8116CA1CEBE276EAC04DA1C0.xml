<Externals>
<tm namespace="std" access="none" kind="class" name="allocator" id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85" file="4" linestart="63" lineend="64">
<template_parameters>
<ttp name="" id="a270e00b6e0c45c9590b40a0d0c34028_7616e420bc7988a0fdef4434c8dab66a" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" kind="class" name="allocator" id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85" file="4" linestart="64" lineend="64"/>
</tm>
<tm namespace="std.__cxx11" access="none" kind="class" name="basic_string" id="8c4e62790b6098b6fde5c5da33f73a64_0f870db7a9e3f80681e1e50f59c3f3e1" file="5" linestart="69" lineend="71">
<template_parameters>
<ttp name="_CharT" id="8c4e62790b6098b6fde5c5da33f73a64_41aab7ea0b2a4f5399789cbb735bff07" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="8c4e62790b6098b6fde5c5da33f73a64_3a060dd87f1183c8aa805887fa645f27" depth="0" index="1" proto="type-parameter-0-1">
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ttp>
<ttp name="_Alloc" id="8c4e62790b6098b6fde5c5da33f73a64_9c7a236a234ceda5d84f65309cc08d1d" depth="0" index="2" proto="type-parameter-0-2">
<tss>
<templatebase id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ttp>
</template_parameters>
<cr namespace="std.__cxx11" access="none" kind="class" name="basic_string" id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c" file="5" linestart="71" lineend="71"/>
</tm>
<cr namespace="std" access="none" depth="0" kind="class" name="exception" id="2b5393bbe3f19671327b52be30b686c8_b84e67c1c1bf483f7187d5232b53ef08" file="6" linestart="60" lineend="70"/>
<cts Spec="&lt;char&gt;" namespace="std" access="none" depth="0" pod="true" kind="struct" name="char_traits" id="4189cf4795d943b623ff3abe8b70c24f_76e43d9fa50c2ce16dafa9452550a098" file="7" linestart="274" lineend="382" previous="8c4e62790b6098b6fde5c5da33f73a64_76e43d9fa50c2ce16dafa9452550a098"/>
<tm namespace="std" access="none" depth="1" kind="struct" name="not_equal_to" id="df3a5010126d222f3a951f8387a11570_70c443121f4991cd1562ac55d0bba713" file="8" linestart="360" lineend="367" previous="df3a5010126d222f3a951f8387a11570_70c443121f4991cd1562ac55d0bba713">
<template_parameters>
<ttp name="_Tp" id="df3a5010126d222f3a951f8387a11570_392a1b59ef6b0815ea84a1ec8b5b0558" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="struct" name="not_equal_to" id="df3a5010126d222f3a951f8387a11570_70c443121f4991cd1562ac55d0bba713" file="8" linestart="361" lineend="367" previous="df3a5010126d222f3a951f8387a11570_70c443121f4991cd1562ac55d0bba713">
<base access="public">
<tss>
<templatebase id="df3a5010126d222f3a951f8387a11570_15e245fd465deba38bd797dda9715209"/>
<template_arguments>
<ttp/>
<ttp/>
<bt name="bool"/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="struct" name="not_equal_to" id="df3a5010126d222f3a951f8387a11570_be093eeeb29791805c84857ecdf0d343" file="8" linestart="361" lineend="361"/>
</cr>
</tm>
<tm namespace="std" access="none" depth="1" kind="class" name="binder2nd" id="d50679947ecbb49071c01cb4de16b475_06846456d7bf4b7d4e48f04158217fa9" file="9" linestart="142" lineend="165">
<template_parameters>
<ttp name="_Operation" id="d50679947ecbb49071c01cb4de16b475_fceba0f33292067b47b6179aa389312d" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="class" name="binder2nd" id="d50679947ecbb49071c01cb4de16b475_06846456d7bf4b7d4e48f04158217fa9" file="9" linestart="143" lineend="165">
<base access="public">
<tss>
<templatebase id="df3a5010126d222f3a951f8387a11570_6ebed5c5be039f237956b7c9b0335f4e"/>
<template_arguments>
<DependentName/>
<DependentName/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="binder2nd" id="d50679947ecbb49071c01cb4de16b475_b3cac8ec1139c6378f14ae72bbfcebbb" file="9" linestart="143" lineend="143"/>
</cr>
</tm>
<tm namespace="std.__cxx11" access="none" depth="0" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_0f870db7a9e3f80681e1e50f59c3f3e1" file="10" linestart="76" lineend="3027" previous="8c4e62790b6098b6fde5c5da33f73a64_0f870db7a9e3f80681e1e50f59c3f3e1">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_41aab7ea0b2a4f5399789cbb735bff07" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="3fdd9de4839192b19bcb40e3786e6725_3a060dd87f1183c8aa805887fa645f27" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="3fdd9de4839192b19bcb40e3786e6725_9c7a236a234ceda5d84f65309cc08d1d" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<cr namespace="std.__cxx11" access="none" depth="0" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c" file="10" linestart="77" lineend="3027" previous="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c">
<cr access="public" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_603e5586ba4340527f4b759c0ded4f93" file="10" linestart="77" lineend="77"/>
<e parent="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c" access="private" name="" id="3fdd9de4839192b19bcb40e3786e6725_106ac808f271d67a4150e50dd05602d0" file="10" linestart="158" lineend="158">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<c name="basic_string&lt;_CharT, _Traits, _Alloc&gt;" id="3fdd9de4839192b19bcb40e3786e6725_41858315005eaa9311bffadb5a16bce8" file="10" linestart="437" lineend="440" copyconst="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__str" proto="const basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<InjectedClassName>
<cr id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
</InjectedClassName>
</QualType>
</lrf>
</p>
<initlist id="3fdd9de4839192b19bcb40e3786e6725_f5cef7c408d7b48a39b25df9e50585f4"/>
</c>
<c name="basic_string&lt;_CharT, _Traits, _Alloc&gt;" id="3fdd9de4839192b19bcb40e3786e6725_08603b4699adc2ddc50f967a727ea49f" file="10" linestart="514" lineend="516" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__s" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__a" proto="const _Alloc &amp;" isRef="true" init="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<initlist id="3fdd9de4839192b19bcb40e3786e6725_f5cef7c408d7b48a39b25df9e50585f4"/>
</c>
<c name="basic_string&lt;_CharT, _Traits, _Alloc&gt;" id="3fdd9de4839192b19bcb40e3786e6725_2c83c181d4b7958082af4668ac526446" file="10" linestart="541" lineend="561" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__str" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<InjectedClassName>
<cr id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
</InjectedClassName>
</rrf>
</p>
<initlist id="3fdd9de4839192b19bcb40e3786e6725_f5cef7c408d7b48a39b25df9e50585f4"/>
</c>
<m name="empty" id="3fdd9de4839192b19bcb40e3786e6725_4ed4a39f08eb290cc7cad87dc064f671" file="10" linestart="1021" lineend="1023" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
</cr>
</tm>
<tm namespace="std" access="none" depth="0" kind="struct" name="_Deque_iterator" id="e54a6f18ef6a92dccd194f9444e6dc84_13d2fbc7dc75041054e56cedc0c260cf" file="11" linestart="108" lineend="261">
<template_parameters>
<ttp name="_Tp" id="e54a6f18ef6a92dccd194f9444e6dc84_c4642843eaaddcd8c1b73b9fd84e476a" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Ref" id="e54a6f18ef6a92dccd194f9444e6dc84_5fa3c506219e875b126ead624e3d2c7b" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Ptr" id="e54a6f18ef6a92dccd194f9444e6dc84_c675e75e0118635cd92dca62888e8e56" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<cr namespace="std" access="none" depth="0" kind="struct" name="_Deque_iterator" id="e54a6f18ef6a92dccd194f9444e6dc84_13d2fbc7dc75041054e56cedc0c260cf" file="11" linestart="109" lineend="261">
<cr access="public" kind="struct" name="_Deque_iterator" id="e54a6f18ef6a92dccd194f9444e6dc84_d7b05650a7dbec3f77fc1aa3c0997e91" file="11" linestart="109" lineend="109"/>
<c name="_Deque_iterator&lt;_Tp, _Ref, _Ptr&gt;" id="e54a6f18ef6a92dccd194f9444e6dc84_53a0ce1917ecf6822949ab408d59e142" file="11" linestart="152" lineend="154" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__x" proto="const iterator &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<tss>
<templatebase id="e54a6f18ef6a92dccd194f9444e6dc84_567495eed048b828d9ee018036948ee3"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</QualType>
</lrf>
</p>
<initlist id="e54a6f18ef6a92dccd194f9444e6dc84_4e5e05bf53d2ca38b49e8b260f28aa1f"/>
<initlist id="e54a6f18ef6a92dccd194f9444e6dc84_d677745e225de35613f17760e4faf171"/>
<initlist id="e54a6f18ef6a92dccd194f9444e6dc84_7441a37be209aaea886c45ec2a5ebd02"/>
<initlist id="e54a6f18ef6a92dccd194f9444e6dc84_a6db37d062ed4a2be74ae5ea39bf0aee"/>
</c>
</cr>
</tm>
<tm namespace="std" access="none" depth="1" kind="class" name="deque" id="e54a6f18ef6a92dccd194f9444e6dc84_936b3721bb2dae502758d4d22ace95d0" file="11" linestart="831" lineend="2253">
<template_parameters>
<ttp name="_Tp" id="e54a6f18ef6a92dccd194f9444e6dc84_6bcd4e588084054509b1263d15c503ca" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Alloc" id="e54a6f18ef6a92dccd194f9444e6dc84_db5e733fde88aba71cff0f5733ac6ffa" depth="0" index="1" proto="type-parameter-0-1">
<ety>
<tss>
<templatebase id="80b43cfba781d50be7d3a6c671746419_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ety>
</ttp>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="class" name="deque" id="e54a6f18ef6a92dccd194f9444e6dc84_936b3721bb2dae502758d4d22ace95d0" file="11" linestart="832" lineend="2253">
<base access="protected">
<tss>
<templatebase id="e54a6f18ef6a92dccd194f9444e6dc84_d2a5956558a816149d3e942c93d96b43"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="deque" id="e54a6f18ef6a92dccd194f9444e6dc84_27f95d8c28b8df70cb7e61aab87a886e" file="11" linestart="832" lineend="832"/>
<m name="begin" id="e54a6f18ef6a92dccd194f9444e6dc84_0477211b6772dffa663212861baab47c" file="11" linestart="1175" lineend="1177" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="iterator">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="end" id="e54a6f18ef6a92dccd194f9444e6dc84_3447b4d86f11e55d3409b339cc08361e" file="11" linestart="1192" lineend="1194" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="iterator">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="empty" id="e54a6f18ef6a92dccd194f9444e6dc84_4d4a4af48bed28c3376043523c5de07b" file="11" linestart="1366" lineend="1368" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="front" id="e54a6f18ef6a92dccd194f9444e6dc84_993fa0446378ac8ae15bf2deea8d51ee" file="11" linestart="1460" lineend="1465" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="reference">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="push_back" id="e54a6f18ef6a92dccd194f9444e6dc84_ffdc923c34f6cda644d31500be216dfd" file="11" linestart="1551" lineend="1563" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__x" proto="const value_type &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<ttp/>
</Tdef>
</QualType>
</lrf>
</p>
</m>
<m name="pop_front" id="e54a6f18ef6a92dccd194f9444e6dc84_aa21369cd1680056dee7300dec8a9119" file="11" linestart="1587" lineend="1600" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="clear" id="e54a6f18ef6a92dccd194f9444e6dc84_768b17735f06f156a4b3d010f0a4762f" file="11" linestart="1849" lineend="1851" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="Exception" id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6" file="12" linestart="150" lineend="191">
<base access="public">
<ety>
<rt>
<cr id="2b5393bbe3f19671327b52be30b686c8_b84e67c1c1bf483f7187d5232b53ef08"/>
</rt>
</ety>
</base>
<e parent="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6" access="public" name="ErrorType" id="5c1c5c04b0da674710abb2f6fef6fcfd_4f4f301d7b6519f884419042f229b898" file="12" linestart="155" lineend="170">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="DATA_INTEGRITY_CHECK_FAILED" id="5c1c5c04b0da674710abb2f6fef6fcfd_be3f6366d4bb64104d670669e8b1bc5d" file="12" linestart="163" lineend="163">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_4f4f301d7b6519f884419042f229b898"/>
</et>
</ec>
</e>
<c name="Exception" id="5c1c5c04b0da674710abb2f6fef6fcfd_5a424c704393a8f5f19d4c52734e5e6b" file="12" linestart="175" lineend="175" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="errorType" proto="CryptoPP::Exception::ErrorType" isLiteral="true" access2="none">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_4f4f301d7b6519f884419042f229b898"/>
</et>
</p>
<p name="s" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<initlist id="5c1c5c04b0da674710abb2f6fef6fcfd_5190fbcc4b24ce39bf4870e276631c07"/>
<initlist id="5c1c5c04b0da674710abb2f6fef6fcfd_9a08cf9402b6f35eec1f3baf489b5d1b"/>
</c>
<c name="Exception" id="5c1c5c04b0da674710abb2f6fef6fcfd_cdaaf619771743b4f6dc48f4b3413c0a" file="12" linestart="150" lineend="150" copyconst="true" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const CryptoPP::Exception &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</QualType>
</lrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="InvalidArgument" id="5c1c5c04b0da674710abb2f6fef6fcfd_3c3269a71ce6dbcb3026ec479eb652e0" file="12" linestart="194" lineend="198">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</base>
<c name="InvalidArgument" id="5c1c5c04b0da674710abb2f6fef6fcfd_121d23c057ed9b1d2762af6e1c7b1cff" file="12" linestart="197" lineend="197" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="s" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<c name="InvalidArgument" id="5c1c5c04b0da674710abb2f6fef6fcfd_dc8859017c1fcd4f915d3eb566a3b27f" file="12" linestart="194" lineend="194" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::InvalidArgument &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_3c3269a71ce6dbcb3026ec479eb652e0"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="InvalidDataFormat" id="5c1c5c04b0da674710abb2f6fef6fcfd_2993a0c8d70765cb07b9d0629e329df6" file="12" linestart="201" lineend="205">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</base>
<c name="InvalidDataFormat" id="5c1c5c04b0da674710abb2f6fef6fcfd_294f888bbaab74ca3ccc91c5f143f16c" file="12" linestart="204" lineend="204" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="s" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<c name="InvalidDataFormat" id="5c1c5c04b0da674710abb2f6fef6fcfd_3dda519ecbcbbba33ad8c97392a17a42" file="12" linestart="201" lineend="201" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::InvalidDataFormat &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_2993a0c8d70765cb07b9d0629e329df6"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="InvalidCiphertext" id="5c1c5c04b0da674710abb2f6fef6fcfd_f0c0e0db7951fadcda047a94c98a18d3" file="12" linestart="208" lineend="212">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_2993a0c8d70765cb07b9d0629e329df6"/>
</rt>
</base>
<c name="InvalidCiphertext" id="5c1c5c04b0da674710abb2f6fef6fcfd_1b4f188d81657592ff5ccd030f4c6688" file="12" linestart="211" lineend="211" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="s" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<c name="InvalidCiphertext" id="5c1c5c04b0da674710abb2f6fef6fcfd_95b8e1cbec103bdb7de8293dea30472a" file="12" linestart="208" lineend="208" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::InvalidCiphertext &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_f0c0e0db7951fadcda047a94c98a18d3"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="NotImplemented" id="5c1c5c04b0da674710abb2f6fef6fcfd_a263e778c361a402dd5a16c33d01b551" file="12" linestart="215" lineend="219">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</base>
<c name="NotImplemented" id="5c1c5c04b0da674710abb2f6fef6fcfd_76febcb3cb3c316612119f8191771fb6" file="12" linestart="218" lineend="218" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="s" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<c name="NotImplemented" id="5c1c5c04b0da674710abb2f6fef6fcfd_05102d5f5602ba8bf7005ae718e7ace6" file="12" linestart="215" lineend="215" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::NotImplemented &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a263e778c361a402dd5a16c33d01b551"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="CannotFlush" id="5c1c5c04b0da674710abb2f6fef6fcfd_e7f7712e9b8ecb0dc2ea3a83281a712f" file="12" linestart="222" lineend="226">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</base>
<c name="CannotFlush" id="5c1c5c04b0da674710abb2f6fef6fcfd_f1b24a848d6061ecd758aab5a9df1534" file="12" linestart="225" lineend="225" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="s" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<c name="CannotFlush" id="5c1c5c04b0da674710abb2f6fef6fcfd_a8c9a39f33478b75a706f2a4aa9e7c2b" file="12" linestart="222" lineend="222" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::CannotFlush &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_e7f7712e9b8ecb0dc2ea3a83281a712f"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="NameValuePairs" id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2" file="12" linestart="285" lineend="446">
<ft name="GetValue" id="5c1c5c04b0da674710abb2f6fef6fcfd_30bd6248230c80fb1e245d7fea43d36a" file="12" linestart="342" lineend="346">
<template_parameters>
<ttp name="T" id="5c1c5c04b0da674710abb2f6fef6fcfd_56f7f6fc34c2fbaa095541e82fda5f52" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<m name="GetValue" id="5c1c5c04b0da674710abb2f6fef6fcfd_910402c05afd6e258e5ba222e06d0b49" file="12" linestart="343" lineend="346" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="T &amp;" isRef="true" access2="none">
<lrf>
<ttp/>
</lrf>
</p>
</m>
</ft>
<ft name="GetValueWithDefault" id="5c1c5c04b0da674710abb2f6fef6fcfd_15c0f1b219f6195469a6ed75766c1468" file="12" linestart="355" lineend="363">
<template_parameters>
<ttp name="T" id="5c1c5c04b0da674710abb2f6fef6fcfd_49abdad4f5dd9557a5a2a3ad62ee148d" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<m name="GetValueWithDefault" id="5c1c5c04b0da674710abb2f6fef6fcfd_dc34af6feff40209cf97da0efefca5f5" file="12" linestart="356" lineend="363" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="T">
<ttp/>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="defaultValue" proto="T" access2="none">
<ttp/>
</p>
</m>
</ft>
<m name="GetIntValueWithDefault" id="5c1c5c04b0da674710abb2f6fef6fcfd_c5385b6a9f2e63306696a8045bc7539e" file="12" linestart="388" lineend="389" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="defaultValue" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<ft name="GetRequiredParameter" id="5c1c5c04b0da674710abb2f6fef6fcfd_05898c9b5998e6e1dcea88c33be63bd4" file="12" linestart="413" lineend="418">
<template_parameters>
<ttp name="T" id="5c1c5c04b0da674710abb2f6fef6fcfd_5eb005562461370f362b5b45c548fadc" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<m name="GetRequiredParameter" id="5c1c5c04b0da674710abb2f6fef6fcfd_a77671879c28a61f1532af7541a4cf97" file="12" linestart="414" lineend="418" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="className" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="T &amp;" isRef="true" access2="none">
<lrf>
<ttp/>
</lrf>
</p>
</m>
</ft>
<m name="GetRequiredIntParameter" id="5c1c5c04b0da674710abb2f6fef6fcfd_fc795dec67d6c79c7677475fc68da8a3" file="12" linestart="429" lineend="433" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="className" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="Clonable" id="5c1c5c04b0da674710abb2f6fef6fcfd_378f319fc4f2b63076bfbc3a7f5c4552" file="12" linestart="495" lineend="506"/>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="Algorithm" id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a" file="12" linestart="510" lineend="532">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_378f319fc4f2b63076bfbc3a7f5c4552"/>
</rt>
</base>
<m name="AlgorithmName" id="5c1c5c04b0da674710abb2f6fef6fcfd_54feac89e36047ede7b271ebe7e74a18" file="12" linestart="531" lineend="531" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="std::string">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="StreamTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_a0b12f51a580358015f21bd40217d86d" file="12" linestart="836" lineend="993">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
<m name="MandatoryBlockSize" id="5c1c5c04b0da674710abb2f6fef6fcfd_48b097c6f153262995a4b6e7a45281c4" file="12" linestart="856" lineend="856" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="OptimalBlockSize" id="5c1c5c04b0da674710abb2f6fef6fcfd_a161b3e3b9569d4bce73619cecb711e1" file="12" linestart="863" lineend="863" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="GetOptimalBlockSizeUsed" id="5c1c5c04b0da674710abb2f6fef6fcfd_3505848eaa278aa198b6405d37650562" file="12" linestart="867" lineend="867" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="ProcessData" id="5c1c5c04b0da674710abb2f6fef6fcfd_c8cdf110fd3e0f81812e8dbd771a96e5" file="12" linestart="880" lineend="880" pure="true" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="outString" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="inString" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="ProcessLastBlock" id="5c1c5c04b0da674710abb2f6fef6fcfd_043e3f128d18417ec87cf5914e2c494b" file="12" linestart="894" lineend="894" virtual="true" access="public">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="outString" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="outLength" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="inString" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="inLength" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="MinLastBlockSize" id="5c1c5c04b0da674710abb2f6fef6fcfd_19bd4cec40ae12ad5ea6cf509982535c" file="12" linestart="911" lineend="911" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="IsLastBlockSpecial" id="5c1c5c04b0da674710abb2f6fef6fcfd_a0d5358d09182c8b3271e26659e0034d" file="12" linestart="944" lineend="944" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="ProcessString" id="5c1c5c04b0da674710abb2f6fef6fcfd_6f409671335a3a1a6b0a06530e72f7d5" file="12" linestart="950" lineend="951" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="inoutString" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="ProcessString" id="5c1c5c04b0da674710abb2f6fef6fcfd_5078f3e142adc883d3b1090754881bef" file="12" linestart="958" lineend="959" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="outString" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="inString" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="IsForwardTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_e30e6bf6ae9e181d027e2cb4aaaa1d03" file="12" linestart="992" lineend="992" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="HashTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_e4311e2ce757994731b0233ee4ec1e5d" file="12" linestart="1003" lineend="1162">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
<m name="Update" id="5c1c5c04b0da674710abb2f6fef6fcfd_5b4b72397a884f4c6271bf3be5d75d1c" file="12" linestart="1016" lineend="1016" pure="true" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="input" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="CreateUpdateSpace" id="5c1c5c04b0da674710abb2f6fef6fcfd_1f881edab9b77b8c4300df5f87894bf4" file="12" linestart="1026" lineend="1026" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="byte *">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</fpt>
<p name="size" proto="size_t &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</lrf>
</p>
</m>
<m name="DigestSize" id="5c1c5c04b0da674710abb2f6fef6fcfd_ecc8f3b5527eb6e0dc9e9cf3f3e9d28f" file="12" linestart="1043" lineend="1043" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="TruncatedFinal" id="5c1c5c04b0da674710abb2f6fef6fcfd_c42614e7e150ec26a334b6db466a518e" file="12" linestart="1112" lineend="1112" pure="true" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="digest" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="digestSize" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="TruncatedVerify" id="5c1c5c04b0da674710abb2f6fef6fcfd_7fc265842c6cdbb5492fe79bc3c0bb00" file="12" linestart="1137" lineend="1137" virtual="true" access="public">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="digest" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="digestLength" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="AuthenticatedSymmetricCipher" id="5c1c5c04b0da674710abb2f6fef6fcfd_4efac0130e2f1afca55e72fa270a629a" file="12" linestart="1205" lineend="1261">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_b9ca281bd248cc8ac3896c8342a55b6d"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a0b12f51a580358015f21bd40217d86d"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="RandomNumberGenerator" id="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4" file="12" linestart="1267" lineend="1349" previous="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
<m name="IncorporateEntropy" id="5c1c5c04b0da674710abb2f6fef6fcfd_302bc40cb5d767f68a89cbe25a363a70" file="12" linestart="1280" lineend="1284" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="input" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="GenerateIntoBufferedTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_109b63f73b672f0bb59f1b0867b0d091" file="12" linestart="1333" lineend="1333" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="target" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
<p name="channel" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="length" proto="lword" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" kind="class" name="WaitObjectContainer" id="5c1c5c04b0da674710abb2f6fef6fcfd_5f5ac0ba53527a667a546b42805a83f5" file="12" linestart="1360" lineend="1360"/>
<cr namespace="CryptoPP" access="none" kind="class" name="CallStack" id="5c1c5c04b0da674710abb2f6fef6fcfd_033d7698f5ba855cfc5adddfb38c9a6f" file="12" linestart="1362" lineend="1362"/>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="Waitable" id="5c1c5c04b0da674710abb2f6fef6fcfd_c451eb5809cfd0da6e2b6e2a69f51a7b" file="12" linestart="1365" lineend="1389"/>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="BufferedTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52" file="12" linestart="1422" lineend="2101" previous="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_c451eb5809cfd0da6e2b6e2a69f51a7b"/>
</rt>
</base>
<c name="BufferedTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_42cf93a809ebd54621ea70f59c398a11" file="12" linestart="1428" lineend="1428" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</c>
<m name="Put" id="5c1c5c04b0da674710abb2f6fef6fcfd_07366a0a4bba1ffe925253169d3aeb53" file="12" linestart="1444" lineend="1445" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="inByte" proto="byte" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="Put" id="5c1c5c04b0da674710abb2f6fef6fcfd_4fda851a177ab090b515dbe065164a4d" file="12" linestart="1454" lineend="1455" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="inString" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="CreatePutSpace" id="5c1c5c04b0da674710abb2f6fef6fcfd_be9c9b48f49b27a9713952918eb5c6d8" file="12" linestart="1483" lineend="1484" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="byte *">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</fpt>
<p name="size" proto="size_t &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</lrf>
</p>
</m>
<m name="CanModifyInput" id="5c1c5c04b0da674710abb2f6fef6fcfd_0eb1696fc6c7517b73c937c36abffc78" file="12" linestart="1489" lineend="1490" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="PutModifiable" id="5c1c5c04b0da674710abb2f6fef6fcfd_3f4a0f2404f93080f6ddde192580208e" file="12" linestart="1498" lineend="1499" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="inString" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="MessageEnd" id="5c1c5c04b0da674710abb2f6fef6fcfd_fd8713307be901d93f70bccbc6713fe7" file="12" linestart="1506" lineend="1507" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="propagation" proto="int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="int"/>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="PutMessageEnd" id="5c1c5c04b0da674710abb2f6fef6fcfd_a634566ba3a8d6cf1c15c35df6db45fc" file="12" linestart="1520" lineend="1521" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="inString" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="propagation" proto="int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="int"/>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="Put2" id="5c1c5c04b0da674710abb2f6fef6fcfd_9ac1f7f78f37a4d53936e65a72a7916f" file="12" linestart="1531" lineend="1531" pure="true" virtual="true" access="public">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="inString" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="messageEnd" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="PutModifiable2" id="5c1c5c04b0da674710abb2f6fef6fcfd_e2c398eb6b1432149cc4bd6ec695e4fa" file="12" linestart="1541" lineend="1542" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="inString" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="messageEnd" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</m>
<cr parent="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52" access="public" depth="3" kind="struct" name="BlockingInputOnly" id="5c1c5c04b0da674710abb2f6fef6fcfd_f4aaa96b218371797fe19e76c95bd2aa" file="12" linestart="1547" lineend="1548">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a263e778c361a402dd5a16c33d01b551"/>
</rt>
</base>
<c name="BlockingInputOnly" id="5c1c5c04b0da674710abb2f6fef6fcfd_3010f6d360490d28384df16334a72e3b" file="12" linestart="1548" lineend="1548" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="s" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<c name="BlockingInputOnly" id="5c1c5c04b0da674710abb2f6fef6fcfd_3a46a0b80f09c6a517c1c2b54ea8eb5f" file="12" linestart="1547" lineend="1547" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::BufferedTransformation::BlockingInputOnly &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_f4aaa96b218371797fe19e76c95bd2aa"/>
</rt>
</rrf>
</p>
</c>
</cr>
<m name="GetMaxWaitObjectCount" id="5c1c5c04b0da674710abb2f6fef6fcfd_3904ee5378ace739317ac1f49657939d" file="12" linestart="1554" lineend="1554" access="public">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="GetWaitObjects" id="5c1c5c04b0da674710abb2f6fef6fcfd_6c507f893bbb02b8613a6e2b2b670228" file="12" linestart="1564" lineend="1564" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="container" proto="CryptoPP::WaitObjectContainer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5f5ac0ba53527a667a546b42805a83f5"/>
</rt>
</lrf>
</p>
<p name="callStack" proto="const CryptoPP::CallStack &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_033d7698f5ba855cfc5adddfb38c9a6f"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="IsolatedInitialize" id="5c1c5c04b0da674710abb2f6fef6fcfd_f153f7fe3f17bb4882734985b0e3c7f7" file="12" linestart="1580" lineend="1583" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="parameters" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="IsolatedFlush" id="5c1c5c04b0da674710abb2f6fef6fcfd_4394eebe1fefcf9c6ffc6f1892abce86" file="12" linestart="1589" lineend="1589" pure="true" virtual="true" access="public">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="hardFlush" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="IsolatedMessageSeriesEnd" id="5c1c5c04b0da674710abb2f6fef6fcfd_c595a6ff34f12f2936a7467512878d45" file="12" linestart="1594" lineend="1595" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="Initialize" id="5c1c5c04b0da674710abb2f6fef6fcfd_fcd68c7ebe669f7370b8f16b1ff97554" file="12" linestart="1605" lineend="1605" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="parameters" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" init="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
<p name="propagation" proto="int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="Flush" id="5c1c5c04b0da674710abb2f6fef6fcfd_cb3abd1b10ea4df582ec8806dcc8888b" file="12" linestart="1621" lineend="1621" virtual="true" access="public">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="hardFlush" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
<p name="propagation" proto="int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="int"/>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="MessageSeriesEnd" id="5c1c5c04b0da674710abb2f6fef6fcfd_807781c8c10a51be9ee6f250ff66e7ad" file="12" linestart="1631" lineend="1631" virtual="true" access="public">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="propagation" proto="int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="int"/>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="AnyRetrievable" id="5c1c5c04b0da674710abb2f6fef6fcfd_59776cfbfebd11474f8f29761c4331bc" file="12" linestart="1657" lineend="1657" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="CopyTo" id="5c1c5c04b0da674710abb2f6fef6fcfd_d5060bd664306079aeb2768b77770ad8" file="12" linestart="1751" lineend="1752" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="lword">
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
</fpt>
<p name="target" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
<p name="copyMax" proto="lword" isLiteral="true" isPrimitive="true" init="true" access2="none">
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
</p>
<p name="channel" proto="const std::string &amp;" isRef="true" isLiteral="true" init="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</m>
<m name="TransferAllTo" id="5c1c5c04b0da674710abb2f6fef6fcfd_5fff0c7ea8edaf7ad6d3ea14a22697a2" file="12" linestart="1830" lineend="1831" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="target" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
<p name="channel" proto="const std::string &amp;" isRef="true" isLiteral="true" init="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</m>
<m name="TransferTo2" id="5c1c5c04b0da674710abb2f6fef6fcfd_dce47d5945a94775adf1fb24a7367040" file="12" linestart="1869" lineend="1869" pure="true" virtual="true" access="public">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="target" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
<p name="byteCount" proto="lword &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
</lrf>
</p>
<p name="channel" proto="const std::string &amp;" isRef="true" isLiteral="true" init="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="CopyRangeTo2" id="5c1c5c04b0da674710abb2f6fef6fcfd_c1e926f9413e9732aec74f345206e2cb" file="12" linestart="1888" lineend="1888" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="target" proto="CryptoPP::BufferedTransformation &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</lrf>
</p>
<p name="begin" proto="lword &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
</lrf>
</p>
<p name="end" proto="lword" isLiteral="true" isPrimitive="true" init="true" access2="none">
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
</p>
<p name="channel" proto="const std::string &amp;" isRef="true" isLiteral="true" init="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</m>
<cr parent="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52" access="public" depth="3" kind="struct" name="InvalidChannelName" id="5c1c5c04b0da674710abb2f6fef6fcfd_d25892483b6b7ac74c6c45532c160eba" file="12" linestart="1922" lineend="1923">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_3c3269a71ce6dbcb3026ec479eb652e0"/>
</rt>
</base>
<c name="InvalidChannelName" id="5c1c5c04b0da674710abb2f6fef6fcfd_fd3081ccb529245afb077963c03e72c9" file="12" linestart="1923" lineend="1923" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="name" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="channel" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<c name="InvalidChannelName" id="5c1c5c04b0da674710abb2f6fef6fcfd_1d6539f8339c14c7cd0851327993cf29" file="12" linestart="1922" lineend="1922" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::BufferedTransformation::InvalidChannelName &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_d25892483b6b7ac74c6c45532c160eba"/>
</rt>
</rrf>
</p>
</c>
</cr>
<m name="ChannelMessageEnd" id="5c1c5c04b0da674710abb2f6fef6fcfd_133bf0830a27c286faf6991342a577ef" file="12" linestart="1980" lineend="1981" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="channel" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="propagation" proto="int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="int"/>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="ChannelCreatePutSpace" id="5c1c5c04b0da674710abb2f6fef6fcfd_f99fffe6a423d946f99c6e5b272c8cef" file="12" linestart="2006" lineend="2006" virtual="true" access="public">
<fpt cc="cdecl" proto="byte *">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</fpt>
<p name="channel" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="size" proto="size_t &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</lrf>
</p>
</m>
<m name="ChannelPut2" id="5c1c5c04b0da674710abb2f6fef6fcfd_2bed6d3675101b99b8699560a7581e83" file="12" linestart="2015" lineend="2015" virtual="true" access="public">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="channel" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="inString" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="messageEnd" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="ChannelPutModifiable2" id="5c1c5c04b0da674710abb2f6fef6fcfd_9035cef9e0e2f85581265286f4ddaa69" file="12" linestart="2024" lineend="2024" virtual="true" access="public">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="channel" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="inString" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="messageEnd" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="ChannelFlush" id="5c1c5c04b0da674710abb2f6fef6fcfd_1adba257afda1c62d4d4c3c0a35e3f18" file="12" linestart="2034" lineend="2034" virtual="true" access="public">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="channel" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="hardFlush" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
<p name="propagation" proto="int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="int"/>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="ChannelMessageSeriesEnd" id="5c1c5c04b0da674710abb2f6fef6fcfd_5d5fae6b482f7b413c2cf4974ff054ef" file="12" linestart="2045" lineend="2045" virtual="true" access="public">
<fpt cc="cdecl" proto="bool">
<bt name="bool"/>
</fpt>
<p name="channel" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="propagation" proto="int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="int"/>
</p>
<p name="blocking" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="AttachedTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_d98f986c1e4e6f408568b10cc4778ee1" file="12" linestart="2068" lineend="2068" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::BufferedTransformation *">
<pt>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</pt>
</fpt>
</m>
<m name="Attach" id="5c1c5c04b0da674710abb2f6fef6fcfd_7d82b85b6e5b76bb9bc5459909d32209" file="12" linestart="2090" lineend="2090" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="newAttachment" proto="CryptoPP::BufferedTransformation *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</pt>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="PK_Encryptor" id="5c1c5c04b0da674710abb2f6fef6fcfd_46c146b83c6e43509f37ab52b98d7b1e" file="12" linestart="2398" lineend="2430">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_b418fd7502c330651ee878145c6d129f"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1d898ae3ae35c6ef295e3369e0809e20"/>
</rt>
</base>
<m name="CreateEncryptionFilter" id="5c1c5c04b0da674710abb2f6fef6fcfd_9a0b957abb84de97d666168f3d4e5b82" file="12" linestart="2428" lineend="2429" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="CryptoPP::BufferedTransformation *">
<pt>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</pt>
</fpt>
<p name="rng" proto="CryptoPP::RandomNumberGenerator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4"/>
</rt>
</lrf>
</p>
<p name="attachment" proto="CryptoPP::BufferedTransformation *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</pt>
</p>
<p name="parameters" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" init="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="PK_Decryptor" id="5c1c5c04b0da674710abb2f6fef6fcfd_d8920683c7c579bba37047bc55eb47cb" file="12" linestart="2434" lineend="2481">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_b418fd7502c330651ee878145c6d129f"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1646f1be61d59d9cf7160a7988cf9f42"/>
</rt>
</base>
<m name="CreateDecryptionFilter" id="5c1c5c04b0da674710abb2f6fef6fcfd_d2a9623a2f6a5bcd361c3dbaefc4f710" file="12" linestart="2463" lineend="2464" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="CryptoPP::BufferedTransformation *">
<pt>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</pt>
</fpt>
<p name="rng" proto="CryptoPP::RandomNumberGenerator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4"/>
</rt>
</lrf>
</p>
<p name="attachment" proto="CryptoPP::BufferedTransformation *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</pt>
</p>
<p name="parameters" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" init="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="PK_SignatureScheme" id="5c1c5c04b0da674710abb2f6fef6fcfd_916815d0b94303cefdc77b75acbcfb76" file="12" linestart="2487" lineend="2560">
<m name="SignatureLength" id="5c1c5c04b0da674710abb2f6fef6fcfd_6fc313e8121de39a49d51ec1b59fe17c" file="12" linestart="2515" lineend="2515" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
</m>
<m name="SignatureUpfront" id="5c1c5c04b0da674710abb2f6fef6fcfd_f85f4b652f317af0a4af5b681cd61553" file="12" linestart="2553" lineend="2553" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="PK_MessageAccumulator" id="5c1c5c04b0da674710abb2f6fef6fcfd_c5ae117dd5cc33d515b56d27607aefff" file="12" linestart="2566" lineend="2579">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_e4311e2ce757994731b0233ee4ec1e5d"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="PK_Signer" id="5c1c5c04b0da674710abb2f6fef6fcfd_5cc5e2889c0e99a41913e72526fd0837" file="12" linestart="2583" lineend="2639">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_916815d0b94303cefdc77b75acbcfb76"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1646f1be61d59d9cf7160a7988cf9f42"/>
</rt>
</base>
<m name="NewSignatureAccumulator" id="5c1c5c04b0da674710abb2f6fef6fcfd_179f70e02e22190652fa9c3c458f8632" file="12" linestart="2593" lineend="2593" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="CryptoPP::PK_MessageAccumulator *">
<pt>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_c5ae117dd5cc33d515b56d27607aefff"/>
</rt>
</pt>
</fpt>
<p name="rng" proto="CryptoPP::RandomNumberGenerator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4"/>
</rt>
</lrf>
</p>
</m>
<m name="Sign" id="5c1c5c04b0da674710abb2f6fef6fcfd_da6b3c1622c64b20b8e9765022a3cbe0" file="12" linestart="2608" lineend="2608" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="rng" proto="CryptoPP::RandomNumberGenerator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4"/>
</rt>
</lrf>
</p>
<p name="messageAccumulator" proto="CryptoPP::PK_MessageAccumulator *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_c5ae117dd5cc33d515b56d27607aefff"/>
</rt>
</pt>
</p>
<p name="signature" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="PK_Verifier" id="5c1c5c04b0da674710abb2f6fef6fcfd_7bf1db625c5b90ae50343ace70134d7b" file="12" linestart="2648" lineend="2713">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_916815d0b94303cefdc77b75acbcfb76"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1d898ae3ae35c6ef295e3369e0809e20"/>
</rt>
</base>
<m name="NewVerificationAccumulator" id="5c1c5c04b0da674710abb2f6fef6fcfd_b777c55c81b1edc33926d3004fdcc89c" file="12" linestart="2657" lineend="2657" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="CryptoPP::PK_MessageAccumulator *">
<pt>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_c5ae117dd5cc33d515b56d27607aefff"/>
</rt>
</pt>
</fpt>
</m>
<m name="InputSignature" id="5c1c5c04b0da674710abb2f6fef6fcfd_8cf5fc79eae8b7a500c0518116054920" file="12" linestart="2663" lineend="2663" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="messageAccumulator" proto="CryptoPP::PK_MessageAccumulator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_c5ae117dd5cc33d515b56d27607aefff"/>
</rt>
</lrf>
</p>
<p name="signature" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="signatureLength" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="VerifyAndRestart" id="5c1c5c04b0da674710abb2f6fef6fcfd_35171da89792480d341114de62d8fa04" file="12" linestart="2675" lineend="2675" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="messageAccumulator" proto="CryptoPP::PK_MessageAccumulator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_c5ae117dd5cc33d515b56d27607aefff"/>
</rt>
</lrf>
</p>
</m>
</cr>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="member_ptr" id="66470bddfc6a50894905c3b9a37709a0_e675a7e9c492d66ffd9afcc7cc31a501" file="13" linestart="39" lineend="69">
<template_parameters>
<ttp name="T" id="66470bddfc6a50894905c3b9a37709a0_116a598831524f1b360022f5f98c3caa" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="member_ptr" id="66470bddfc6a50894905c3b9a37709a0_ffa4dc3c0f9ff58f718fbd56d0cf64b1" file="13" linestart="39" lineend="69">
<cr access="public" kind="class" name="member_ptr" id="66470bddfc6a50894905c3b9a37709a0_2176b9ee550b045e05ed25e40a582740" file="13" linestart="39" lineend="39"/>
<c name="member_ptr&lt;T&gt;" id="66470bddfc6a50894905c3b9a37709a0_1dc7ff394e5733ce505e1a6e09fb326d" file="13" linestart="42" lineend="42" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="p" proto="T *" isPtr="true" init="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
<initlist id="66470bddfc6a50894905c3b9a37709a0_66c83fb90fd37c4759b5c456f121e786"/>
</c>
<m name="operator*" id="66470bddfc6a50894905c3b9a37709a0_9dda02adb8d7687b5b244e7367a85cf7" file="13" linestart="47" lineend="47" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T &amp;">
<lrf>
<ttp/>
</lrf>
</fpt>
</m>
<m name="operator-&gt;" id="66470bddfc6a50894905c3b9a37709a0_3498a0158a0141e829e66161856b0c0f" file="13" linestart="50" lineend="50" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T *">
<pt>
<ttp/>
</pt>
</fpt>
</m>
<m name="get" id="66470bddfc6a50894905c3b9a37709a0_77af630540970250cd918bdf08edeae6" file="13" linestart="52" lineend="52" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const T *">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</fpt>
</m>
<m name="get" id="66470bddfc6a50894905c3b9a37709a0_14f562524acc367cfe47a475413ec64b" file="13" linestart="53" lineend="53" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T *">
<pt>
<ttp/>
</pt>
</fpt>
</m>
<m name="release" id="66470bddfc6a50894905c3b9a37709a0_6d2498afce6b25cb42bbdcb67d0c82d3" file="13" linestart="55" lineend="60" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T *">
<pt>
<ttp/>
</pt>
</fpt>
</m>
<m name="reset" id="66470bddfc6a50894905c3b9a37709a0_4d25bc20e63fe23214e12c737da48feb" file="13" linestart="62" lineend="62" access="public" hasbody="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="p" proto="T *" isPtr="true" init="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="NotCopyable" id="1854966e082704a783697c5ac0b862ce_315c5091df29b1cf7ced1cd1834a66d4" file="14" linestart="230" lineend="237">
<c name="NotCopyable" id="1854966e082704a783697c5ac0b862ce_bf6f68c6973c872fa7093fbf3f5de89b" file="14" linestart="233" lineend="233" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_529e895b0d6705ae93e9e85d4873c1ec" file="15" linestart="458" lineend="823">
<template_parameters>
<ttp name="T" id="d8d9268f1e37d2a96d5639565abceb80_4352ad0d073fbe1f018db49d3597c830" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="A" id="d8d9268f1e37d2a96d5639565abceb80_c19aed8731dd9754453eed7c467a9a92" depth="0" index="1" proto="type-parameter-0-1">
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_7fb116f7399fb1195b61f8ed890e4dec"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ttp>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb" file="15" linestart="459" lineend="823">
<cr access="public" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_a2ad445b9b4af6e3604b7d5d74bb410e" file="15" linestart="459" lineend="459"/>
<e parent="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb" access="public" name="" id="d8d9268f1e37d2a96d5639565abceb80_a968094d426fc14c686c36c6f00b560d" file="15" linestart="482" lineend="482" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<Tdef>
<DependentName/>
</Tdef>
</integer_type>
</e>
<c name="SecBlock&lt;T, A&gt;" id="d8d9268f1e37d2a96d5639565abceb80_9b5af12fec6187d2488838f86d271803" file="15" linestart="492" lineend="493" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="size" proto="size_type" init="true" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
<initlist id="d8d9268f1e37d2a96d5639565abceb80_0e7664e7969910bcf9ef7e209730b3d8"/>
<initlist id="d8d9268f1e37d2a96d5639565abceb80_9c73ac264424bd95a923cdee2ac12ea6"/>
<initlist id="d8d9268f1e37d2a96d5639565abceb80_52746f04e8da1a679cf12744c48c2f2f"/>
</c>
<cv name="operator void *" id="d8d9268f1e37d2a96d5639565abceb80_cc201f4bbd9dd6020bbaf085c3282afb" file="15" linestart="530" lineend="531" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void *">
<pt>
<bt name="void"/>
</pt>
</fpt>
</cv>
<cv name="operator T *" id="d8d9268f1e37d2a96d5639565abceb80_acb059dc354737efe5aa1db0c8e381a0" file="15" linestart="535" lineend="536" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T *">
<pt>
<ttp/>
</pt>
</fpt>
</cv>
<m name="begin" id="d8d9268f1e37d2a96d5639565abceb80_3f20cd0986151df53cf24360bf7be10b" file="15" linestart="541" lineend="542" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="iterator">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="end" id="d8d9268f1e37d2a96d5639565abceb80_27bdcc12d04c0160b5a7d04aa817c24a" file="15" linestart="549" lineend="550" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="iterator">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="size" id="d8d9268f1e37d2a96d5639565abceb80_d09e4bef4229ebd8ef857d318d5ee27c" file="15" linestart="566" lineend="566" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="size_type">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="New" id="d8d9268f1e37d2a96d5639565abceb80_8c7be99526ce55ae2b9b134e354f7a32" file="15" linestart="734" lineend="739" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="newSize" proto="size_type" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="ByteQueue" id="1cb3e74181f1236675f15eae3d0d1024_b56d12be781e95bc2268c8317367244b" file="16" linestart="19" lineend="125">
<base access="public">
<tss>
<templatebase id="24c688d13d29c77e002480b75c46e1ba_1bdc28c5201990b78738793437991373"/>
<template_arguments>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</template_arguments>
</tss>
</base>
<m name="Clear" id="1cb3e74181f1236675f15eae3d0d1024_8251d7eb2fdca5303c6a3e9c0b6d847b" file="16" linestart="58" lineend="58" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="ConstByteArrayParameter" id="9ac08af66a6df584911ebdf42c775dfe_52c7a5925454e812d7c1553551dcbf91" file="17" linestart="31" lineend="102">
<c name="ConstByteArrayParameter" id="9ac08af66a6df584911ebdf42c775dfe_e72be235f5b344808fa6c16de23d7b91" file="17" linestart="39" lineend="43" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="data" proto="const char *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="deepCopy" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_e98f72ba00ee840a7dde62fcff9df5a9"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_855b60e5d3a78536f53b91b4976ee99b"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_b43c8fca98fb4f46a31fb498423a65c1"/>
</c>
<c name="ConstByteArrayParameter" id="9ac08af66a6df584911ebdf42c775dfe_57fb007f25b9ae2c84e8d26925a284c4" file="17" linestart="51" lineend="55" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="data" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="size" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="deepCopy" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_e98f72ba00ee840a7dde62fcff9df5a9"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_855b60e5d3a78536f53b91b4976ee99b"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_b43c8fca98fb4f46a31fb498423a65c1"/>
</c>
<ft name="ConstByteArrayParameter" id="9ac08af66a6df584911ebdf42c775dfe_6c74afcb5a98626a1896b8bef1878dd1" file="17" linestart="63" lineend="68">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_c86e552df4e5655734d4db0360f14695" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<c name="ConstByteArrayParameter" id="9ac08af66a6df584911ebdf42c775dfe_2b3996f622df6958bc36f062c1bb836c" file="17" linestart="63" lineend="68" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="string" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="deepCopy" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_e98f72ba00ee840a7dde62fcff9df5a9"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_855b60e5d3a78536f53b91b4976ee99b"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_b43c8fca98fb4f46a31fb498423a65c1"/>
</c>
</ft>
<m name="begin" id="9ac08af66a6df584911ebdf42c775dfe_d564ad8d92e72ac3cb28660a6fcbe70d" file="17" linestart="91" lineend="91" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="const byte *">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</fpt>
</m>
<m name="size" id="9ac08af66a6df584911ebdf42c775dfe_74aa3909ff64c8161b93105e3a8a266d" file="17" linestart="95" lineend="95" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="ByteArrayParameter" id="9ac08af66a6df584911ebdf42c775dfe_ad60cf9314b054a347bf06246e7a4387" file="17" linestart="106" lineend="130">
<c name="ByteArrayParameter" id="9ac08af66a6df584911ebdf42c775dfe_29c6bcf4f220f9273ff6005fa3f5e0e8" file="17" linestart="112" lineend="113" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="data" proto="byte *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="size" proto="unsigned int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="unsigned int"/>
</p>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_fbca620f77d066aac51aa459ef7e0f13"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_15f5d0525415381ce2d9ca9075e89c67"/>
</c>
<m name="begin" id="9ac08af66a6df584911ebdf42c775dfe_851c5cddbe4795291bedf75251153bbe" file="17" linestart="121" lineend="121" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="byte *">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</fpt>
</m>
<m name="size" id="9ac08af66a6df584911ebdf42c775dfe_1138d6a14e800857e6fa46b157ca4bc0" file="17" linestart="125" lineend="125" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="CombinedNameValuePairs" id="9ac08af66a6df584911ebdf42c775dfe_125c021c3338e067344845225d601f91" file="17" linestart="137" lineend="150">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</base>
<c name="CombinedNameValuePairs" id="9ac08af66a6df584911ebdf42c775dfe_bd170944311227729fd6141dbaef2f9d" file="17" linestart="143" lineend="144" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="pairs1" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
<p name="pairs2" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_32c58ed765d548d30cb4fecac93a8cd3"/>
<initlist id="9ac08af66a6df584911ebdf42c775dfe_38c90cb8590d685d62131e797b1c46a1"/>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="AlgorithmParameters" id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d" file="17" linestart="433" lineend="498" previous="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</base>
<ft name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_55da26a3b388f042cdb57c2f3f80778a" file="17" linestart="487" lineend="491">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_297ccd806106bdb141b1edb35bfb0111" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<m name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_d812482b1b0c416773a27ba9b1afc2e6" file="17" linestart="488" lineend="491" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::AlgorithmParameters &amp;">
<lrf>
<rt>
<cr id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d"/>
</rt>
</lrf>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</m>
</ft>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="struct" name="FilterPutSpaceHelper" id="13b13659c32da29669ac065b70ac3f18_8484b31a65603cc0c062db2e9e562f07" file="1" linestart="160" lineend="214">
<c name="FilterPutSpaceHelper" id="13b13659c32da29669ac065b70ac3f18_46786e211f877aa60cefc9f5fde2965e" file="1" linestart="160" lineend="160" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" pod="true" kind="struct" name="BlockPaddingSchemeDef" id="13b13659c32da29669ac065b70ac3f18_6ef9557e7d492cb38f14228ce79bc62f" file="1" linestart="467" lineend="499">
<e parent="13b13659c32da29669ac065b70ac3f18_6ef9557e7d492cb38f14228ce79bc62f" access="public" name="BlockPaddingScheme" id="13b13659c32da29669ac065b70ac3f18_ad2fa58d15059452d52c719b51422fd1" file="1" linestart="477" lineend="498">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<c name="BlockPaddingSchemeDef" id="13b13659c32da29669ac065b70ac3f18_80aa0cebe6a0914f563ef8360fa48fcc" file="1" linestart="467" lineend="467" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr parent="13b13659c32da29669ac065b70ac3f18_bc52253543aab73633169187b9af8052" access="public" depth="2" kind="class" name="HashVerificationFailed" id="13b13659c32da29669ac065b70ac3f18_5b0f414e32724f16f0931a47e952e89f" file="1" linestart="596" lineend="601">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</base>
<c name="HashVerificationFailed" id="13b13659c32da29669ac065b70ac3f18_3af6b75594371b2063ce6e4ad5cecfb1" file="1" linestart="596" lineend="596" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::HashVerificationFilter::HashVerificationFailed &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="13b13659c32da29669ac065b70ac3f18_5b0f414e32724f16f0931a47e952e89f"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr parent="13b13659c32da29669ac065b70ac3f18_0e05b1c18715ab371fadb65dbc8506e1" access="public" depth="2" kind="class" name="SignatureVerificationFailed" id="13b13659c32da29669ac065b70ac3f18_ae0f8f0830f3ca959ebc2aed3a7ad53a" file="1" linestart="791" lineend="796">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</base>
<c name="SignatureVerificationFailed" id="13b13659c32da29669ac065b70ac3f18_caa327d04dade4ce1bcb88a053436766" file="1" linestart="791" lineend="791" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::SignatureVerificationFilter::SignatureVerificationFailed &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="13b13659c32da29669ac065b70ac3f18_ae0f8f0830f3ca959ebc2aed3a7ad53a"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="4" kind="class" name="MessageQueue" id="67662e81cee0e2bf4ed4a8929b378f98_9747c73d67b7ac572f1bce33c45175c0" file="18" linestart="14" lineend="67">
<base access="public">
<tss>
<templatebase id="24c688d13d29c77e002480b75c46e1ba_fadcaaae5fada0e92526885805edcd07"/>
<template_arguments>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_cb9a4ea5319e0296dcbdb1504a3c8c52"/>
</rt>
</template_arguments>
</tss>
</base>
<c name="MessageQueue" id="67662e81cee0e2bf4ed4a8929b378f98_fdb11c9b108c892288f1d557550f6dfa" file="18" linestart="17" lineend="17" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="nodeSize" proto="unsigned int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="unsigned int"/>
</p>
</c>
</cr>
<v namespace="CryptoPP" name="LWORD_MAX" proto="const lword" const="true" isLiteral="true" isPrimitive="true" id="176394271958e9813d3fea06a962ae07_42393218f1f7568980c8aa6cd983c3e0" file="19" linestart="223" lineend="223" init="true" access2="none">
<QualType const="true">
<Tdef>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</Tdef>
</QualType>
</v>
<f namespace="std" name="bind2nd" id="d50679947ecbb49071c01cb4de16b475_4088ee971722d5ff66ee83ea03b77389" file="9" linestart="169" lineend="174" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="binder2nd&lt;_Operation&gt;">
<tss>
<templatebase id="d50679947ecbb49071c01cb4de16b475_06846456d7bf4b7d4e48f04158217fa9"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__fn" proto="const _Operation &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="__x" proto="const _Tp &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="bind2nd" id="d50679947ecbb49071c01cb4de16b475_47c23ffb94ca3a05a952d75e53b0d982" file="9" linestart="168" lineend="174">
<template_parameters>
<ttp name="_Operation" id="d50679947ecbb49071c01cb4de16b475_8be2589522f80c2ad4b5b27748bb5bdb" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Tp" id="d50679947ecbb49071c01cb4de16b475_8d5fb7ca16e9ba82468a63af688f14c8" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="std" name="bind2nd" id="d50679947ecbb49071c01cb4de16b475_4088ee971722d5ff66ee83ea03b77389" file="9" linestart="169" lineend="174" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="binder2nd&lt;_Operation&gt;">
<tss>
<templatebase id="d50679947ecbb49071c01cb4de16b475_06846456d7bf4b7d4e48f04158217fa9"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__fn" proto="const _Operation &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="__x" proto="const _Tp &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_52024c39c25eadeda07374e556ed1324" file="10" linestart="5994" lineend="6003" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
<p name="__rhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
</f>
<ft name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_7ba2f4a7b438046b66e55d748a951b5c" file="10" linestart="5993" lineend="6003">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_e1cd58a1a27a67b22e53cd020339b415" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="3fdd9de4839192b19bcb40e3786e6725_800004aaa72f3179eef6f9a87c15cd3e" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="3fdd9de4839192b19bcb40e3786e6725_2a4aad0b598bb3355cfda70ef3d3eb73" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_52024c39c25eadeda07374e556ed1324" file="10" linestart="5994" lineend="6003" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
<p name="__rhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
</f>
</ft>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_d27f854cbafbe151ecdc95b689689000" file="10" linestart="6006" lineend="6009" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__rhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
</f>
<ft name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_7ba2f4a7b438046b66e55d748a951b5c" file="10" linestart="6005" lineend="6009">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_5cdb310683dce69203f7442418081ecb" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="3fdd9de4839192b19bcb40e3786e6725_4ff9d1a0bbf705a224ec14bb231dcce4" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="3fdd9de4839192b19bcb40e3786e6725_06b65c285445b259aeaefbfdb0cb3547" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_d27f854cbafbe151ecdc95b689689000" file="10" linestart="6006" lineend="6009" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__rhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
</f>
</ft>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_2d6e91b1c861fd0e70f98f2211462ccc" file="10" linestart="6018" lineend="6021" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
<p name="__rhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</f>
<ft name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_7ba2f4a7b438046b66e55d748a951b5c" file="10" linestart="6017" lineend="6021">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_f8d5e3336f12f2d71214a4db7afe1a25" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="3fdd9de4839192b19bcb40e3786e6725_2fc86e2c18d2c2d9cc0204165827a731" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="3fdd9de4839192b19bcb40e3786e6725_eb690cbb588029f1e347519e17ae5778" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_2d6e91b1c861fd0e70f98f2211462ccc" file="10" linestart="6018" lineend="6021" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
<p name="__rhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</f>
</ft>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_78fc4cdffff650c12999be27772f5f86" file="10" linestart="5954" lineend="5961" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="const basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
<p name="__rhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</f>
<ft name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_7ba2f4a7b438046b66e55d748a951b5c" file="10" linestart="5953" lineend="5961">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_d437816dfa8b3a8bc06ec77ee4d46171" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="3fdd9de4839192b19bcb40e3786e6725_6f6594b50a44744bd60c244b9f5aebac" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="3fdd9de4839192b19bcb40e3786e6725_b7cb83b35c5a4fddb1f4161f35143b88" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<f namespace="std" name="operator+" id="3fdd9de4839192b19bcb40e3786e6725_78fc4cdffff650c12999be27772f5f86" file="10" linestart="5954" lineend="5961" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_string&lt;_CharT, _Traits, _Alloc&gt;">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="__lhs" proto="const basic_string&lt;_CharT, _Traits, _Alloc&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
<p name="__rhs" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</f>
</ft>
<f namespace="std" name="operator==" id="3fdd9de4839192b19bcb40e3786e6725_c9f5e088dc7f54102a691ce22fb45819" file="10" linestart="6045" lineend="6051" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="typename __gnu_cxx::__enable_if&lt;__is_char&lt;_CharT&gt;::__value, bool&gt;::__type">
<DependentName/>
</fpt>
<p name="__lhs" proto="const basic_string&lt;_CharT&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
<p name="__rhs" proto="const basic_string&lt;_CharT&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
</f>
<ft name="operator==" id="3fdd9de4839192b19bcb40e3786e6725_c2839315360b80ac47b3bc2a9ab7be5e" file="10" linestart="6044" lineend="6051">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_ddf50a727da037c4b7f536e412884892" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="std" name="operator==" id="3fdd9de4839192b19bcb40e3786e6725_c9f5e088dc7f54102a691ce22fb45819" file="10" linestart="6045" lineend="6051" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="typename __gnu_cxx::__enable_if&lt;__is_char&lt;_CharT&gt;::__value, bool&gt;::__type">
<DependentName/>
</fpt>
<p name="__lhs" proto="const basic_string&lt;_CharT&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
<p name="__rhs" proto="const basic_string&lt;_CharT&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="std" name="find_if" id="06af83a1c1d1241a97c07501008abe7c_e92274f22dace3781fd703caa972ee18" file="20" linestart="3920" lineend="3932" previous="5ecf488c1a9637ef0035f330ed273c1e_e92274f22dace3781fd703caa972ee18" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="_InputIterator">
<ttp/>
</fpt>
<p name="__first" proto="_InputIterator" access2="none">
<ttp/>
</p>
<p name="__last" proto="_InputIterator" access2="none">
<ttp/>
</p>
<p name="__pred" proto="_Predicate" access2="none">
<ttp/>
</p>
</f>
<ft name="find_if" id="06af83a1c1d1241a97c07501008abe7c_309ba656abdb5001f47b3af1e0a9a7a2" file="20" linestart="3919" lineend="3932" previous="5ecf488c1a9637ef0035f330ed273c1e_309ba656abdb5001f47b3af1e0a9a7a2">
<template_parameters>
<ttp name="_InputIterator" id="06af83a1c1d1241a97c07501008abe7c_3b24fea4f281eec66d16046e1c72fe85" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Predicate" id="06af83a1c1d1241a97c07501008abe7c_45f233bc6ea7e24464c456e4642e53b1" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="std" name="find_if" id="06af83a1c1d1241a97c07501008abe7c_e92274f22dace3781fd703caa972ee18" file="20" linestart="3920" lineend="3932" previous="5ecf488c1a9637ef0035f330ed273c1e_e92274f22dace3781fd703caa972ee18" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="_InputIterator">
<ttp/>
</fpt>
<p name="__first" proto="_InputIterator" access2="none">
<ttp/>
</p>
<p name="__last" proto="_InputIterator" access2="none">
<ttp/>
</p>
<p name="__pred" proto="_Predicate" access2="none">
<ttp/>
</p>
</f>
</ft>
<f namespace="std" name="sort" id="06af83a1c1d1241a97c07501008abe7c_77774e19d3e8d8112b60d4aecf8ddb10" file="20" linestart="4823" lineend="4835" previous="5ecf488c1a9637ef0035f330ed273c1e_77774e19d3e8d8112b60d4aecf8ddb10" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__first" proto="_RandomAccessIterator" access2="none">
<ttp/>
</p>
<p name="__last" proto="_RandomAccessIterator" access2="none">
<ttp/>
</p>
</f>
<ft name="sort" id="06af83a1c1d1241a97c07501008abe7c_905fcb8616371d998a01039a486ed5c2" file="20" linestart="4822" lineend="4835" previous="5ecf488c1a9637ef0035f330ed273c1e_905fcb8616371d998a01039a486ed5c2">
<template_parameters>
<ttp name="_RandomAccessIterator" id="06af83a1c1d1241a97c07501008abe7c_6ac446b38f115983e41ec75515a5cec9" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="std" name="sort" id="06af83a1c1d1241a97c07501008abe7c_77774e19d3e8d8112b60d4aecf8ddb10" file="20" linestart="4823" lineend="4835" previous="5ecf488c1a9637ef0035f330ed273c1e_77774e19d3e8d8112b60d4aecf8ddb10" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__first" proto="_RandomAccessIterator" access2="none">
<ttp/>
</p>
<p name="__last" proto="_RandomAccessIterator" access2="none">
<ttp/>
</p>
</f>
</ft>
<f name="memcpy" id="0ebe9cde6661249e1dd240987ca511cc_60bc7b595257868b3d58e003eb334889" file="21" linestart="72" lineend="72" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f name="memmove" id="0ebe9cde6661249e1dd240987ca511cc_891190993e5309d9ed8c96b89515dc25" file="21" linestart="73" lineend="73" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f name="memset" id="0ebe9cde6661249e1dd240987ca511cc_01f056bb0311297cf054435e7cf7ee95" file="21" linestart="74" lineend="74" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<v namespace="CryptoPP" name="g_nullNameValuePairs" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" id="5c1c5c04b0da674710abb2f6fef6fcfd_4c192a29d97607a0d769b5f6d54db1a2" file="12" linestart="487" lineend="487" storage="extern" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</v>
<v namespace="CryptoPP" name="DEFAULT_CHANNEL" proto="const std::string" const="true" id="5c1c5c04b0da674710abb2f6fef6fcfd_111d328ec480e0f9b630d40f959faa14" file="12" linestart="1393" lineend="1393" storage="extern" access2="none">
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</v>
<v namespace="CryptoPP" name="AAD_CHANNEL" proto="const std::string" const="true" id="5c1c5c04b0da674710abb2f6fef6fcfd_7f9103deba49580bd5b77f3b5f698607" file="12" linestart="1397" lineend="1397" storage="extern" access2="none">
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</v>
<f namespace="CryptoPP" name="STDMIN" id="1854966e082704a783697c5ac0b862ce_91d0bf2b0c269169026e8f1743173a1d" file="14" linestart="499" lineend="502" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="STDMIN" id="1854966e082704a783697c5ac0b862ce_3f612687c50b3215d178c1bdc31b24e2" file="14" linestart="499" lineend="502">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_42da48eabdb76068035479e04eb23cde" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="STDMIN" id="1854966e082704a783697c5ac0b862ce_91d0bf2b0c269169026e8f1743173a1d" file="14" linestart="499" lineend="502" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="STDMAX" id="1854966e082704a783697c5ac0b862ce_b65a9dd593db5eaad5e0ab4c314fa7f5" file="14" linestart="510" lineend="513" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="STDMAX" id="1854966e082704a783697c5ac0b862ce_7a9edef87851f2cc860b249dbb86cf41" file="14" linestart="510" lineend="513">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_1358533257093a4bfcf87fb16da196b5" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="STDMAX" id="1854966e082704a783697c5ac0b862ce_b65a9dd593db5eaad5e0ab4c314fa7f5" file="14" linestart="510" lineend="513" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
<p name="a" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="UnsignedMin" id="1854966e082704a783697c5ac0b862ce_8ab0e49d2819144883ba7c1026f9abd7" file="14" linestart="537" lineend="544" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T1">
<QualType const="true">
<ttp/>
</QualType>
</fpt>
<p name="a" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="UnsignedMin" id="1854966e082704a783697c5ac0b862ce_352b7b0afcf96b6300b5753279865169" file="14" linestart="537" lineend="544">
<template_parameters>
<ttp name="T1" id="1854966e082704a783697c5ac0b862ce_653d02f670acc4a97c9f8334baa181b9" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="T2" id="1854966e082704a783697c5ac0b862ce_c33d83e5848c3f09167548765c83d46a" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="CryptoPP" name="UnsignedMin" id="1854966e082704a783697c5ac0b862ce_8ab0e49d2819144883ba7c1026f9abd7" file="14" linestart="537" lineend="544" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T1">
<QualType const="true">
<ttp/>
</QualType>
</fpt>
<p name="a" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="IntToString" id="1854966e082704a783697c5ac0b862ce_7541ea5dc62925e33c02c81e6f6517c7" file="14" linestart="567" lineend="594" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="std::string">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</fpt>
<p name="value" proto="T" access2="none">
<ttp/>
</p>
<p name="base" proto="unsigned int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="unsigned int"/>
</p>
</f>
<ft name="IntToString" id="1854966e082704a783697c5ac0b862ce_531534a5dfc2c9d673f27b5cb9bf9480" file="14" linestart="566" lineend="594">
<template_parameters>
<ttp name="T" id="1854966e082704a783697c5ac0b862ce_da22a7713d2602f713f3bf572929c5df" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="IntToString" id="1854966e082704a783697c5ac0b862ce_7541ea5dc62925e33c02c81e6f6517c7" file="14" linestart="567" lineend="594" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="std::string">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</fpt>
<p name="value" proto="T" access2="none">
<ttp/>
</p>
<p name="base" proto="unsigned int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="unsigned int"/>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="IntToString" id="1854966e082704a783697c5ac0b862ce_3cb917af8f88ced640847382dd857b80" file="14" linestart="567" lineend="594" access="none">
<fpt cc="cdecl" proto="std::string">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</fpt>
<p name="value" proto="unsigned long long" isLiteral="true" isPrimitive="true" access2="none">
<sttp/>
</p>
<p name="base" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</f>
<f namespace="CryptoPP" name="xorbuf" id="1854966e082704a783697c5ac0b862ce_a05a6ddc6cdbb2b2b3ee23e81595c81d" file="14" linestart="822" lineend="822" access="none">
<Attributed/>
<p name="buf" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="mask" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="SaturatingSubtract" id="1854966e082704a783697c5ac0b862ce_092d2cf4329fa98a692785ba2dedd4d9" file="14" linestart="881" lineend="885" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T1">
<ttp/>
</fpt>
<p name="a" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="SaturatingSubtract" id="1854966e082704a783697c5ac0b862ce_0d531b5e4d31c3efeedc377746a98500" file="14" linestart="880" lineend="885">
<template_parameters>
<ttp name="T1" id="1854966e082704a783697c5ac0b862ce_4bfdd410eadcfd227608ba5085b25572" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="T2" id="1854966e082704a783697c5ac0b862ce_2a0b80d42c5701c1111760bf780a78a5" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="CryptoPP" name="SaturatingSubtract" id="1854966e082704a783697c5ac0b862ce_092d2cf4329fa98a692785ba2dedd4d9" file="14" linestart="881" lineend="885" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T1">
<ttp/>
</fpt>
<p name="a" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="RoundDownToMultipleOf" id="1854966e082704a783697c5ac0b862ce_7468e7c2b4df1abe49d19b71b8fd23ad" file="14" linestart="932" lineend="947" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T1">
<ttp/>
</fpt>
<p name="n" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="m" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="RoundDownToMultipleOf" id="1854966e082704a783697c5ac0b862ce_5c1eacbb637a7d5ac3bc7278ed9bc933" file="14" linestart="931" lineend="947">
<template_parameters>
<ttp name="T1" id="1854966e082704a783697c5ac0b862ce_267d01d274c622c534c8edd3c235c42f" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="T2" id="1854966e082704a783697c5ac0b862ce_add2ad1767f8d266197a87a36711241e" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="CryptoPP" name="RoundDownToMultipleOf" id="1854966e082704a783697c5ac0b862ce_7468e7c2b4df1abe49d19b71b8fd23ad" file="14" linestart="932" lineend="947" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T1">
<ttp/>
</fpt>
<p name="n" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="m" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="MakeParameters" id="9ac08af66a6df584911ebdf42c775dfe_d58bab297202d6375273e3908ed347da" file="17" linestart="516" lineend="519" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::AlgorithmParameters">
<rt>
<cr id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d"/>
</rt>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="throwIfNotUsed" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</f>
<ft name="MakeParameters" id="9ac08af66a6df584911ebdf42c775dfe_418aa8fa994b4d2fc8d47c8c2d24fd30" file="17" linestart="515" lineend="519">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_4c840efcc8b43a1a249fe67fcffd4445" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="MakeParameters" id="9ac08af66a6df584911ebdf42c775dfe_d58bab297202d6375273e3908ed347da" file="17" linestart="516" lineend="519" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::AlgorithmParameters">
<rt>
<cr id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d"/>
</rt>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="throwIfNotUsed" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</f>
</ft>
<f namespace="CryptoPP.Name" name="PutMessage" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_9fb8bfeed26f628b8eef8ac30e942d19" file="22" linestart="50" lineend="50" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="TruncatedDigestSize" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_ed40b8dc2494c537e67e40dd33b87f70" file="22" linestart="51" lineend="51" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="BlockPaddingScheme" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_7596ff87f3ae15571c402d0e21e60303" file="22" linestart="52" lineend="52" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="HashVerificationFilterFlags" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_48c7748d6607f171c9ec24a125d6885b" file="22" linestart="53" lineend="53" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="AuthenticatedDecryptionFilterFlags" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_5f53a672396119d6e23c1b85c05aafd6" file="22" linestart="54" lineend="54" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="SignatureVerificationFilterFlags" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_6339418a7e937d1be4be153100d7b5f4" file="22" linestart="55" lineend="55" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="InputBuffer" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_02780db49792f5fad72232e5cbf3cd44" file="22" linestart="56" lineend="56" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="OutputBuffer" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_f86b02f297d5a0316ad20f27fdf883a0" file="22" linestart="57" lineend="57" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
</Externals>

<Externals>
<tm namespace="std" access="none" kind="class" name="allocator" id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85" file="4" linestart="63" lineend="64">
<template_parameters>
<ttp name="" id="a270e00b6e0c45c9590b40a0d0c34028_7616e420bc7988a0fdef4434c8dab66a" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" kind="class" name="allocator" id="a270e00b6e0c45c9590b40a0d0c34028_07566aa809aee0bdf1c0fac16e19fa85" file="4" linestart="64" lineend="64"/>
</tm>
<cr namespace="std.__cxx11" access="none" kind="class" name="basic_string" id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c" file="5" linestart="71" lineend="71"/>
<cts Spec="&lt;char&gt;" namespace="std" access="none" depth="0" pod="true" kind="struct" name="char_traits" id="4189cf4795d943b623ff3abe8b70c24f_76e43d9fa50c2ce16dafa9452550a098" file="6" linestart="274" lineend="382" previous="8c4e62790b6098b6fde5c5da33f73a64_76e43d9fa50c2ce16dafa9452550a098"/>
<tm namespace="std.__cxx11" access="none" depth="0" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_0f870db7a9e3f80681e1e50f59c3f3e1" file="7" linestart="76" lineend="3027" previous="8c4e62790b6098b6fde5c5da33f73a64_0f870db7a9e3f80681e1e50f59c3f3e1">
<template_parameters>
<ttp name="_CharT" id="3fdd9de4839192b19bcb40e3786e6725_41aab7ea0b2a4f5399789cbb735bff07" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="3fdd9de4839192b19bcb40e3786e6725_3a060dd87f1183c8aa805887fa645f27" depth="0" index="1" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="3fdd9de4839192b19bcb40e3786e6725_9c7a236a234ceda5d84f65309cc08d1d" depth="0" index="2" proto="type-parameter-0-2"/>
</template_parameters>
<cr namespace="std.__cxx11" access="none" depth="0" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c" file="7" linestart="77" lineend="3027" previous="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c">
<cr access="public" kind="class" name="basic_string" id="3fdd9de4839192b19bcb40e3786e6725_603e5586ba4340527f4b759c0ded4f93" file="7" linestart="77" lineend="77"/>
<e parent="3fdd9de4839192b19bcb40e3786e6725_eec936a7b808facd5a6a87bf310b7f8c" access="private" name="" id="3fdd9de4839192b19bcb40e3786e6725_106ac808f271d67a4150e50dd05602d0" file="7" linestart="158" lineend="158">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<c name="basic_string&lt;_CharT, _Traits, _Alloc&gt;" id="3fdd9de4839192b19bcb40e3786e6725_08603b4699adc2ddc50f967a727ea49f" file="7" linestart="514" lineend="516" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="__s" proto="const _CharT *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="__a" proto="const _Alloc &amp;" isRef="true" init="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<initlist id="3fdd9de4839192b19bcb40e3786e6725_f5cef7c408d7b48a39b25df9e50585f4"/>
</c>
</cr>
</tm>
<e namespace="CryptoPP" access="none" name="CipherDir" id="5c1c5c04b0da674710abb2f6fef6fcfd_6075433aae4dfef163747f186ec0cf80" file="8" linestart="114" lineend="118">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="ENCRYPTION" id="5c1c5c04b0da674710abb2f6fef6fcfd_fd90fd52fe53db1cf1c53741243696bb" file="8" linestart="116" lineend="116">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_6075433aae4dfef163747f186ec0cf80"/>
</et>
</ec>
</e>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="InvalidArgument" id="5c1c5c04b0da674710abb2f6fef6fcfd_3c3269a71ce6dbcb3026ec479eb652e0" file="8" linestart="194" lineend="198">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1f873326493416a6f3df27cb7736e7b6"/>
</rt>
</base>
<c name="InvalidArgument" id="5c1c5c04b0da674710abb2f6fef6fcfd_121d23c057ed9b1d2762af6e1c7b1cff" file="8" linestart="197" lineend="197" explicit="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="s" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="8c4e62790b6098b6fde5c5da33f73a64_eec936a7b808facd5a6a87bf310b7f8c"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<c name="InvalidArgument" id="5c1c5c04b0da674710abb2f6fef6fcfd_dc8859017c1fcd4f915d3eb566a3b27f" file="8" linestart="194" lineend="194" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="CryptoPP::InvalidArgument &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_3c3269a71ce6dbcb3026ec479eb652e0"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="NameValuePairs" id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2" file="8" linestart="285" lineend="446">
<ft name="GetValueWithDefault" id="5c1c5c04b0da674710abb2f6fef6fcfd_15c0f1b219f6195469a6ed75766c1468" file="8" linestart="355" lineend="363">
<template_parameters>
<ttp name="T" id="5c1c5c04b0da674710abb2f6fef6fcfd_49abdad4f5dd9557a5a2a3ad62ee148d" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<m name="GetValueWithDefault" id="5c1c5c04b0da674710abb2f6fef6fcfd_dc34af6feff40209cf97da0efefca5f5" file="8" linestart="356" lineend="363" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="T">
<ttp/>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="defaultValue" proto="T" access2="none">
<ttp/>
</p>
</m>
</ft>
<m name="GetIntValueWithDefault" id="5c1c5c04b0da674710abb2f6fef6fcfd_c5385b6a9f2e63306696a8045bc7539e" file="8" linestart="388" lineend="389" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="defaultValue" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="Clonable" id="5c1c5c04b0da674710abb2f6fef6fcfd_378f319fc4f2b63076bfbc3a7f5c4552" file="8" linestart="495" lineend="506"/>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="Algorithm" id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a" file="8" linestart="510" lineend="532">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_378f319fc4f2b63076bfbc3a7f5c4552"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="SimpleKeyingInterface" id="5c1c5c04b0da674710abb2f6fef6fcfd_1eed4339a7ec216093bc14c615bc12b0" file="8" linestart="537" lineend="740">
<m name="MinKeyLength" id="5c1c5c04b0da674710abb2f6fef6fcfd_b036178c2e0723778f91b652b8e584f5" file="8" linestart="544" lineend="544" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
</m>
<m name="MaxKeyLength" id="5c1c5c04b0da674710abb2f6fef6fcfd_590f5a9a281c288edac477858c4d8757" file="8" linestart="547" lineend="547" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
</m>
<m name="DefaultKeyLength" id="5c1c5c04b0da674710abb2f6fef6fcfd_507811279278c90a15a75120886ad9f5" file="8" linestart="550" lineend="550" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
</m>
<m name="GetValidKeyLength" id="5c1c5c04b0da674710abb2f6fef6fcfd_4a43d0bb613383a351f74ebfd30e65e7" file="8" linestart="560" lineend="560" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="keylength" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="IsValidKeyLength" id="5c1c5c04b0da674710abb2f6fef6fcfd_a8187ae7bea36c3916fc8fd8d70b25a7" file="8" linestart="566" lineend="567" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="keylength" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="SetKey" id="5c1c5c04b0da674710abb2f6fef6fcfd_b1ff969b11028a8b2bd36cf55a6756b0" file="8" linestart="574" lineend="574" virtual="true" access="public">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="key" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="params" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" init="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<e parent="5c1c5c04b0da674710abb2f6fef6fcfd_1eed4339a7ec216093bc14c615bc12b0" access="public" name="IV_Requirement" id="5c1c5c04b0da674710abb2f6fef6fcfd_5a3ee629841e81f645a4ae1dc1917cd6" file="8" linestart="611" lineend="622">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="UNIQUE_IV" id="5c1c5c04b0da674710abb2f6fef6fcfd_ac1d07e67a0fa4071a2aa182956e22a2" file="8" linestart="613" lineend="613">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_5a3ee629841e81f645a4ae1dc1917cd6"/>
</et>
</ec>
<ec name="RANDOM_IV" id="5c1c5c04b0da674710abb2f6fef6fcfd_fe8731948434738997317198db6b344f" file="8" linestart="615" lineend="615">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_5a3ee629841e81f645a4ae1dc1917cd6"/>
</et>
</ec>
<ec name="UNPREDICTABLE_RANDOM_IV" id="5c1c5c04b0da674710abb2f6fef6fcfd_285c3a6f11d5b72b14fabadd886a97e1" file="8" linestart="617" lineend="617">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_5a3ee629841e81f645a4ae1dc1917cd6"/>
</et>
</ec>
<ec name="NOT_RESYNCHRONIZABLE" id="5c1c5c04b0da674710abb2f6fef6fcfd_4a286a6fd0c3e3bf22e5588baf49fc9c" file="8" linestart="621" lineend="621">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_5a3ee629841e81f645a4ae1dc1917cd6"/>
</et>
</ec>
</e>
<m name="IsResynchronizable" id="5c1c5c04b0da674710abb2f6fef6fcfd_c98aaf1782178154a98bf9ebd8030118" file="8" linestart="632" lineend="632" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="Resynchronize" id="5c1c5c04b0da674710abb2f6fef6fcfd_5de1f801bd924f175148acae77bc0cec" file="8" linestart="675" lineend="678" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="iv" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="ivLength" proto="int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="ThrowIfResynchronizable" id="5c1c5c04b0da674710abb2f6fef6fcfd_7f7d51c63d62b1c5594055627469b92c" file="8" linestart="713" lineend="713" access="protected">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="ThrowIfInvalidIV" id="5c1c5c04b0da674710abb2f6fef6fcfd_84c09cf393b6d59f5b40e1cded47206a" file="8" linestart="722" lineend="722" access="protected">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="iv" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
</m>
<m name="ThrowIfInvalidIVLength" id="5c1c5c04b0da674710abb2f6fef6fcfd_e2cd19aa77e9c5d6b7a4f3e801cecedb" file="8" linestart="727" lineend="727" access="protected">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="length" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="GetIVAndThrowIfInvalid" id="5c1c5c04b0da674710abb2f6fef6fcfd_998f7eededf95811802e085ddda82e85" file="8" linestart="734" lineend="734" access="protected">
<fpt cc="cdecl" proto="const byte *">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</fpt>
<p name="params" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</p>
<p name="size" proto="size_t &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</lrf>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="BlockTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_79e4efb1d5dda747eb8937a0b4d24406" file="8" linestart="747" lineend="831">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
<m name="ProcessAndXorBlock" id="5c1c5c04b0da674710abb2f6fef6fcfd_b5d53ff2b2095a429a4b131f20d89fcd" file="8" linestart="761" lineend="761" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="inBlock" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="xorBlock" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="outBlock" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
</m>
<m name="ProcessBlock" id="5c1c5c04b0da674710abb2f6fef6fcfd_f6fdb3cc22736f4f72c0a6da084ad008" file="8" linestart="771" lineend="772" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="inBlock" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="outBlock" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
</m>
<m name="ProcessBlock" id="5c1c5c04b0da674710abb2f6fef6fcfd_de71d968c2dacec31723d0a546c83db1" file="8" linestart="780" lineend="781" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="inoutBlock" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
</m>
<m name="BlockSize" id="5c1c5c04b0da674710abb2f6fef6fcfd_3a8288b2ca6bea8e84670801a3627a73" file="8" linestart="785" lineend="785" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="OptimalDataAlignment" id="5c1c5c04b0da674710abb2f6fef6fcfd_65ac5fde55e07dc13141748e9acc5796" file="8" linestart="789" lineend="789" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<m name="IsForwardTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_8c647326ef3e7481d1b0acb707aa8db5" file="8" linestart="797" lineend="797" pure="true" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="OptimalNumberOfParallelBlocks" id="5c1c5c04b0da674710abb2f6fef6fcfd_70e9f2f9680b6a4b5da4a5077643de5c" file="8" linestart="802" lineend="802" virtual="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
<e parent="5c1c5c04b0da674710abb2f6fef6fcfd_79e4efb1d5dda747eb8937a0b4d24406" access="public" name="FlagsForAdvancedProcessBlocks" id="5c1c5c04b0da674710abb2f6fef6fcfd_718d86a9a4dbdd6eb38272714477f385" file="8" linestart="805" lineend="815">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="BT_InBlockIsCounter" id="5c1c5c04b0da674710abb2f6fef6fcfd_70b94468d475008d9de489857985426f" file="8" linestart="807" lineend="807">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_718d86a9a4dbdd6eb38272714477f385"/>
</et>
</ec>
<ec name="BT_XorInput" id="5c1c5c04b0da674710abb2f6fef6fcfd_1c13354f0bd468c6afc1bb7b6b727fe0" file="8" linestart="811" lineend="811">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_718d86a9a4dbdd6eb38272714477f385"/>
</et>
</ec>
<ec name="BT_ReverseDirection" id="5c1c5c04b0da674710abb2f6fef6fcfd_a05de8821835f9b4661c6097955afb60" file="8" linestart="813" lineend="813">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_718d86a9a4dbdd6eb38272714477f385"/>
</et>
</ec>
<ec name="BT_AllowParallel" id="5c1c5c04b0da674710abb2f6fef6fcfd_2c19fd97d337a2e69b8a0c4ae2e54f84" file="8" linestart="815" lineend="815">
<et>
<e id="5c1c5c04b0da674710abb2f6fef6fcfd_718d86a9a4dbdd6eb38272714477f385"/>
</et>
</ec>
</e>
<m name="AdvancedProcessBlocks" id="5c1c5c04b0da674710abb2f6fef6fcfd_e7fd0978bf632431021a57682ef6b780" file="8" linestart="825" lineend="825" virtual="true" access="public">
<fpt cc="cdecl" const="true" proto="size_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="inBlocks" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="xorBlocks" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="outBlocks" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="flags" proto="word32" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
</m>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="StreamTransformation" id="5c1c5c04b0da674710abb2f6fef6fcfd_a0b12f51a580358015f21bd40217d86d" file="8" linestart="836" lineend="993">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="BlockCipher" id="5c1c5c04b0da674710abb2f6fef6fcfd_46cba31d9fbbff0cfc74779b2446a97e" file="8" linestart="1166" lineend="1170">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1eed4339a7ec216093bc14c615bc12b0"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_79e4efb1d5dda747eb8937a0b4d24406"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="3" kind="class" name="SymmetricCipher" id="5c1c5c04b0da674710abb2f6fef6fcfd_1676dc7dc5a26ab8bd31f0b62b5eeb32" file="8" linestart="1174" lineend="1178">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_1eed4339a7ec216093bc14c615bc12b0"/>
</rt>
</base>
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a0b12f51a580358015f21bd40217d86d"/>
</rt>
</base>
<c name="SymmetricCipher" id="5c1c5c04b0da674710abb2f6fef6fcfd_721fdb4bbef3b6aba01e0fd930d6a8fe" file="8" linestart="1174" lineend="1174" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="CryptoPP" access="none" depth="2" kind="class" name="RandomNumberGenerator" id="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4" file="8" linestart="1267" lineend="1349" previous="5c1c5c04b0da674710abb2f6fef6fcfd_af166ce364408b7f008e32e45f6725e4">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_5009149b9c610e40658e49ee8495fe2a"/>
</rt>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="0" pod="true" kind="class" name="Empty" id="1854966e082704a783697c5ac0b862ce_23d3e0feaeb020ade44e3ca98ed3cd28" file="9" linestart="197" lineend="199"/>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="ObjectHolder" id="1854966e082704a783697c5ac0b862ce_835f5bed45a95d84864327d1eaa68d48" file="9" linestart="218" lineend="222"/>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="AlgorithmImpl" id="24c688d13d29c77e002480b75c46e1ba_995360f65c4f832bf849db0dde1380bb" file="10" linestart="38" lineend="51">
<base access="public">
<ttp/>
</base>
</cr>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="AllocatorWithCleanup" id="d8d9268f1e37d2a96d5639565abceb80_7fb116f7399fb1195b61f8ed890e4dec" file="11" linestart="173" lineend="263">
<base access="public">
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_8fc6cf8542b2b2769cf4e4778cf5d797"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</base>
<tm parent="d8d9268f1e37d2a96d5639565abceb80_7fb116f7399fb1195b61f8ed890e4dec" access="none" depth="0" pod="true" kind="struct" name="rebind" id="d8d9268f1e37d2a96d5639565abceb80_9bf12acbba06946885137395cae2dced" file="11" linestart="258" lineend="258">
<template_parameters>
<ttp name="U" id="d8d9268f1e37d2a96d5639565abceb80_e05fbe7e0c659af004ef8a5b4f79d8b1" depth="1" index="0" proto="type-parameter-1-0"/>
</template_parameters>
</tm>
</cr>
<tm namespace="CryptoPP" access="none" depth="0" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_529e895b0d6705ae93e9e85d4873c1ec" file="11" linestart="458" lineend="823">
<template_parameters>
<ttp name="T" id="d8d9268f1e37d2a96d5639565abceb80_4352ad0d073fbe1f018db49d3597c830" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="A" id="d8d9268f1e37d2a96d5639565abceb80_c19aed8731dd9754453eed7c467a9a92" depth="0" index="1" proto="type-parameter-0-1">
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_7fb116f7399fb1195b61f8ed890e4dec"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ttp>
</template_parameters>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb" file="11" linestart="459" lineend="823">
<cr access="public" kind="class" name="SecBlock" id="d8d9268f1e37d2a96d5639565abceb80_a2ad445b9b4af6e3604b7d5d74bb410e" file="11" linestart="459" lineend="459"/>
<e parent="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb" access="public" name="" id="d8d9268f1e37d2a96d5639565abceb80_a968094d426fc14c686c36c6f00b560d" file="11" linestart="482" lineend="482" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<Tdef>
<DependentName/>
</Tdef>
</integer_type>
</e>
<cv name="operator void *" id="d8d9268f1e37d2a96d5639565abceb80_cc201f4bbd9dd6020bbaf085c3282afb" file="11" linestart="530" lineend="531" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void *">
<pt>
<bt name="void"/>
</pt>
</fpt>
</cv>
<cv name="operator T *" id="d8d9268f1e37d2a96d5639565abceb80_acb059dc354737efe5aa1db0c8e381a0" file="11" linestart="535" lineend="536" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="T *">
<pt>
<ttp/>
</pt>
</fpt>
</cv>
<m name="size" id="d8d9268f1e37d2a96d5639565abceb80_d09e4bef4229ebd8ef857d318d5ee27c" file="11" linestart="566" lineend="566" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" const="true" proto="size_type">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="operator=" id="d8d9268f1e37d2a96d5639565abceb80_1c03c67de595fb37e00f50ce4b89f904" file="11" linestart="655" lineend="660" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="SecBlock&lt;T, A&gt; &amp;">
<lrf>
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="t" proto="const SecBlock&lt;T, A&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
</m>
<m name="New" id="d8d9268f1e37d2a96d5639565abceb80_8c7be99526ce55ae2b9b134e354f7a32" file="11" linestart="734" lineend="739" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="newSize" proto="size_type" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
<m name="swap" id="d8d9268f1e37d2a96d5639565abceb80_59dc8be56f46f41d7df4d2d9c2a38fb4" file="11" linestart="810" lineend="817" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="b" proto="SecBlock&lt;T, A&gt; &amp;" isRef="true" access2="none">
<lrf>
<tss>
<templatebase id="d8d9268f1e37d2a96d5639565abceb80_82e86007bba8ab6a282104474d0f72fb"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</p>
</m>
</cr>
</tm>
<cr namespace="CryptoPP" access="none" depth="0" pod="true" kind="struct" name="SymmetricCipherDocumentation" id="9bd98d6c6151b905d6b217a4a5c8dbf3_44d075c662e23f7ac147a083fdc19804" file="12" linestart="599" lineend="605"/>
<e namespace="CryptoPP" access="none" name="KeystreamOperation" id="4ba667753f8588c489fb21ea2c061159_a7a6fc0c0ae845a22d50edf71d186c17" file="2" linestart="90" lineend="102">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="WRITE_KEYSTREAM" id="4ba667753f8588c489fb21ea2c061159_bba113deab24647dcfd3d6ce28fd98ca" file="2" linestart="92" lineend="92">
<et>
<e id="4ba667753f8588c489fb21ea2c061159_a7a6fc0c0ae845a22d50edf71d186c17"/>
</et>
</ec>
</e>
<cr namespace="CryptoPP" access="none" depth="0" kind="struct" name="AdditiveCipherAbstractPolicy" id="4ba667753f8588c489fb21ea2c061159_6e574da14d21388a5ba5166803f626f1" file="2" linestart="106" lineend="176"/>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="CFB_CipherAbstractPolicy" id="4ba667753f8588c489fb21ea2c061159_43b926e1f0d081e8c2e8ff03074513b6" file="2" linestart="349" lineend="397"/>
<cr namespace="CryptoPP" access="none" depth="0" kind="class" name="ConstByteArrayParameter" id="9ac08af66a6df584911ebdf42c775dfe_52c7a5925454e812d7c1553551dcbf91" file="13" linestart="31" lineend="102"/>
<cr namespace="CryptoPP" access="none" depth="1" kind="class" name="AlgorithmParameters" id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d" file="13" linestart="433" lineend="498" previous="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d">
<base access="public">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</base>
<ft name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_55da26a3b388f042cdb57c2f3f80778a" file="13" linestart="487" lineend="491">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_297ccd806106bdb141b1edb35bfb0111" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<m name="operator()" id="9ac08af66a6df584911ebdf42c775dfe_d812482b1b0c416773a27ba9b1afc2e6" file="13" linestart="488" lineend="491" operator="true" access="public" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::AlgorithmParameters &amp;">
<lrf>
<rt>
<cr id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d"/>
</rt>
</lrf>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</m>
</ft>
</cr>
<f name="memcpy" id="0ebe9cde6661249e1dd240987ca511cc_60bc7b595257868b3d58e003eb334889" file="14" linestart="72" lineend="72" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f name="memset" id="0ebe9cde6661249e1dd240987ca511cc_01f056bb0311297cf054435e7cf7ee95" file="14" linestart="74" lineend="74" extC="true" imported="true" access="none">
<Attributed/>
<p name="" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<v namespace="CryptoPP" name="g_nullNameValuePairs" proto="const CryptoPP::NameValuePairs &amp;" isRef="true" isLiteral="true" id="5c1c5c04b0da674710abb2f6fef6fcfd_4c192a29d97607a0d769b5f6d54db1a2" file="8" linestart="487" lineend="487" storage="extern" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="5c1c5c04b0da674710abb2f6fef6fcfd_a7c7f7b2b2dcb016676539dbff7d02e2"/>
</rt>
</QualType>
</lrf>
</v>
<f namespace="CryptoPP" name="memcpy_s" id="1854966e082704a783697c5ac0b862ce_a6684231dc9f525b9f8273e5d4be435d" file="9" linestart="386" lineend="408" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="dest" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="sizeInBytes" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="src" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="memmove_s" id="1854966e082704a783697c5ac0b862ce_82d9c325801794d98f96b31030a39b6c" file="9" linestart="428" lineend="450" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="dest" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="sizeInBytes" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
<p name="src" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="UnsignedMin" id="1854966e082704a783697c5ac0b862ce_8ab0e49d2819144883ba7c1026f9abd7" file="9" linestart="537" lineend="544" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T1">
<QualType const="true">
<ttp/>
</QualType>
</fpt>
<p name="a" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="UnsignedMin" id="1854966e082704a783697c5ac0b862ce_352b7b0afcf96b6300b5753279865169" file="9" linestart="537" lineend="544">
<template_parameters>
<ttp name="T1" id="1854966e082704a783697c5ac0b862ce_653d02f670acc4a97c9f8334baa181b9" depth="0" index="0" proto="type-parameter-0-0"/>
<ttp name="T2" id="1854966e082704a783697c5ac0b862ce_c33d83e5848c3f09167548765c83d46a" depth="0" index="1" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="CryptoPP" name="UnsignedMin" id="1854966e082704a783697c5ac0b862ce_8ab0e49d2819144883ba7c1026f9abd7" file="9" linestart="537" lineend="544" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const T1">
<QualType const="true">
<ttp/>
</QualType>
</fpt>
<p name="a" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="b" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="CryptoPP" name="xorbuf" id="1854966e082704a783697c5ac0b862ce_a05a6ddc6cdbb2b2b3ee23e81595c81d" file="9" linestart="822" lineend="822" access="none">
<Attributed/>
<p name="buf" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="mask" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="xorbuf" id="1854966e082704a783697c5ac0b862ce_0863fccfb36da26126bbcfa2499f4dbf" file="9" linestart="831" lineend="831" access="none">
<Attributed/>
<p name="output" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="input" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="mask" proto="const byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</QualType>
</pt>
</p>
<p name="count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</f>
<f namespace="CryptoPP" name="IncrementCounterByOne" id="1854966e082704a783697c5ac0b862ce_046394814b49a463d8cf3a57709f8948" file="9" linestart="1099" lineend="1104" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="inout" proto="byte *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<bt name="unsigned char"/>
</Tdef>
</pt>
</p>
<p name="size" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</f>
<f namespace="CryptoPP.Name" name="IV" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_bb894387a55efb3beaacce599c28c777" file="15" linestart="21" lineend="21" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="StolenIV" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_454b64f259669e1bd14a9cc62e80007b" file="15" linestart="22" lineend="22" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP.Name" name="FeedbackSize" id="7dee9d36aeb6edbf5e3c4ccbfb361c02_669e23dad7f5ce93b8818d363b519a5f" file="15" linestart="25" lineend="25" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</f>
<f namespace="CryptoPP" name="MakeParameters" id="9ac08af66a6df584911ebdf42c775dfe_d58bab297202d6375273e3908ed347da" file="13" linestart="516" lineend="519" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::AlgorithmParameters">
<rt>
<cr id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d"/>
</rt>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="throwIfNotUsed" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</f>
<ft name="MakeParameters" id="9ac08af66a6df584911ebdf42c775dfe_418aa8fa994b4d2fc8d47c8c2d24fd30" file="13" linestart="515" lineend="519">
<template_parameters>
<ttp name="T" id="9ac08af66a6df584911ebdf42c775dfe_4c840efcc8b43a1a249fe67fcffd4445" depth="0" index="0" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="CryptoPP" name="MakeParameters" id="9ac08af66a6df584911ebdf42c775dfe_d58bab297202d6375273e3908ed347da" file="13" linestart="516" lineend="519" access="none" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="CryptoPP::AlgorithmParameters">
<rt>
<cr id="9ac08af66a6df584911ebdf42c775dfe_7e9278477c3f559e5728326d1a33ce7d"/>
</rt>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="throwIfNotUsed" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
</f>
</ft>
</Externals>

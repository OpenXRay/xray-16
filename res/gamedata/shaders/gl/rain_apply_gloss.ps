#include "common.h"
#include "lmodel.h"
//include "shadow.h"
#include "iostructs\p_rain_apply.h"

#ifndef ISAMPLE
#define ISAMPLE uint(0)
#endif

#ifndef USE_MSAA
Texture2D	s_patched_normal;
#else
Texture2DMS	s_patched_normal;
#endif

#ifdef MSAA_OPTIMIZATION
float4 _main ( float2 tc, float2 tcJ, uint iSample )
#else
float4 _main ( float2 tc, float2 tcJ )
#endif
{
#ifndef USE_MSAA
	float Gloss = tex2D( s_patched_normal, tc ).a;
#else
#ifndef MSAA_OPTIMIZATION
	float Gloss = texelFetch( s_patched_normal, int2(tc * pos_decompression_params2.xy), ISAMPLE ).a;
#else
	float Gloss = texelFetch( s_patched_normal, int2(tc * pos_decompression_params2.xy), int(iSample) ).a;
#endif	
#endif

//	float ColorIntencity = 1.0 - Gloss*0.5;

	float ColorIntencity = 1.0 - sqrt(Gloss);

//	ColorIntencity = max (ColorIntencity, 0.75);
	ColorIntencity = max (ColorIntencity, 0.5);

//	float ColorIntencity = (Gloss-0.1)/(Gloss+0.00001);

//	ColorIntencity = min (ColorIntencity, 1.0);

	//return float4(1,1,1,Gloss);
	return float4( ColorIntencity, ColorIntencity, ColorIntencity, Gloss*0.8);
}

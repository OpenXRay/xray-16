class "opt_gameplay" (CUIWindow)

function opt_gameplay:__init() super()
end

function opt_gameplay:__finalize()

end

function opt_gameplay:InitControls(x, y, xml, handler)
    local _st
    local ctl

    self.scroll_v = xml:InitScrollView("tab_gameplay:scroll_v", self)

	self:SetWndPos(vector2():set(x,y))
	self:SetWndSize(vector2():set(738,416))
	self:SetAutoDelete(true)

--	self.bk = xml:InitFrame("frame_gameplay", self)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_difficulty", _st)
	xml:InitComboBox("tab_gameplay:list_difficulty", _st)
	self.scroll_v:AddWindow(_st, true)
    
	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_localization", _st)
	xml:InitComboBox("tab_gameplay:list_localization", _st)
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_ui_style", _st)
	xml:InitComboBox("tab_gameplay:list_ui_style", _st)
	self.scroll_v:AddWindow(_st, true)
	
	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_fov", _st)
	xml:InitTrackBar("tab_gameplay:track_fov", _st)
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_tips", _st)
	xml:InitCheck("tab_gameplay:check_tips", _st)
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_crosshair", _st)
	xml:InitCheck("tab_gameplay:check_crosshair", _st)
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_dyn_crosshair", _st)
	xml:InitCheck("tab_gameplay:check_dyn_crosshair", _st)
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_show_weapon", _st)
	xml:InitCheck("tab_gameplay:check_show_weapon", _st)
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_dist", _st)
	xml:InitCheck("tab_gameplay:check_dist", _st)
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_important_save", _st)
	xml:InitCheck("tab_gameplay:check_important_save", _st)
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_crouch_toggle", _st)
	xml:InitCheck("tab_gameplay:check_crouch_toggle", _st)
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_hud_draw", _st)
	xml:InitCheck("tab_gameplay:check_hud_draw", _st)
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_simplified_item_pickup", _st)
	ctl = xml:InitCheck("tab_gameplay:check_simplified_item_pickup", _st)
	handler.check_simple_pickup = ctl
	handler:Register(ctl, "check_simple_pickup")
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_multi_item_pickup", _st)
	ctl = xml:InitCheck("tab_gameplay:check_multi_item_pickup", _st)
	handler.check_multi_pickup = ctl
	handler:Register(ctl, "check_multi_pickup")
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_loadingstages", _st)
	xml:InitCheck("tab_gameplay:check_loadingstages", _st)
	self.scroll_v:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_unload_after_pickup", _st)
	xml:InitCheck("tab_gameplay:unload_after_pickup", _st)
	self.scroll_v:AddWindow(_st, true)

	local btn
	btn = xml:Init3tButton	("tab_gameplay:btn_check_updates", self)
	handler:Register		(btn, "btn_check_updates")
end
